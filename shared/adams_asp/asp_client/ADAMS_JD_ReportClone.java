/*
 * ADAMS_JD_ReportClone.java
 *
 * Created on 12 agosto 2005, 12.10
 */

/**
 *
 * @author  Raffaele Ficcadenti
 */

import java.awt.Toolkit;
import java.awt.Dimension;
import java.awt.Cursor;
import javax.swing.table.*;
import javax.swing.DefaultCellEditor;
import java.util.*;
import java.sql.*;


public class ADAMS_JD_ReportClone extends javax.swing.JDialog {
    
    private boolean                                 DEBUG                       = false;
    private Cursor                                  Cur_default                 = new Cursor(Cursor.DEFAULT_CURSOR);
    private Cursor                                  Cur_wait                    = new Cursor(Cursor.WAIT_CURSOR);
    private Cursor                                  Cur_hand                    = new Cursor(Cursor.HAND_CURSOR);
    private ADAMS_JP_ReportSchema                    rs                          = null;
    private String                                  config_NAME_ALIAS           = null; 
    /** Creates new form ADAMS_JD_ReportClone */
    public ADAMS_JD_ReportClone(boolean modal,ADAMS_JP_ReportSchema rs) 
    {
        super(ADAMS_GlobalParam.ADAMS_JD_Report, true);
        
        this.rs=rs;
        initComponents();
        
        jT_t1.setDocument(new JTextFieldFilter(JTextFieldFilter.NUMERIC+JTextFieldFilter.ALPHA+JTextFieldFilter.SOMESYMBOLS,30));
        jT_t2.setDocument(new JTextFieldFilter(JTextFieldFilter.NUMERIC+JTextFieldFilter.ALPHA+JTextFieldFilter.SOMESYMBOLS,30));
        
        config_NAME_ALIAS=rs.getConfigName();
        jT_t1.setText(""+rs.getReportName());
        
        setCenteredFrame(400,230);
        this.getContentPane().setBackground(new java.awt.Color(230, 230, 230));
        //show();
        this.setVisible(true);
    }
    
    public void setFont()
    {
        jL_l1.setFont(ADAMS_GlobalParam.font_B11);
        jL_l2.setFont(ADAMS_GlobalParam.font_B11);
        jT_t1.setFont(ADAMS_GlobalParam.font_B11);
        jT_t2.setFont(ADAMS_GlobalParam.font_B11);
    }
    
    public void setCursorWidget()
    {    
        jT_t1.setCursor(Cur_hand);
        jT_t2.setCursor(Cur_hand);
        jB_b1.setCursor(Cur_hand);
        jB_b2.setCursor(Cur_hand);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jP_p0 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextArea2 = new javax.swing.JTextArea();
        jP_p1 = new javax.swing.JPanel();
        jL_l1 = new javax.swing.JLabel();
        jT_t1 = new javax.swing.JTextField();
        jL_l2 = new javax.swing.JTextArea();
        jT_t2 = new javax.swing.JTextField();
        jP_p3 = new javax.swing.JPanel();
        jB_b1 = new javax.swing.JButton();
        jB_b2 = new javax.swing.JButton();
        
        getContentPane().setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        
        setTitle("Clone Report Schema");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        
        jP_p0.setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints2;
        
        jP_p0.setBackground(new java.awt.Color(230, 230, 230));
        jLabel3.setBackground(new java.awt.Color(230, 230, 230));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clone.png")));
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel3.setOpaque(true);
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints2.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints2.weighty = 1.0;
        jP_p0.add(jLabel3, gridBagConstraints2);
        
        jTextArea2.setBackground(java.awt.Color.yellow);
        jTextArea2.setLineWrap(true);
        jTextArea2.setText("This dialog will duplicate an existing Report Schema !");
        jTextArea2.setWrapStyleWord(true);
        jTextArea2.setBorder(new javax.swing.border.EtchedBorder());
        jTextArea2.setDisabledTextColor(java.awt.Color.black);
        jTextArea2.setEnabled(false);
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 0;
        gridBagConstraints2.gridy = 1;
        gridBagConstraints2.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints2.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints2.weightx = 1.0;
        gridBagConstraints2.weighty = 1.0;
        jP_p0.add(jTextArea2, gridBagConstraints2);
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints1.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints1.weighty = 1.0;
        getContentPane().add(jP_p0, gridBagConstraints1);
        
        jP_p1.setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints3;
        
        jP_p1.setBackground(new java.awt.Color(230, 230, 230));
        jP_p1.setBorder(new javax.swing.border.EtchedBorder());
        jL_l1.setText("Report Schema to be cloned");
        gridBagConstraints3 = new java.awt.GridBagConstraints();
        gridBagConstraints3.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints3.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints3.weightx = 1.0;
        gridBagConstraints3.weighty = 1.0;
        jP_p1.add(jL_l1, gridBagConstraints3);
        
        jT_t1.setDisabledTextColor(java.awt.Color.black);
        jT_t1.setEnabled(false);
        gridBagConstraints3 = new java.awt.GridBagConstraints();
        gridBagConstraints3.gridx = 0;
        gridBagConstraints3.gridy = 1;
        gridBagConstraints3.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints3.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints3.weightx = 1.0;
        gridBagConstraints3.weighty = 1.0;
        jP_p1.add(jT_t1, gridBagConstraints3);
        
        jL_l2.setBackground(new java.awt.Color(230, 230, 230));
        jL_l2.setEditable(false);
        jL_l2.setFont(new java.awt.Font("Dialog", 1, 12));
        jL_l2.setLineWrap(true);
        jL_l2.setText("Enter in the textfield below a name for new CLONED report. You'll find your Report Schema under this name");
        jL_l2.setWrapStyleWord(true);
        gridBagConstraints3 = new java.awt.GridBagConstraints();
        gridBagConstraints3.gridx = 0;
        gridBagConstraints3.gridy = 2;
        gridBagConstraints3.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints3.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints3.weightx = 1.0;
        gridBagConstraints3.weighty = 1.0;
        jP_p1.add(jL_l2, gridBagConstraints3);
        
        gridBagConstraints3 = new java.awt.GridBagConstraints();
        gridBagConstraints3.gridx = 0;
        gridBagConstraints3.gridy = 3;
        gridBagConstraints3.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints3.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints3.weightx = 1.0;
        gridBagConstraints3.weighty = 1.0;
        jP_p1.add(jT_t2, gridBagConstraints3);
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints1.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints1.weightx = 1.0;
        gridBagConstraints1.weighty = 1.0;
        getContentPane().add(jP_p1, gridBagConstraints1);
        
        jP_p3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));
        
        jP_p3.setBackground(new java.awt.Color(230, 230, 230));
        jP_p3.setBorder(new javax.swing.border.EtchedBorder());
        jB_b1.setBackground(new java.awt.Color(230, 230, 230));
        jB_b1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/apply.jpg")));
        jB_b1.setBorder(null);
        jB_b1.setBorderPainted(false);
        jB_b1.setContentAreaFilled(false);
        jB_b1.setFocusPainted(false);
        jB_b1.setMaximumSize(new java.awt.Dimension(80, 20));
        jB_b1.setMinimumSize(new java.awt.Dimension(80, 20));
        jB_b1.setPreferredSize(new java.awt.Dimension(80, 20));
        jB_b1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/apply_press.jpg")));
        jB_b1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/apply_over.jpg")));
        jB_b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_b1ActionPerformed(evt);
            }
        });
        
        jP_p3.add(jB_b1);
        
        jB_b2.setForeground(java.awt.Color.red);
        jB_b2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.jpg")));
        jB_b2.setBorderPainted(false);
        jB_b2.setContentAreaFilled(false);
        jB_b2.setFocusPainted(false);
        jB_b2.setMaximumSize(new java.awt.Dimension(80, 20));
        jB_b2.setMinimumSize(new java.awt.Dimension(80, 20));
        jB_b2.setPreferredSize(new java.awt.Dimension(80, 20));
        jB_b2.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close_press.jpg")));
        jB_b2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close_over.jpg")));
        jB_b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_b1ActionPerformed(evt);
            }
        });
        
        jP_p3.add(jB_b2);
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 0;
        gridBagConstraints1.gridy = 1;
        gridBagConstraints1.gridwidth = 2;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints1.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints1.weightx = 1.0;
        gridBagConstraints1.weighty = 1.0;
        getContentPane().add(jP_p3, gridBagConstraints1);
        
        pack();
    }//GEN-END:initComponents

    private void jB_b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_b1ActionPerformed
        // Add your handling code here:
        if (evt.getSource() == jB_b1) 
        {
            if(jT_t2.getText().equals(""))
            {
                ADAMS_GlobalParam.optionPanel(this,"Undefined new report name.","ERROR",1);
            }else if( rs.isPresentReport(jT_t2.getText())!=-1 )
            {
                ADAMS_GlobalParam.optionPanel(this,"Report Schema ["+jT_t2.getText()+"] alreay present.","ERROR",1);    
            }else
            {
                //ok, clona
                String strSelect="select IDREPORTSCHEMA_seq.nextVal from dual";
                int idObj  = ADAMS_GlobalParam.connect_Oracle.Query_int(strSelect);
                
                 //strSelect="insert into tab_report select TIPO_DI_CONFIGURAZIONE,"+idObj+",IDOBJECT_seq.NextVal,TYPE,SUB_TYPE,'"+jT_t2.getText()+"',HTML_VSIZE,HTML_HSIZE,HTML_VALIGN,HTML_HALIGN,HTML_WRAP,HTML_FOREGROUND,HTML_FOREGROUND_R,HTML_FOREGROUND_G,HTML_FOREGROUND_B,HTML_BACKGROUND,HTML_BACKGROUND_R,HTML_BACKGROUND_G,HTML_BACKGROUND_B,HTML_STYLE,HTML_FONTSIZE,HTML_BOLD,HTML_ITALIC,HTML_UNDERLINE,OBJECT_TAG,OBJECT_HASBORDER,OBJECT_SIMPLEBODY,OBJECT_EXCELCSV,OBJECT_IDANALISYS,OBJECT_USEPLUGIN,OBJECT_PLUGINNAME,OBJECT_DEFAULT_FOREGROUND_R,OBJECT_DEFAULT_FOREGROUND_G,OBJECT_DEFAULT_FOREGROUND_B,OBJECT_DEFAULT_BACKGROUND_R,OBJECT_DEFAULT_BACKGROUND_G,OBJECT_DEFAULT_BACKGROUND_B,HEADER_USERLABEL,HEADER_VALUE,HEADER_USERVALUE,HEADER_ISURL,HEADER_LINE,0,BODY_IDKEY,BODY_IDCOUNTER,BODY_TAGCOUNTER,0,BODY_PLUGIN_TAG,BODY_PLUGIN_NAME,BODY_USERVALUE,BODY_ISURL,BODY_TOTALIZER,BODY_LINE,BODY_MAXDECIMALDIGIT,TOTALIZER_TRIGGER,TOTALIZER_LABEL,TOTALIZER_REDRAWHEADER,TOTALIZER_BORDERAROUND,TOTALIZER_LINE,0,0,FOOTER_SOURCE,FOOTER_LABEL,FOOTER_USERVALUE,FOOTER_ISURL,FOOTER_LINE from tab_report where tipo_di_configurazione='"+config_NAME_ALIAS+"' and tag='"+jT_t1.getText()+"'";
                strSelect="insert into tab_report select TIPO_DI_CONFIGURAZIONE,"+idObj+",IDOBJECT_seq.NextVal,TYPE,SUB_TYPE,'"+jT_t2.getText()+"',HTML_VSIZE,HTML_HSIZE,HTML_VALIGN,HTML_HALIGN,HTML_WRAP,HTML_FOREGROUND,HTML_FOREGROUND_R,HTML_FOREGROUND_G,HTML_FOREGROUND_B,HTML_BACKGROUND,HTML_BACKGROUND_R,HTML_BACKGROUND_G,HTML_BACKGROUND_B,HTML_STYLE,HTML_FONTSIZE,HTML_BOLD,HTML_ITALIC,HTML_UNDERLINE,OBJECT_TAG,OBJECT_HASBORDER,OBJECT_SIMPLEBODY,OBJECT_EXCELCSV,OBJECT_IDANALISYS,OBJECT_USEPLUGIN,OBJECT_PLUGINNAME,OBJECT_DEFAULT_FOREGROUND_R,OBJECT_DEFAULT_FOREGROUND_G,OBJECT_DEFAULT_FOREGROUND_B,OBJECT_DEFAULT_BACKGROUND_R,OBJECT_DEFAULT_BACKGROUND_G,OBJECT_DEFAULT_BACKGROUND_B,HEADER_USERLABEL,HEADER_VALUE,HEADER_USERVALUE,HEADER_ISURL,HEADER_LINE,BODY_SOURCE,BODY_IDKEY,BODY_IDCOUNTER,BODY_TAGCOUNTER,BODY_IDSCRIPT,BODY_PLUGIN_TAG,BODY_PLUGIN_NAME,BODY_USERVALUE,BODY_ISURL,BODY_TOTALIZER,BODY_LINE,BODY_MAXDECIMALDIGIT,TOTALIZER_TRIGGER,TOTALIZER_LABEL,TOTALIZER_REDRAWHEADER,TOTALIZER_BORDERAROUND,TOTALIZER_LINE,TOTALIZER_USESCRIPT,TOTALIZER_IDSCRIPT,FOOTER_SOURCE,FOOTER_LABEL,FOOTER_USERVALUE,FOOTER_ISURL,FOOTER_LINE,POSIZIONE,BODY_REPEATKEY from tab_report where tipo_di_configurazione='"+config_NAME_ALIAS+"' and tag='"+jT_t1.getText()+"'";
                
                int rs = ADAMS_GlobalParam.connect_Oracle.Query_rs_update(strSelect);
                ADAMS_GlobalParam.optionPanel(this,"Report Schema ["+jT_t1.getText()+"] has been cloned as ["+jT_t2.getText()+"].","Info",3);
                ADAMS_GlobalParam.clonato=true;
                clonaTotalizer();
                clonaFooter();
                this.rs.addListaReport((String)jT_t2.getText());
                closeDialog();
                this.rs.reloadReport();
                
                if(DEBUG)
                {
                        System.out.println("ADAMS_JD_ReportClone [CLONE_REPORT] ---> "+strSelect);
                }
                
                
                // CLONE SCRIPT_BODY:
                
                strSelect="select BODY_IDSCRIPT from tab_report where TIPO_DI_CONFIGURAZIONE='"+config_NAME_ALIAS+"' and tag='"+jT_t1.getText()+"'";
                if(DEBUG)
                {
                        System.out.println("************* CLONE SCRIPT_BODY ******************");
                        System.out.println("ADAMS_JD_ReportClone [SCRIPT_BODY] ---> "+strSelect);
                }
                Statement SQLStatement = ADAMS_GlobalParam.connect_Oracle.createLocalStatement();
                ResultSet rsID_DA_CLONARE  = ADAMS_GlobalParam.connect_Oracle.Query_RS_Statement(strSelect,SQLStatement);
                int cont=0;
                if(rsID_DA_CLONARE != null)
                {
                    try
                    {
                        while ( rsID_DA_CLONARE.next ( ) ) 
                        {
                            cont++;
                            int id_script=rsID_DA_CLONARE.getInt("BODY_IDSCRIPT");
                            if(id_script>0)
                            {
                                strSelect="select IDSCRIPT_seq.nextVal from dual";
                                int new_id_script  = ADAMS_GlobalParam.connect_Oracle.Query_int(strSelect);
                                
                                //System.out.println("Clone["+cont+"] SCRIPT_BODY="+id_script+" IN="+new_id_script);
                                strSelect="insert intotab_scripts select TIPO_DI_CONFIGURAZIONE,"+new_id_script+",TAG,NUMVARIABLE1,NUMVARIABLE2,NUMSCRIPTTEXT,VARIABLES1,VARIABLES2,SCRIPTTEXT,RESULTVARNAME,RESULTTYPE,FLAG_VALIDATE from tab_scripts where IDSCRIPT="+id_script;
                                if(DEBUG)
                                {
                                        System.out.println("ADAMS_JD_ReportClone [SCRIPT_BODY_CLONE] ---> "+strSelect);
                                }
                                int rsClone = ADAMS_GlobalParam.connect_Oracle.Query_rs_update(strSelect);
                                if(rsClone>0)
                                {
                                    strSelect="update tab_report set BODY_IDSCRIPT="+new_id_script+" where TIPO_DI_CONFIGURAZIONE='"+config_NAME_ALIAS+"' and tag='"+jT_t2.getText()+"' and BODY_IDSCRIPT="+id_script;
                                    if(DEBUG)
                                    {
                                            System.out.println("ADAMS_JD_ReportClone [UPDATE_REPORT_CLONATO_BODY] ---> "+strSelect);
                                    }
                                    int rsReportUpdate = ADAMS_GlobalParam.connect_Oracle.Query_rs_update(strSelect);
                                }
                            }
                        }
                    }catch (Exception ex) 
                    {
                        System.out.println(ex);
                    }
                    
                    ADAMS_GlobalParam.setLAST_MODIFICATION_TIME(config_NAME_ALIAS);
                }else
                {
                    System.out.println("ADAMS_JD_ReportClone [SCRIPT_BODY] ----> rsID_DA_CLONARE==null");
                }
                try
                {
                    SQLStatement.close();
                }
                catch(java.sql.SQLException exc) 
                {
                    System.out.println("ERROR-SQL Operation " + exc.toString());
                }
                
                
                // CLONE SCRIPT_TOTALIZER:
                
                strSelect="select TOTALIZER_IDSCRIPT from tab_report where TIPO_DI_CONFIGURAZIONE='"+config_NAME_ALIAS+"' and tag='"+jT_t1.getText()+"'";
                if(DEBUG)
                {
                    System.out.println("************* CLONE SCRIPT_TOTALIZER ******************");
                    System.out.println("ADAMS_JD_ReportClone [SCRIPT_TOTALIZER] ---> "+strSelect);
                }
                
                SQLStatement = ADAMS_GlobalParam.connect_Oracle.createLocalStatement();
                ResultSet rsID_DA_CLONARE1  = ADAMS_GlobalParam.connect_Oracle.Query_RS_Statement(strSelect,SQLStatement);
                if(rsID_DA_CLONARE1 != null)
                {
                    try
                    {
                        while ( rsID_DA_CLONARE1.next ( ) ) 
                        {
                            int id_script1=rsID_DA_CLONARE1.getInt("TOTALIZER_IDSCRIPT");
                            if(id_script1>0)
                            {
                                strSelect="select IDSCRIPT_seq.nextVal from dual";
                                int new_id_script1  = ADAMS_GlobalParam.connect_Oracle.Query_int(strSelect);
                                
                                //System.out.println("Clone SCRIPT_TOTALIZER="+id_script1+" IN="+new_id_script1);
                                
                                strSelect="insert intotab_scripts select TIPO_DI_CONFIGURAZIONE,"+new_id_script1+",TAG,NUMVARIABLE1,NUMVARIABLE2,NUMSCRIPTTEXT,VARIABLES1,VARIABLES2,SCRIPTTEXT,RESULTVARNAME,RESULTTYPE,FLAG_VALIDATE from tab_scripts where IDSCRIPT="+id_script1;
                                if(DEBUG)
                                {
                                        System.out.println("ADAMS_JD_ReportClone [SCRIPT_TOTALIZER_CLONE] ---> "+strSelect);
                                }
                                int rsClone1 = ADAMS_GlobalParam.connect_Oracle.Query_rs_update(strSelect);
                                if(rsClone1>0)
                                {
                                    strSelect="update tab_report set TOTALIZER_IDSCRIPT="+new_id_script1+" where TIPO_DI_CONFIGURAZIONE='"+config_NAME_ALIAS+"' and tag='"+jT_t2.getText()+"' and TOTALIZER_IDSCRIPT="+id_script1;
                                    if(DEBUG)
                                    {
                                            System.out.println("ADAMS_JD_ReportClone [UPDATE_REPORT_CLONATO_TOTALIZER] ---> "+strSelect);
                                    }
                                    int rsReportUpdate1 = ADAMS_GlobalParam.connect_Oracle.Query_rs_update(strSelect);
                                }
                            }
                        }
                    }catch (Exception ex) 
                    {
                        System.out.println(ex);
                    }  
                }else
                {
                    System.out.println("ADAMS_JD_ReportClone [SCRIPT_TOTALIZER] ----> rsID_DA_CLONARE1==null");
                }
                try
                {
                    SQLStatement.close();
                }
                catch(java.sql.SQLException exc) 
                {
                    System.out.println("ERROR-SQL Operation " + exc.toString());
                }
            }
            //fare la select per il clone di config_NAME_SCHEMA,jT_t1.getText();
        }else if (evt.getSource() == jB_b2) 
        {
            closeDialog();
        }
    }//GEN-LAST:event_jB_b1ActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    public void clonaFooter()
    {
        String sorg=jT_t1.getText();
        String dest=jT_t2.getText();
        
        String strSelect="select OBJECT_TAG,IDOBJECT from tab_report where IDOBJECT in (select FOOTER_SOURCE from tab_report where TIPO_DI_CONFIGURAZIONE='"+config_NAME_ALIAS+"' and TAG='"+sorg+"' AND FOOTER_SOURCE>0)";
        if(DEBUG)
        {
            System.out.println("strSelect(FOOTER)=" + strSelect);
        }
        
        Statement SQLStatement = ADAMS_GlobalParam.connect_Oracle.createLocalStatement();
        ResultSet rsFOOTER  = ADAMS_GlobalParam.connect_Oracle.Query_RS(strSelect,SQLStatement);
          
        Vector TAG=new Vector();
        Vector ID=new Vector();
        Vector NEWID=new Vector();
        
        if(rsFOOTER != null)
        {
            try
            {
                while ( rsFOOTER.next ( ) ) 
                {
                    String objTAG=rsFOOTER.getString("OBJECT_TAG");
                    int objID=rsFOOTER.getInt("IDOBJECT");
                    TAG.addElement(objTAG);
                    ID.addElement(new Integer(objID));
                }
            }catch (Exception ex) 
            {
                System.out.println(ex);
            }  
        }else
        {
            System.out.println("rsFOOTER==null");
        }
        
        try
        {
            SQLStatement.close();
        }
        catch(java.sql.SQLException exc) 
        {
            System.out.println("ERROR-SQL Operation " + exc.toString());
        }
        
        for(int i=0;i<TAG.size();i++)
        {
            String strSelect1="select IDOBJECT from tab_report where OBJECT_TAG='"+(String)TAG.elementAt(i)+"' and TAG='"+dest+"' and TIPO_DI_CONFIGURAZIONE='"+config_NAME_ALIAS+"'";
            if(DEBUG)
            {   
                System.out.println("strSelect1(FOOTER)=" + strSelect1);
            }
            
            int objID_NEW  = ADAMS_GlobalParam.connect_Oracle.Query_int(strSelect1);
            NEWID.addElement(new Integer(objID_NEW));

        }
        
        
        for(int i=0;i<TAG.size();i++)
        {
            if(DEBUG)
            {
                System.out.println("TAG="+TAG.elementAt(i)+"  old ID="+ID.elementAt(i)+" new ID="+NEWID.elementAt(i));
            }

            int objID_OLD= ((Integer)ID.elementAt(i)).intValue();
            int objID_NEW= ((Integer)NEWID.elementAt(i)).intValue();
            String strSelect2="update tab_report set FOOTER_SOURCE="+objID_NEW+" WHERE FOOTER_SOURCE="+objID_OLD+" and TAG='"+dest+"' and TIPO_DI_CONFIGURAZIONE='"+config_NAME_ALIAS+"'";
            if(DEBUG)
            {
                System.out.println("strSelect2(FOOTER)=" + strSelect2);
            }
            
            int  iRet  = ADAMS_GlobalParam.connect_Oracle.Query_rs_update(strSelect2);
            if(iRet<=0)
            {
                System.out.println("ERRORE update FOOTER_SOURCE");
            }
        }
    }
    
    public void clonaTotalizer()
    {
        String sorg=jT_t1.getText();
        String dest=jT_t2.getText();
        
        String strSelect="select OBJECT_TAG,IDOBJECT from tab_report where IDOBJECT in (select TOTALIZER_TRIGGER from tab_report where TIPO_DI_CONFIGURAZIONE='"+config_NAME_ALIAS+"' and TAG='"+sorg+"' AND TOTALIZER_TRIGGER>0)";
        if(DEBUG)
        {
            System.out.println("strSelect(TOT)=" + strSelect);
        }
        Statement SQLStatement = ADAMS_GlobalParam.connect_Oracle.createLocalStatement();
        ResultSet rsTOT  = ADAMS_GlobalParam.connect_Oracle.Query_RS(strSelect,SQLStatement);
          
        Vector TAG=new Vector();
        Vector ID=new Vector();
        Vector NEWID=new Vector();
        
        if(rsTOT != null)
        {
            try
            {
                while ( rsTOT.next ( ) ) 
                {
                    String objTAG=rsTOT.getString("OBJECT_TAG");
                    int objID=rsTOT.getInt("IDOBJECT");
                    TAG.addElement(objTAG);
                    ID.addElement(new Integer(objID));
                }
            }catch (Exception ex) 
            {
                System.out.println(ex);
            }  
        }else
        {
            System.out.println("rsFOOTER==null");
        }
        
        try
        {
            SQLStatement.close();
        }
        catch(java.sql.SQLException exc) 
        {
            System.out.println("ERROR-SQL Operation " + exc.toString());
        }
        
        for(int i=0;i<TAG.size();i++)
        {
            String strSelect1="select IDOBJECT from tab_report where OBJECT_TAG='"+(String)TAG.elementAt(i)+"' and TAG='"+dest+"' and TIPO_DI_CONFIGURAZIONE='"+config_NAME_ALIAS+"'";
            if(DEBUG)
            {
                System.out.println("strSelect1(TOT)=" + strSelect1);
            }
            
            int objID_NEW  = ADAMS_GlobalParam.connect_Oracle.Query_int(strSelect1);
            NEWID.addElement(new Integer(objID_NEW));

        }
        
        
        for(int i=0;i<TAG.size();i++)
        {
            if(DEBUG)
            {
                System.out.println("TAG="+TAG.elementAt(i)+"  old ID="+ID.elementAt(i)+" new ID="+NEWID.elementAt(i));
            }

            int objID_OLD= ((Integer)ID.elementAt(i)).intValue();
            int objID_NEW= ((Integer)NEWID.elementAt(i)).intValue();
            String strSelect2="update tab_report set TOTALIZER_TRIGGER="+objID_NEW+" WHERE TOTALIZER_TRIGGER="+objID_OLD+" and TAG='"+dest+"' and TIPO_DI_CONFIGURAZIONE='"+config_NAME_ALIAS+"'";
            if(DEBUG)
            {
                System.out.println("strSelect2(TOT)=" + strSelect2);
            }
            
            int  iRet  = ADAMS_GlobalParam.connect_Oracle.Query_rs_update(strSelect2);
            if(iRet<=0)
            {
                System.out.println("ERRORE update TOTALIZER_TRIGGER");
            }
        }
    }
    
    public void closeDialog() {
        setVisible(false);
        dispose();
    }
    
    private void setCenteredFrame(int width,int height)
    {
        java.awt.Toolkit kit = Toolkit.getDefaultToolkit();
        Dimension screenSize = kit.getScreenSize();
        int screenWCenter = screenSize.width/2;
        int screenHCenter = screenSize.height/2;

        this.setSize(width,height);
        this.setLocation(screenWCenter-(width/2),screenHCenter-(height/2));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jP_p0;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JPanel jP_p1;
    private javax.swing.JLabel jL_l1;
    private javax.swing.JTextField jT_t1;
    private javax.swing.JTextArea jL_l2;
    private javax.swing.JTextField jT_t2;
    private javax.swing.JPanel jP_p3;
    private javax.swing.JButton jB_b1;
    private javax.swing.JButton jB_b2;
    // End of variables declaration//GEN-END:variables

}

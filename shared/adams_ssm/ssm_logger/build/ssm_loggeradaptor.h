/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -m -a ssm_loggeradaptor -i /home/pbetti/adams/include/ssm_logger.h -l ssm_logger /home/pbetti/adams/xml/net.etech.adams.ssm_logger.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef SSM_LOGGERADAPTOR_H
#define SSM_LOGGERADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "/home/pbetti/adams/include/ssm_logger.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface net.etech.adams.ssm_logger
 */
class Ssm_loggerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "net.etech.adams.ssm_logger")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"net.etech.adams.ssm_logger\">\n"
"    <method name=\"toLogger\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"level\"/>\n"
"      <arg direction=\"in\" type=\"((iii)(iiii)i)\" name=\"time\"/>\n"
"      <annotation value=\"QDateTime\" name=\"org.qtproject.QtDBus.QtTypeName.In1\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"process\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"processPid\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"msg\"/>\n"
"    </method>\n"
"    <method name=\"toMonitor\">\n"
"      <arg direction=\"in\" type=\"((iii)(iiii)i)\" name=\"time\"/>\n"
"      <annotation value=\"QDateTime\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"process\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"msg\"/>\n"
"    </method>\n"
"    <method name=\"getLogLevel\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"process\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    Ssm_loggerAdaptor(ssm_logger *parent);
    virtual ~Ssm_loggerAdaptor();

    inline ssm_logger *parent() const
    { return static_cast<ssm_logger *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    int getLogLevel(const QString &process);
    void toLogger(int level, const QDateTime &time, const QString &process, int processPid, const QString &msg);
    void toMonitor(const QDateTime &time, const QString &process, const QString &msg);
Q_SIGNALS: // SIGNALS
};

#endif

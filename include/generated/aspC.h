// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2.5
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL_ASPC_6UQQUP_H_
#define _TAO_IDL_ASPC_6UQQUP_H_

#include /**/ "ace/pre.h"


#include /**/ <ace/config-all.h>

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include <tao/ORB.h>
#include <tao/SystemException.h>
#include <tao/Basic_Types.h>
#include <tao/ORB_Constants.h>
#include <tao/Object.h>
#include <tao/Sequence_T.h>
#include <tao/Objref_VarOut_T.h>
#include <tao/Seq_Var_T.h>
#include <tao/Seq_Out_T.h>
#include <tao/VarOut_T.h>
#include <tao/Array_VarOut_T.h>
#include <tao/Arg_Traits_T.h>
#include <tao/Basic_Arguments.h>
#include <tao/Special_Basic_Arguments.h>
#include <tao/Any_Insert_Policy_T.h>
#include <tao/Basic_Argument_T.h>
#include <tao/Fixed_Size_Argument_T.h>
#include <tao/Var_Size_Argument_T.h>
#include <tao/Object_Argument_T.h>
#include <tao/Special_Basic_Arguments.h>
#include <tao/UB_String_Arguments.h>
#include <tao/Fixed_Array_Argument_T.h>
#include <tao/Var_Array_Argument_T.h>
#include /**/ <tao/Version.h>
#include /**/ <tao/Versioned_Namespace.h>

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 5
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_root/root_ch.cpp:160
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace net
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace etech
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct CONF_NODE;

    typedef
      ::TAO_Fixed_Var_T<
          CONF_NODE
        >
      CONF_NODE_var;

    typedef
      CONF_NODE &
      CONF_NODE_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  CONF_NODE
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef CONF_NODE_var _var_type;
      typedef CONF_NODE_out _out_type;
      
      ::CORBA::Long idNode;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _nameNode[9];
      typedef ::CORBA::Char _nameNode_slice;
      struct _nameNode_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _nameNode,
            _nameNode_slice,
            _nameNode_tag
          >
        _nameNode_forany;

      static _nameNode_slice *
      _nameNode_alloc (void);

      static void
      _nameNode_free (
          _nameNode_slice *_tao_slice);
      
      static _nameNode_slice *
      _nameNode_dup (
          const _nameNode_slice *_tao_slice);
      
      static void
      _nameNode_copy (
          _nameNode_slice *_tao_to,
          const _nameNode_slice *_tao_from
        );

      _nameNode nameNode;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _descNode[13];
      typedef ::CORBA::Char _descNode_slice;
      struct _descNode_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _descNode,
            _descNode_slice,
            _descNode_tag
          >
        _descNode_forany;

      static _descNode_slice *
      _descNode_alloc (void);

      static void
      _descNode_free (
          _descNode_slice *_tao_slice);
      
      static _descNode_slice *
      _descNode_dup (
          const _descNode_slice *_tao_slice);
      
      static void
      _descNode_copy (
          _descNode_slice *_tao_to,
          const _descNode_slice *_tao_from
        );

      _descNode descNode;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _tipoNode[3];
      typedef ::CORBA::Char _tipoNode_slice;
      struct _tipoNode_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _tipoNode,
            _tipoNode_slice,
            _tipoNode_tag
          >
        _tipoNode_forany;

      static _tipoNode_slice *
      _tipoNode_alloc (void);

      static void
      _tipoNode_free (
          _tipoNode_slice *_tao_slice);
      
      static _tipoNode_slice *
      _tipoNode_dup (
          const _tipoNode_slice *_tao_slice);
      
      static void
      _tipoNode_copy (
          _tipoNode_slice *_tao_to,
          const _tipoNode_slice *_tao_from
        );

      _tipoNode tipoNode;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_CONFNODESEQ_CH_)
#define _NET_ETECH_CONFNODESEQ_CH_

    class ConfNodeSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ConfNodeSeq
        >
      ConfNodeSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ConfNodeSeq
        >
      ConfNodeSeq_out;

    class  ConfNodeSeq
      : public
          ::TAO::unbounded_value_sequence<
              CONF_NODE
            >
    {
    public:
      ConfNodeSeq (void);
      ConfNodeSeq ( ::CORBA::ULong max);
      ConfNodeSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        CONF_NODE* buffer,
        ::CORBA::Boolean release = false);
      ConfNodeSeq (const ConfNodeSeq &);
      virtual ~ConfNodeSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ConfNodeSeq_var _var_type;
      typedef ConfNodeSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct S_ROLE;

    typedef
      ::TAO_Fixed_Var_T<
          S_ROLE
        >
      S_ROLE_var;

    typedef
      S_ROLE &
      S_ROLE_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  S_ROLE
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef S_ROLE_var _var_type;
      typedef S_ROLE_out _out_type;
      
      ::CORBA::Long idRole;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _descRole[150];
      typedef ::CORBA::Char _descRole_slice;
      struct _descRole_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _descRole,
            _descRole_slice,
            _descRole_tag
          >
        _descRole_forany;

      static _descRole_slice *
      _descRole_alloc (void);

      static void
      _descRole_free (
          _descRole_slice *_tao_slice);
      
      static _descRole_slice *
      _descRole_dup (
          const _descRole_slice *_tao_slice);
      
      static void
      _descRole_copy (
          _descRole_slice *_tao_to,
          const _descRole_slice *_tao_from
        );

      _descRole descRole;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_SROLESEQ_CH_)
#define _NET_ETECH_SROLESEQ_CH_

    class SRoleSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          SRoleSeq
        >
      SRoleSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          SRoleSeq
        >
      SRoleSeq_out;

    class  SRoleSeq
      : public
          ::TAO::unbounded_value_sequence<
              S_ROLE
            >
    {
    public:
      SRoleSeq (void);
      SRoleSeq ( ::CORBA::ULong max);
      SRoleSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        S_ROLE* buffer,
        ::CORBA::Boolean release = false);
      SRoleSeq (const SRoleSeq &);
      virtual ~SRoleSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SRoleSeq_var _var_type;
      typedef SRoleSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct S_CLASS;

    typedef
      ::TAO_Fixed_Var_T<
          S_CLASS
        >
      S_CLASS_var;

    typedef
      S_CLASS &
      S_CLASS_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  S_CLASS
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef S_CLASS_var _var_type;
      typedef S_CLASS_out _out_type;
      
      ::CORBA::Long idClass;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _descClass[150];
      typedef ::CORBA::Char _descClass_slice;
      struct _descClass_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _descClass,
            _descClass_slice,
            _descClass_tag
          >
        _descClass_forany;

      static _descClass_slice *
      _descClass_alloc (void);

      static void
      _descClass_free (
          _descClass_slice *_tao_slice);
      
      static _descClass_slice *
      _descClass_dup (
          const _descClass_slice *_tao_slice);
      
      static void
      _descClass_copy (
          _descClass_slice *_tao_to,
          const _descClass_slice *_tao_from
        );

      _descClass descClass;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_SCLASSSEQ_CH_)
#define _NET_ETECH_SCLASSSEQ_CH_

    class SClassSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          SClassSeq
        >
      SClassSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          SClassSeq
        >
      SClassSeq_out;

    class  SClassSeq
      : public
          ::TAO::unbounded_value_sequence<
              S_CLASS
            >
    {
    public:
      SClassSeq (void);
      SClassSeq ( ::CORBA::ULong max);
      SClassSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        S_CLASS* buffer,
        ::CORBA::Boolean release = false);
      SClassSeq (const SClassSeq &);
      virtual ~SClassSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SClassSeq_var _var_type;
      typedef SClassSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct S_FUNCTION;

    typedef
      ::TAO_Fixed_Var_T<
          S_FUNCTION
        >
      S_FUNCTION_var;

    typedef
      S_FUNCTION &
      S_FUNCTION_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  S_FUNCTION
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef S_FUNCTION_var _var_type;
      typedef S_FUNCTION_out _out_type;
      
      ::CORBA::Long idClass;
      ::CORBA::Long idFunction;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _nameFunction[60];
      typedef ::CORBA::Char _nameFunction_slice;
      struct _nameFunction_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _nameFunction,
            _nameFunction_slice,
            _nameFunction_tag
          >
        _nameFunction_forany;

      static _nameFunction_slice *
      _nameFunction_alloc (void);

      static void
      _nameFunction_free (
          _nameFunction_slice *_tao_slice);
      
      static _nameFunction_slice *
      _nameFunction_dup (
          const _nameFunction_slice *_tao_slice);
      
      static void
      _nameFunction_copy (
          _nameFunction_slice *_tao_to,
          const _nameFunction_slice *_tao_from
        );

      _nameFunction nameFunction;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _descFunction[150];
      typedef ::CORBA::Char _descFunction_slice;
      struct _descFunction_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _descFunction,
            _descFunction_slice,
            _descFunction_tag
          >
        _descFunction_forany;

      static _descFunction_slice *
      _descFunction_alloc (void);

      static void
      _descFunction_free (
          _descFunction_slice *_tao_slice);
      
      static _descFunction_slice *
      _descFunction_dup (
          const _descFunction_slice *_tao_slice);
      
      static void
      _descFunction_copy (
          _descFunction_slice *_tao_to,
          const _descFunction_slice *_tao_from
        );

      _descFunction descFunction;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _version[60];
      typedef ::CORBA::Char _version_slice;
      struct _version_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _version,
            _version_slice,
            _version_tag
          >
        _version_forany;

      static _version_slice *
      _version_alloc (void);

      static void
      _version_free (
          _version_slice *_tao_slice);
      
      static _version_slice *
      _version_dup (
          const _version_slice *_tao_slice);
      
      static void
      _version_copy (
          _version_slice *_tao_to,
          const _version_slice *_tao_from
        );

      _version version;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _releasedData[60];
      typedef ::CORBA::Char _releasedData_slice;
      struct _releasedData_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _releasedData,
            _releasedData_slice,
            _releasedData_tag
          >
        _releasedData_forany;

      static _releasedData_slice *
      _releasedData_alloc (void);

      static void
      _releasedData_free (
          _releasedData_slice *_tao_slice);
      
      static _releasedData_slice *
      _releasedData_dup (
          const _releasedData_slice *_tao_slice);
      
      static void
      _releasedData_copy (
          _releasedData_slice *_tao_to,
          const _releasedData_slice *_tao_from
        );

      _releasedData releasedData;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _author[50];
      typedef ::CORBA::Char _author_slice;
      struct _author_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _author,
            _author_slice,
            _author_tag
          >
        _author_forany;

      static _author_slice *
      _author_alloc (void);

      static void
      _author_free (
          _author_slice *_tao_slice);
      
      static _author_slice *
      _author_dup (
          const _author_slice *_tao_slice);
      
      static void
      _author_copy (
          _author_slice *_tao_to,
          const _author_slice *_tao_from
        );

      _author author;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _vendor[50];
      typedef ::CORBA::Char _vendor_slice;
      struct _vendor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _vendor,
            _vendor_slice,
            _vendor_tag
          >
        _vendor_forany;

      static _vendor_slice *
      _vendor_alloc (void);

      static void
      _vendor_free (
          _vendor_slice *_tao_slice);
      
      static _vendor_slice *
      _vendor_dup (
          const _vendor_slice *_tao_slice);
      
      static void
      _vendor_copy (
          _vendor_slice *_tao_to,
          const _vendor_slice *_tao_from
        );

      _vendor vendor;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_SFUNCTIONSEQ_CH_)
#define _NET_ETECH_SFUNCTIONSEQ_CH_

    class SFunctionSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          SFunctionSeq
        >
      SFunctionSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          SFunctionSeq
        >
      SFunctionSeq_out;

    class  SFunctionSeq
      : public
          ::TAO::unbounded_value_sequence<
              S_FUNCTION
            >
    {
    public:
      SFunctionSeq (void);
      SFunctionSeq ( ::CORBA::ULong max);
      SFunctionSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        S_FUNCTION* buffer,
        ::CORBA::Boolean release = false);
      SFunctionSeq (const SFunctionSeq &);
      virtual ~SFunctionSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SFunctionSeq_var _var_type;
      typedef SFunctionSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct S_LOGIN;

    typedef
      ::TAO_Fixed_Var_T<
          S_LOGIN
        >
      S_LOGIN_var;

    typedef
      S_LOGIN &
      S_LOGIN_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  S_LOGIN
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef S_LOGIN_var _var_type;
      typedef S_LOGIN_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _login[20];
      typedef ::CORBA::Char _login_slice;
      struct _login_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _login,
            _login_slice,
            _login_tag
          >
        _login_forany;

      static _login_slice *
      _login_alloc (void);

      static void
      _login_free (
          _login_slice *_tao_slice);
      
      static _login_slice *
      _login_dup (
          const _login_slice *_tao_slice);
      
      static void
      _login_copy (
          _login_slice *_tao_to,
          const _login_slice *_tao_from
        );

      _login login;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_SLOGINSEQ_CH_)
#define _NET_ETECH_SLOGINSEQ_CH_

    class SLoginSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          SLoginSeq
        >
      SLoginSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          SLoginSeq
        >
      SLoginSeq_out;

    class  SLoginSeq
      : public
          ::TAO::unbounded_value_sequence<
              S_LOGIN
            >
    {
    public:
      SLoginSeq (void);
      SLoginSeq ( ::CORBA::ULong max);
      SLoginSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        S_LOGIN* buffer,
        ::CORBA::Boolean release = false);
      SLoginSeq (const SLoginSeq &);
      virtual ~SLoginSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SLoginSeq_var _var_type;
      typedef SLoginSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct S_PROFILE;

    typedef
      ::TAO_Var_Var_T<
          S_PROFILE
        >
      S_PROFILE_var;

    typedef
      ::TAO_Out_T<
          S_PROFILE
        >
      S_PROFILE_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  S_PROFILE
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef S_PROFILE_var _var_type;
      typedef S_PROFILE_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _profile[40];
      typedef ::CORBA::Char _profile_slice;
      struct _profile_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _profile,
            _profile_slice,
            _profile_tag
          >
        _profile_forany;

      static _profile_slice *
      _profile_alloc (void);

      static void
      _profile_free (
          _profile_slice *_tao_slice);
      
      static _profile_slice *
      _profile_dup (
          const _profile_slice *_tao_slice);
      
      static void
      _profile_copy (
          _profile_slice *_tao_to,
          const _profile_slice *_tao_from
        );

      _profile profile;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _descProfile[300];
      typedef ::CORBA::Char _descProfile_slice;
      struct _descProfile_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _descProfile,
            _descProfile_slice,
            _descProfile_tag
          >
        _descProfile_forany;

      static _descProfile_slice *
      _descProfile_alloc (void);

      static void
      _descProfile_free (
          _descProfile_slice *_tao_slice);
      
      static _descProfile_slice *
      _descProfile_dup (
          const _descProfile_slice *_tao_slice);
      
      static void
      _descProfile_copy (
          _descProfile_slice *_tao_to,
          const _descProfile_slice *_tao_from
        );

      _descProfile descProfile;
      ::CORBA::Long idClass;
      net::etech::SFunctionSeq functionSeq;
      net::etech::SLoginSeq loginSeq;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_SPROFILESEQ_CH_)
#define _NET_ETECH_SPROFILESEQ_CH_

    class SProfileSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          SProfileSeq
        >
      SProfileSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          SProfileSeq
        >
      SProfileSeq_out;

    class  SProfileSeq
      : public
          ::TAO::unbounded_value_sequence<
              S_PROFILE
            >
    {
    public:
      SProfileSeq (void);
      SProfileSeq ( ::CORBA::ULong max);
      SProfileSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        S_PROFILE* buffer,
        ::CORBA::Boolean release = false);
      SProfileSeq (const SProfileSeq &);
      virtual ~SProfileSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SProfileSeq_var _var_type;
      typedef SProfileSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct S_USER;

    typedef
      ::TAO_Var_Var_T<
          S_USER
        >
      S_USER_var;

    typedef
      ::TAO_Out_T<
          S_USER
        >
      S_USER_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  S_USER
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef S_USER_var _var_type;
      typedef S_USER_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _login[20];
      typedef ::CORBA::Char _login_slice;
      struct _login_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _login,
            _login_slice,
            _login_tag
          >
        _login_forany;

      static _login_slice *
      _login_alloc (void);

      static void
      _login_free (
          _login_slice *_tao_slice);
      
      static _login_slice *
      _login_dup (
          const _login_slice *_tao_slice);
      
      static void
      _login_copy (
          _login_slice *_tao_to,
          const _login_slice *_tao_from
        );

      _login login;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _password[20];
      typedef ::CORBA::Char _password_slice;
      struct _password_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _password,
            _password_slice,
            _password_tag
          >
        _password_forany;

      static _password_slice *
      _password_alloc (void);

      static void
      _password_free (
          _password_slice *_tao_slice);
      
      static _password_slice *
      _password_dup (
          const _password_slice *_tao_slice);
      
      static void
      _password_copy (
          _password_slice *_tao_to,
          const _password_slice *_tao_from
        );

      _password password;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _nomeUtente[100];
      typedef ::CORBA::Char _nomeUtente_slice;
      struct _nomeUtente_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _nomeUtente,
            _nomeUtente_slice,
            _nomeUtente_tag
          >
        _nomeUtente_forany;

      static _nomeUtente_slice *
      _nomeUtente_alloc (void);

      static void
      _nomeUtente_free (
          _nomeUtente_slice *_tao_slice);
      
      static _nomeUtente_slice *
      _nomeUtente_dup (
          const _nomeUtente_slice *_tao_slice);
      
      static void
      _nomeUtente_copy (
          _nomeUtente_slice *_tao_to,
          const _nomeUtente_slice *_tao_from
        );

      _nomeUtente nomeUtente;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _descUser[150];
      typedef ::CORBA::Char _descUser_slice;
      struct _descUser_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _descUser,
            _descUser_slice,
            _descUser_tag
          >
        _descUser_forany;

      static _descUser_slice *
      _descUser_alloc (void);

      static void
      _descUser_free (
          _descUser_slice *_tao_slice);
      
      static _descUser_slice *
      _descUser_dup (
          const _descUser_slice *_tao_slice);
      
      static void
      _descUser_copy (
          _descUser_slice *_tao_to,
          const _descUser_slice *_tao_from
        );

      _descUser descUser;
      ::CORBA::Long idRole;
      ::CORBA::Boolean abilitazioneUtente;
      net::etech::SProfileSeq profileSeq;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_SUSERSEQ_CH_)
#define _NET_ETECH_SUSERSEQ_CH_

    class SUserSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          SUserSeq
        >
      SUserSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          SUserSeq
        >
      SUserSeq_out;

    class  SUserSeq
      : public
          ::TAO::unbounded_value_sequence<
              S_USER
            >
    {
    public:
      SUserSeq (void);
      SUserSeq ( ::CORBA::ULong max);
      SUserSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        S_USER* buffer,
        ::CORBA::Boolean release = false);
      SUserSeq (const SUserSeq &);
      virtual ~SUserSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SUserSeq_var _var_type;
      typedef SUserSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct S_CONFIG_LIB;

    typedef
      ::TAO_Var_Var_T<
          S_CONFIG_LIB
        >
      S_CONFIG_LIB_var;

    typedef
      ::TAO_Out_T<
          S_CONFIG_LIB
        >
      S_CONFIG_LIB_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  S_CONFIG_LIB
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef S_CONFIG_LIB_var _var_type;
      typedef S_CONFIG_LIB_out _out_type;
      
      net::etech::SRoleSeq roleSeq;
      net::etech::SClassSeq classSeq;
      net::etech::SFunctionSeq functionSeq;
      net::etech::SProfileSeq profileSeq;
      net::etech::SUserSeq userSeq;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct S_APP_LOG;

    typedef
      ::TAO_Fixed_Var_T<
          S_APP_LOG
        >
      S_APP_LOG_var;

    typedef
      S_APP_LOG &
      S_APP_LOG_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  S_APP_LOG
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef S_APP_LOG_var _var_type;
      typedef S_APP_LOG_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _timeStamp[20];
      typedef ::CORBA::Char _timeStamp_slice;
      struct _timeStamp_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _timeStamp,
            _timeStamp_slice,
            _timeStamp_tag
          >
        _timeStamp_forany;

      static _timeStamp_slice *
      _timeStamp_alloc (void);

      static void
      _timeStamp_free (
          _timeStamp_slice *_tao_slice);
      
      static _timeStamp_slice *
      _timeStamp_dup (
          const _timeStamp_slice *_tao_slice);
      
      static void
      _timeStamp_copy (
          _timeStamp_slice *_tao_to,
          const _timeStamp_slice *_tao_from
        );

      _timeStamp timeStamp;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ip_server[16];
      typedef ::CORBA::Char _ip_server_slice;
      struct _ip_server_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ip_server,
            _ip_server_slice,
            _ip_server_tag
          >
        _ip_server_forany;

      static _ip_server_slice *
      _ip_server_alloc (void);

      static void
      _ip_server_free (
          _ip_server_slice *_tao_slice);
      
      static _ip_server_slice *
      _ip_server_dup (
          const _ip_server_slice *_tao_slice);
      
      static void
      _ip_server_copy (
          _ip_server_slice *_tao_to,
          const _ip_server_slice *_tao_from
        );

      _ip_server ip_server;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _hostname_server[50];
      typedef ::CORBA::Char _hostname_server_slice;
      struct _hostname_server_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _hostname_server,
            _hostname_server_slice,
            _hostname_server_tag
          >
        _hostname_server_forany;

      static _hostname_server_slice *
      _hostname_server_alloc (void);

      static void
      _hostname_server_free (
          _hostname_server_slice *_tao_slice);
      
      static _hostname_server_slice *
      _hostname_server_dup (
          const _hostname_server_slice *_tao_slice);
      
      static void
      _hostname_server_copy (
          _hostname_server_slice *_tao_to,
          const _hostname_server_slice *_tao_from
        );

      _hostname_server hostname_server;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ip_client[16];
      typedef ::CORBA::Char _ip_client_slice;
      struct _ip_client_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ip_client,
            _ip_client_slice,
            _ip_client_tag
          >
        _ip_client_forany;

      static _ip_client_slice *
      _ip_client_alloc (void);

      static void
      _ip_client_free (
          _ip_client_slice *_tao_slice);
      
      static _ip_client_slice *
      _ip_client_dup (
          const _ip_client_slice *_tao_slice);
      
      static void
      _ip_client_copy (
          _ip_client_slice *_tao_to,
          const _ip_client_slice *_tao_from
        );

      _ip_client ip_client;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _hostname_client[50];
      typedef ::CORBA::Char _hostname_client_slice;
      struct _hostname_client_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _hostname_client,
            _hostname_client_slice,
            _hostname_client_tag
          >
        _hostname_client_forany;

      static _hostname_client_slice *
      _hostname_client_alloc (void);

      static void
      _hostname_client_free (
          _hostname_client_slice *_tao_slice);
      
      static _hostname_client_slice *
      _hostname_client_dup (
          const _hostname_client_slice *_tao_slice);
      
      static void
      _hostname_client_copy (
          _hostname_client_slice *_tao_to,
          const _hostname_client_slice *_tao_from
        );

      _hostname_client hostname_client;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _application_user[50];
      typedef ::CORBA::Char _application_user_slice;
      struct _application_user_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _application_user,
            _application_user_slice,
            _application_user_tag
          >
        _application_user_forany;

      static _application_user_slice *
      _application_user_alloc (void);

      static void
      _application_user_free (
          _application_user_slice *_tao_slice);
      
      static _application_user_slice *
      _application_user_dup (
          const _application_user_slice *_tao_slice);
      
      static void
      _application_user_copy (
          _application_user_slice *_tao_to,
          const _application_user_slice *_tao_from
        );

      _application_user application_user;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _client_user[50];
      typedef ::CORBA::Char _client_user_slice;
      struct _client_user_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _client_user,
            _client_user_slice,
            _client_user_tag
          >
        _client_user_forany;

      static _client_user_slice *
      _client_user_alloc (void);

      static void
      _client_user_free (
          _client_user_slice *_tao_slice);
      
      static _client_user_slice *
      _client_user_dup (
          const _client_user_slice *_tao_slice);
      
      static void
      _client_user_copy (
          _client_user_slice *_tao_to,
          const _client_user_slice *_tao_from
        );

      _client_user client_user;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _application[50];
      typedef ::CORBA::Char _application_slice;
      struct _application_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _application,
            _application_slice,
            _application_tag
          >
        _application_forany;

      static _application_slice *
      _application_alloc (void);

      static void
      _application_free (
          _application_slice *_tao_slice);
      
      static _application_slice *
      _application_dup (
          const _application_slice *_tao_slice);
      
      static void
      _application_copy (
          _application_slice *_tao_to,
          const _application_slice *_tao_from
        );

      _application application;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _action[50];
      typedef ::CORBA::Char _action_slice;
      struct _action_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _action,
            _action_slice,
            _action_tag
          >
        _action_forany;

      static _action_slice *
      _action_alloc (void);

      static void
      _action_free (
          _action_slice *_tao_slice);
      
      static _action_slice *
      _action_dup (
          const _action_slice *_tao_slice);
      
      static void
      _action_copy (
          _action_slice *_tao_to,
          const _action_slice *_tao_from
        );

      _action action;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _action_object[50];
      typedef ::CORBA::Char _action_object_slice;
      struct _action_object_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _action_object,
            _action_object_slice,
            _action_object_tag
          >
        _action_object_forany;

      static _action_object_slice *
      _action_object_alloc (void);

      static void
      _action_object_free (
          _action_object_slice *_tao_slice);
      
      static _action_object_slice *
      _action_object_dup (
          const _action_object_slice *_tao_slice);
      
      static void
      _action_object_copy (
          _action_object_slice *_tao_to,
          const _action_object_slice *_tao_from
        );

      _action_object action_object;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _parameter[500];
      typedef ::CORBA::Char _parameter_slice;
      struct _parameter_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _parameter,
            _parameter_slice,
            _parameter_tag
          >
        _parameter_forany;

      static _parameter_slice *
      _parameter_alloc (void);

      static void
      _parameter_free (
          _parameter_slice *_tao_slice);
      
      static _parameter_slice *
      _parameter_dup (
          const _parameter_slice *_tao_slice);
      
      static void
      _parameter_copy (
          _parameter_slice *_tao_to,
          const _parameter_slice *_tao_from
        );

      _parameter parameter;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _successful[50];
      typedef ::CORBA::Char _successful_slice;
      struct _successful_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _successful,
            _successful_slice,
            _successful_tag
          >
        _successful_forany;

      static _successful_slice *
      _successful_alloc (void);

      static void
      _successful_free (
          _successful_slice *_tao_slice);
      
      static _successful_slice *
      _successful_dup (
          const _successful_slice *_tao_slice);
      
      static void
      _successful_copy (
          _successful_slice *_tao_to,
          const _successful_slice *_tao_from
        );

      _successful successful;
      ::CORBA::Long return_code;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct FUNCTION_ENABLED;

    typedef
      ::TAO_Fixed_Var_T<
          FUNCTION_ENABLED
        >
      FUNCTION_ENABLED_var;

    typedef
      FUNCTION_ENABLED &
      FUNCTION_ENABLED_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  FUNCTION_ENABLED
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef FUNCTION_ENABLED_var _var_type;
      typedef FUNCTION_ENABLED_out _out_type;
      
      ::CORBA::Long ID_EnabledFunction;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_FUNCTIONENABLEDSEQ_CH_)
#define _NET_ETECH_FUNCTIONENABLEDSEQ_CH_

    class FunctionEnabledSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          FunctionEnabledSeq
        >
      FunctionEnabledSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          FunctionEnabledSeq
        >
      FunctionEnabledSeq_out;

    class  FunctionEnabledSeq
      : public
          ::TAO::unbounded_value_sequence<
              FUNCTION_ENABLED
            >
    {
    public:
      FunctionEnabledSeq (void);
      FunctionEnabledSeq ( ::CORBA::ULong max);
      FunctionEnabledSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        FUNCTION_ENABLED* buffer,
        ::CORBA::Boolean release = false);
      FunctionEnabledSeq (const FunctionEnabledSeq &);
      virtual ~FunctionEnabledSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef FunctionEnabledSeq_var _var_type;
      typedef FunctionEnabledSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct MONITOR_USER_GRANT;

    typedef
      ::TAO_Var_Var_T<
          MONITOR_USER_GRANT
        >
      MONITOR_USER_GRANT_var;

    typedef
      ::TAO_Out_T<
          MONITOR_USER_GRANT
        >
      MONITOR_USER_GRANT_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  MONITOR_USER_GRANT
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef MONITOR_USER_GRANT_var _var_type;
      typedef MONITOR_USER_GRANT_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _profile[40];
      typedef ::CORBA::Char _profile_slice;
      struct _profile_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _profile,
            _profile_slice,
            _profile_tag
          >
        _profile_forany;

      static _profile_slice *
      _profile_alloc (void);

      static void
      _profile_free (
          _profile_slice *_tao_slice);
      
      static _profile_slice *
      _profile_dup (
          const _profile_slice *_tao_slice);
      
      static void
      _profile_copy (
          _profile_slice *_tao_to,
          const _profile_slice *_tao_from
        );

      _profile profile;
      ::CORBA::Long configRT;
      ::CORBA::Long numMaxChart;
      net::etech::FunctionEnabledSeq FunctionEnabled;
      net::etech::FunctionEnabledSeq FunctionDisabled;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_enum/enum_ch.cpp:47

    enum TimeUnits
    {
      Second,
      Minute,
      Quarter,
      Hour,
      Day,
      Week,
      Month,
      Year
    };

    typedef TimeUnits &TimeUnits_out;

    // TAO_IDL - Generated from
    // be/be_visitor_enum/enum_ch.cpp:47

    enum InputItemType
    {
      List,
      Toggle,
      Combo,
      RadioButton,
      TextField_Numeric,
      TextField_Ascii,
      Calendar,
      MultiList
    };

    typedef InputItemType &InputItemType_out;

    // TAO_IDL - Generated from
    // be/be_visitor_enum/enum_ch.cpp:47

    enum OutputType
    {
      Linear_V,
      Linear_H,
      Bar_V,
      Bar_H,
      Radar,
      Pie,
      Counter,
      Table
    };

    typedef OutputType &OutputType_out;

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct InputItem;

    typedef
      ::TAO_Fixed_Var_T<
          InputItem
        >
      InputItem_var;

    typedef
      InputItem &
      InputItem_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  InputItem
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef InputItem_var _var_type;
      typedef InputItem_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _inputItemName[15];
      typedef ::CORBA::Char _inputItemName_slice;
      struct _inputItemName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _inputItemName,
            _inputItemName_slice,
            _inputItemName_tag
          >
        _inputItemName_forany;

      static _inputItemName_slice *
      _inputItemName_alloc (void);

      static void
      _inputItemName_free (
          _inputItemName_slice *_tao_slice);
      
      static _inputItemName_slice *
      _inputItemName_dup (
          const _inputItemName_slice *_tao_slice);
      
      static void
      _inputItemName_copy (
          _inputItemName_slice *_tao_to,
          const _inputItemName_slice *_tao_from
        );

      _inputItemName inputItemName;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _alternativeLongName[30];
      typedef ::CORBA::Char _alternativeLongName_slice;
      struct _alternativeLongName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _alternativeLongName,
            _alternativeLongName_slice,
            _alternativeLongName_tag
          >
        _alternativeLongName_forany;

      static _alternativeLongName_slice *
      _alternativeLongName_alloc (void);

      static void
      _alternativeLongName_free (
          _alternativeLongName_slice *_tao_slice);
      
      static _alternativeLongName_slice *
      _alternativeLongName_dup (
          const _alternativeLongName_slice *_tao_slice);
      
      static void
      _alternativeLongName_copy (
          _alternativeLongName_slice *_tao_to,
          const _alternativeLongName_slice *_tao_from
        );

      _alternativeLongName alternativeLongName;
      ::CORBA::Long uniqueId;
      net::etech::InputItemType inputType;
      ::CORBA::Long needResyncOnUserAction;
      ::CORBA::Long flagInputItem;
      ::CORBA::Long enabled;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_INPUTITEMSEQ_CH_)
#define _NET_ETECH_INPUTITEMSEQ_CH_

    class InputItemSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          InputItemSeq
        >
      InputItemSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          InputItemSeq
        >
      InputItemSeq_out;

    class  InputItemSeq
      : public
          ::TAO::unbounded_value_sequence<
              InputItem
            >
    {
    public:
      InputItemSeq (void);
      InputItemSeq ( ::CORBA::ULong max);
      InputItemSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        InputItem* buffer,
        ::CORBA::Boolean release = false);
      InputItemSeq (const InputItemSeq &);
      virtual ~InputItemSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef InputItemSeq_var _var_type;
      typedef InputItemSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct Polling;

    typedef
      ::TAO_Fixed_Var_T<
          Polling
        >
      Polling_var;

    typedef
      Polling &
      Polling_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  Polling
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef Polling_var _var_type;
      typedef Polling_out _out_type;
      
      ::CORBA::Long value;
      ::CORBA::Long enabled;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_POLLINGSEQ_CH_)
#define _NET_ETECH_POLLINGSEQ_CH_

    class PollingSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          PollingSeq
        >
      PollingSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          PollingSeq
        >
      PollingSeq_out;

    class  PollingSeq
      : public
          ::TAO::unbounded_value_sequence<
              Polling
            >
    {
    public:
      PollingSeq (void);
      PollingSeq ( ::CORBA::ULong max);
      PollingSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        Polling* buffer,
        ::CORBA::Boolean release = false);
      PollingSeq (const PollingSeq &);
      virtual ~PollingSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef PollingSeq_var _var_type;
      typedef PollingSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct Output_Type;

    typedef
      ::TAO_Fixed_Var_T<
          Output_Type
        >
      Output_Type_var;

    typedef
      Output_Type &
      Output_Type_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  Output_Type
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef Output_Type_var _var_type;
      typedef Output_Type_out _out_type;
      
      net::etech::OutputType value;
      ::CORBA::Long enabled;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_OUTPUTTYPESEQ_CH_)
#define _NET_ETECH_OUTPUTTYPESEQ_CH_

    class OutputTypeSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          OutputTypeSeq
        >
      OutputTypeSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          OutputTypeSeq
        >
      OutputTypeSeq_out;

    class  OutputTypeSeq
      : public
          ::TAO::unbounded_value_sequence<
              Output_Type
            >
    {
    public:
      OutputTypeSeq (void);
      OutputTypeSeq ( ::CORBA::ULong max);
      OutputTypeSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        Output_Type* buffer,
        ::CORBA::Boolean release = false);
      OutputTypeSeq (const OutputTypeSeq &);
      virtual ~OutputTypeSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef OutputTypeSeq_var _var_type;
      typedef OutputTypeSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct SubFuctionGUI;

    typedef
      ::TAO_Fixed_Var_T<
          SubFuctionGUI
        >
      SubFuctionGUI_var;

    typedef
      SubFuctionGUI &
      SubFuctionGUI_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  SubFuctionGUI
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SubFuctionGUI_var _var_type;
      typedef SubFuctionGUI_out _out_type;
      
      ::CORBA::Long threshold;
      ::CORBA::Long typeThreshold;
      ::CORBA::Long noShift;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _color[10];
      typedef ::CORBA::Char _color_slice;
      struct _color_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _color,
            _color_slice,
            _color_tag
          >
        _color_forany;

      static _color_slice *
      _color_alloc (void);

      static void
      _color_free (
          _color_slice *_tao_slice);
      
      static _color_slice *
      _color_dup (
          const _color_slice *_tao_slice);
      
      static void
      _color_copy (
          _color_slice *_tao_to,
          const _color_slice *_tao_from
        );

      _color color;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ParamValue;

    typedef
      ::TAO_Fixed_Var_T<
          ParamValue
        >
      ParamValue_var;

    typedef
      ParamValue &
      ParamValue_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  ParamValue
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ParamValue_var _var_type;
      typedef ParamValue_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _paramValueIn[50];
      typedef ::CORBA::Char _paramValueIn_slice;
      struct _paramValueIn_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _paramValueIn,
            _paramValueIn_slice,
            _paramValueIn_tag
          >
        _paramValueIn_forany;

      static _paramValueIn_slice *
      _paramValueIn_alloc (void);

      static void
      _paramValueIn_free (
          _paramValueIn_slice *_tao_slice);
      
      static _paramValueIn_slice *
      _paramValueIn_dup (
          const _paramValueIn_slice *_tao_slice);
      
      static void
      _paramValueIn_copy (
          _paramValueIn_slice *_tao_to,
          const _paramValueIn_slice *_tao_from
        );

      _paramValueIn paramValueIn;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _descValueIn[150];
      typedef ::CORBA::Char _descValueIn_slice;
      struct _descValueIn_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _descValueIn,
            _descValueIn_slice,
            _descValueIn_tag
          >
        _descValueIn_forany;

      static _descValueIn_slice *
      _descValueIn_alloc (void);

      static void
      _descValueIn_free (
          _descValueIn_slice *_tao_slice);
      
      static _descValueIn_slice *
      _descValueIn_dup (
          const _descValueIn_slice *_tao_slice);
      
      static void
      _descValueIn_copy (
          _descValueIn_slice *_tao_to,
          const _descValueIn_slice *_tao_from
        );

      _descValueIn descValueIn;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_PARAMVALUESEQ_CH_)
#define _NET_ETECH_PARAMVALUESEQ_CH_

    class ParamValueSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ParamValueSeq
        >
      ParamValueSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ParamValueSeq
        >
      ParamValueSeq_out;

    class  ParamValueSeq
      : public
          ::TAO::unbounded_value_sequence<
              ParamValue
            >
    {
    public:
      ParamValueSeq (void);
      ParamValueSeq ( ::CORBA::ULong max);
      ParamValueSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ParamValue* buffer,
        ::CORBA::Boolean release = false);
      ParamValueSeq (const ParamValueSeq &);
      virtual ~ParamValueSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ParamValueSeq_var _var_type;
      typedef ParamValueSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ParamSelected;

    typedef
      ::TAO_Var_Var_T<
          ParamSelected
        >
      ParamSelected_var;

    typedef
      ::TAO_Out_T<
          ParamSelected
        >
      ParamSelected_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  ParamSelected
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ParamSelected_var _var_type;
      typedef ParamSelected_out _out_type;
      
      ::CORBA::Long idSubFunction;
      ::CORBA::Long idInputType;
      net::etech::ParamValueSeq paramValue;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_PARAMSELECTEDSEQ_CH_)
#define _NET_ETECH_PARAMSELECTEDSEQ_CH_

    class ParamSelectedSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          ParamSelectedSeq
        >
      ParamSelectedSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ParamSelectedSeq
        >
      ParamSelectedSeq_out;

    class  ParamSelectedSeq
      : public
          ::TAO::unbounded_value_sequence<
              ParamSelected
            >
    {
    public:
      ParamSelectedSeq (void);
      ParamSelectedSeq ( ::CORBA::ULong max);
      ParamSelectedSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ParamSelected* buffer,
        ::CORBA::Boolean release = false);
      ParamSelectedSeq (const ParamSelectedSeq &);
      virtual ~ParamSelectedSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ParamSelectedSeq_var _var_type;
      typedef ParamSelectedSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct CounterGUI;

    typedef
      ::TAO_Fixed_Var_T<
          CounterGUI
        >
      CounterGUI_var;

    typedef
      CounterGUI &
      CounterGUI_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  CounterGUI
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef CounterGUI_var _var_type;
      typedef CounterGUI_out _out_type;
      
      ::CORBA::Long idSubFunction;
      ::CORBA::Long xPos;
      ::CORBA::Long yPos;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_COUNTERSEQ_CH_)
#define _NET_ETECH_COUNTERSEQ_CH_

    class CounterSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          CounterSeq
        >
      CounterSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          CounterSeq
        >
      CounterSeq_out;

    class  CounterSeq
      : public
          ::TAO::unbounded_value_sequence<
              CounterGUI
            >
    {
    public:
      CounterSeq (void);
      CounterSeq ( ::CORBA::ULong max);
      CounterSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        CounterGUI* buffer,
        ::CORBA::Boolean release = false);
      CounterSeq (const CounterSeq &);
      virtual ~CounterSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef CounterSeq_var _var_type;
      typedef CounterSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct FontChart;

    typedef
      ::TAO_Fixed_Var_T<
          FontChart
        >
      FontChart_var;

    typedef
      FontChart &
      FontChart_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  FontChart
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef FontChart_var _var_type;
      typedef FontChart_out _out_type;
      
      ::CORBA::Long idComponent;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _nameFont[100];
      typedef ::CORBA::Char _nameFont_slice;
      struct _nameFont_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _nameFont,
            _nameFont_slice,
            _nameFont_tag
          >
        _nameFont_forany;

      static _nameFont_slice *
      _nameFont_alloc (void);

      static void
      _nameFont_free (
          _nameFont_slice *_tao_slice);
      
      static _nameFont_slice *
      _nameFont_dup (
          const _nameFont_slice *_tao_slice);
      
      static void
      _nameFont_copy (
          _nameFont_slice *_tao_to,
          const _nameFont_slice *_tao_from
        );

      _nameFont nameFont;
      ::CORBA::Long styleFont;
      ::CORBA::Long sizeFont;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _colorFont[10];
      typedef ::CORBA::Char _colorFont_slice;
      struct _colorFont_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _colorFont,
            _colorFont_slice,
            _colorFont_tag
          >
        _colorFont_forany;

      static _colorFont_slice *
      _colorFont_alloc (void);

      static void
      _colorFont_free (
          _colorFont_slice *_tao_slice);
      
      static _colorFont_slice *
      _colorFont_dup (
          const _colorFont_slice *_tao_slice);
      
      static void
      _colorFont_copy (
          _colorFont_slice *_tao_to,
          const _colorFont_slice *_tao_from
        );

      _colorFont colorFont;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_FONTCHARTSEQ_CH_)
#define _NET_ETECH_FONTCHARTSEQ_CH_

    class FontChartSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          FontChartSeq
        >
      FontChartSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          FontChartSeq
        >
      FontChartSeq_out;

    class  FontChartSeq
      : public
          ::TAO::unbounded_value_sequence<
              FontChart
            >
    {
    public:
      FontChartSeq (void);
      FontChartSeq ( ::CORBA::ULong max);
      FontChartSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        FontChart* buffer,
        ::CORBA::Boolean release = false);
      FontChartSeq (const FontChartSeq &);
      virtual ~FontChartSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef FontChartSeq_var _var_type;
      typedef FontChartSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct Chart;

    typedef
      ::TAO_Var_Var_T<
          Chart
        >
      Chart_var;

    typedef
      ::TAO_Out_T<
          Chart
        >
      Chart_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  Chart
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef Chart_var _var_type;
      typedef Chart_out _out_type;
      
      ::CORBA::Long idChart;
      ::CORBA::Long xPosScreen;
      ::CORBA::Long yPosScreen;
      ::CORBA::Long heigth;
      ::CORBA::Long weigth;
      ::CORBA::Long northExistence;
      ::CORBA::Long chartExistence;
      ::CORBA::Long southExistence;
      ::CORBA::Long legendExistence;
      ::CORBA::Long chartGridExistence;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _chartBackgroundColor[10];
      typedef ::CORBA::Char _chartBackgroundColor_slice;
      struct _chartBackgroundColor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _chartBackgroundColor,
            _chartBackgroundColor_slice,
            _chartBackgroundColor_tag
          >
        _chartBackgroundColor_forany;

      static _chartBackgroundColor_slice *
      _chartBackgroundColor_alloc (void);

      static void
      _chartBackgroundColor_free (
          _chartBackgroundColor_slice *_tao_slice);
      
      static _chartBackgroundColor_slice *
      _chartBackgroundColor_dup (
          const _chartBackgroundColor_slice *_tao_slice);
      
      static void
      _chartBackgroundColor_copy (
          _chartBackgroundColor_slice *_tao_to,
          const _chartBackgroundColor_slice *_tao_from
        );

      _chartBackgroundColor chartBackgroundColor;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _chartForegroundColor[10];
      typedef ::CORBA::Char _chartForegroundColor_slice;
      struct _chartForegroundColor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _chartForegroundColor,
            _chartForegroundColor_slice,
            _chartForegroundColor_tag
          >
        _chartForegroundColor_forany;

      static _chartForegroundColor_slice *
      _chartForegroundColor_alloc (void);

      static void
      _chartForegroundColor_free (
          _chartForegroundColor_slice *_tao_slice);
      
      static _chartForegroundColor_slice *
      _chartForegroundColor_dup (
          const _chartForegroundColor_slice *_tao_slice);
      
      static void
      _chartForegroundColor_copy (
          _chartForegroundColor_slice *_tao_to,
          const _chartForegroundColor_slice *_tao_from
        );

      _chartForegroundColor chartForegroundColor;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _titleFontColor[10];
      typedef ::CORBA::Char _titleFontColor_slice;
      struct _titleFontColor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _titleFontColor,
            _titleFontColor_slice,
            _titleFontColor_tag
          >
        _titleFontColor_forany;

      static _titleFontColor_slice *
      _titleFontColor_alloc (void);

      static void
      _titleFontColor_free (
          _titleFontColor_slice *_tao_slice);
      
      static _titleFontColor_slice *
      _titleFontColor_dup (
          const _titleFontColor_slice *_tao_slice);
      
      static void
      _titleFontColor_copy (
          _titleFontColor_slice *_tao_to,
          const _titleFontColor_slice *_tao_from
        );

      _titleFontColor titleFontColor;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _legendBackgroundColor[10];
      typedef ::CORBA::Char _legendBackgroundColor_slice;
      struct _legendBackgroundColor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _legendBackgroundColor,
            _legendBackgroundColor_slice,
            _legendBackgroundColor_tag
          >
        _legendBackgroundColor_forany;

      static _legendBackgroundColor_slice *
      _legendBackgroundColor_alloc (void);

      static void
      _legendBackgroundColor_free (
          _legendBackgroundColor_slice *_tao_slice);
      
      static _legendBackgroundColor_slice *
      _legendBackgroundColor_dup (
          const _legendBackgroundColor_slice *_tao_slice);
      
      static void
      _legendBackgroundColor_copy (
          _legendBackgroundColor_slice *_tao_to,
          const _legendBackgroundColor_slice *_tao_from
        );

      _legendBackgroundColor legendBackgroundColor;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _legendFontColor[10];
      typedef ::CORBA::Char _legendFontColor_slice;
      struct _legendFontColor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _legendFontColor,
            _legendFontColor_slice,
            _legendFontColor_tag
          >
        _legendFontColor_forany;

      static _legendFontColor_slice *
      _legendFontColor_alloc (void);

      static void
      _legendFontColor_free (
          _legendFontColor_slice *_tao_slice);
      
      static _legendFontColor_slice *
      _legendFontColor_dup (
          const _legendFontColor_slice *_tao_slice);
      
      static void
      _legendFontColor_copy (
          _legendFontColor_slice *_tao_to,
          const _legendFontColor_slice *_tao_from
        );

      _legendFontColor legendFontColor;
      net::etech::CounterSeq counterList;
      net::etech::FontChartSeq fontChartList;
      net::etech::ParamSelectedSeq paramSelectedList;
      ::CORBA::Long outputType;
      ::CORBA::Long outputTypeSpecify;
      ::CORBA::Long pollInterval;
      ::CORBA::Long trasparence;
      ::CORBA::Long blending;
      ::CORBA::Long spessoreLinea;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_CHARTSEQ_CH_)
#define _NET_ETECH_CHARTSEQ_CH_

    class ChartSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          ChartSeq
        >
      ChartSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ChartSeq
        >
      ChartSeq_out;

    class  ChartSeq
      : public
          ::TAO::unbounded_value_sequence<
              Chart
            >
    {
    public:
      ChartSeq (void);
      ChartSeq ( ::CORBA::ULong max);
      ChartSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        Chart* buffer,
        ::CORBA::Boolean release = false);
      ChartSeq (const ChartSeq &);
      virtual ~ChartSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ChartSeq_var _var_type;
      typedef ChartSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct Session;

    typedef
      ::TAO_Var_Var_T<
          Session
        >
      Session_var;

    typedef
      ::TAO_Out_T<
          Session
        >
      Session_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  Session
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef Session_var _var_type;
      typedef Session_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _login[20];
      typedef ::CORBA::Char _login_slice;
      struct _login_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _login,
            _login_slice,
            _login_tag
          >
        _login_forany;

      static _login_slice *
      _login_alloc (void);

      static void
      _login_free (
          _login_slice *_tao_slice);
      
      static _login_slice *
      _login_dup (
          const _login_slice *_tao_slice);
      
      static void
      _login_copy (
          _login_slice *_tao_to,
          const _login_slice *_tao_from
        );

      _login login;
      ::CORBA::Long idSession;
      ::CORBA::Long idFunction;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _descSession[150];
      typedef ::CORBA::Char _descSession_slice;
      struct _descSession_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _descSession,
            _descSession_slice,
            _descSession_tag
          >
        _descSession_forany;

      static _descSession_slice *
      _descSession_alloc (void);

      static void
      _descSession_free (
          _descSession_slice *_tao_slice);
      
      static _descSession_slice *
      _descSession_dup (
          const _descSession_slice *_tao_slice);
      
      static void
      _descSession_copy (
          _descSession_slice *_tao_to,
          const _descSession_slice *_tao_from
        );

      _descSession descSession;
      ::CORBA::Long xPos;
      ::CORBA::Long yPos;
      ::CORBA::Long heigth;
      ::CORBA::Long weigth;
      net::etech::ChartSeq ChartList;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_SESSIONSEQ_CH_)
#define _NET_ETECH_SESSIONSEQ_CH_

    class SessionSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          SessionSeq
        >
      SessionSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          SessionSeq
        >
      SessionSeq_out;

    class  SessionSeq
      : public
          ::TAO::unbounded_value_sequence<
              Session
            >
    {
    public:
      SessionSeq (void);
      SessionSeq ( ::CORBA::ULong max);
      SessionSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        Session* buffer,
        ::CORBA::Boolean release = false);
      SessionSeq (const SessionSeq &);
      virtual ~SessionSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SessionSeq_var _var_type;
      typedef SessionSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct FunctionDefault;

    typedef
      ::TAO_Fixed_Var_T<
          FunctionDefault
        >
      FunctionDefault_var;

    typedef
      FunctionDefault &
      FunctionDefault_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  FunctionDefault
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef FunctionDefault_var _var_type;
      typedef FunctionDefault_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _northCenterStr[150];
      typedef ::CORBA::Char _northCenterStr_slice;
      struct _northCenterStr_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _northCenterStr,
            _northCenterStr_slice,
            _northCenterStr_tag
          >
        _northCenterStr_forany;

      static _northCenterStr_slice *
      _northCenterStr_alloc (void);

      static void
      _northCenterStr_free (
          _northCenterStr_slice *_tao_slice);
      
      static _northCenterStr_slice *
      _northCenterStr_dup (
          const _northCenterStr_slice *_tao_slice);
      
      static void
      _northCenterStr_copy (
          _northCenterStr_slice *_tao_to,
          const _northCenterStr_slice *_tao_from
        );

      _northCenterStr northCenterStr;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _northCenterIcon[50];
      typedef ::CORBA::Char _northCenterIcon_slice;
      struct _northCenterIcon_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _northCenterIcon,
            _northCenterIcon_slice,
            _northCenterIcon_tag
          >
        _northCenterIcon_forany;

      static _northCenterIcon_slice *
      _northCenterIcon_alloc (void);

      static void
      _northCenterIcon_free (
          _northCenterIcon_slice *_tao_slice);
      
      static _northCenterIcon_slice *
      _northCenterIcon_dup (
          const _northCenterIcon_slice *_tao_slice);
      
      static void
      _northCenterIcon_copy (
          _northCenterIcon_slice *_tao_to,
          const _northCenterIcon_slice *_tao_from
        );

      _northCenterIcon northCenterIcon;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _northRigthStr[150];
      typedef ::CORBA::Char _northRigthStr_slice;
      struct _northRigthStr_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _northRigthStr,
            _northRigthStr_slice,
            _northRigthStr_tag
          >
        _northRigthStr_forany;

      static _northRigthStr_slice *
      _northRigthStr_alloc (void);

      static void
      _northRigthStr_free (
          _northRigthStr_slice *_tao_slice);
      
      static _northRigthStr_slice *
      _northRigthStr_dup (
          const _northRigthStr_slice *_tao_slice);
      
      static void
      _northRigthStr_copy (
          _northRigthStr_slice *_tao_to,
          const _northRigthStr_slice *_tao_from
        );

      _northRigthStr northRigthStr;
      ::CORBA::Long northRigthType;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _northFontColor[10];
      typedef ::CORBA::Char _northFontColor_slice;
      struct _northFontColor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _northFontColor,
            _northFontColor_slice,
            _northFontColor_tag
          >
        _northFontColor_forany;

      static _northFontColor_slice *
      _northFontColor_alloc (void);

      static void
      _northFontColor_free (
          _northFontColor_slice *_tao_slice);
      
      static _northFontColor_slice *
      _northFontColor_dup (
          const _northFontColor_slice *_tao_slice);
      
      static void
      _northFontColor_copy (
          _northFontColor_slice *_tao_to,
          const _northFontColor_slice *_tao_from
        );

      _northFontColor northFontColor;
      ::CORBA::Long northExistence;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _chartBackgroundColor[10];
      typedef ::CORBA::Char _chartBackgroundColor_slice;
      struct _chartBackgroundColor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _chartBackgroundColor,
            _chartBackgroundColor_slice,
            _chartBackgroundColor_tag
          >
        _chartBackgroundColor_forany;

      static _chartBackgroundColor_slice *
      _chartBackgroundColor_alloc (void);

      static void
      _chartBackgroundColor_free (
          _chartBackgroundColor_slice *_tao_slice);
      
      static _chartBackgroundColor_slice *
      _chartBackgroundColor_dup (
          const _chartBackgroundColor_slice *_tao_slice);
      
      static void
      _chartBackgroundColor_copy (
          _chartBackgroundColor_slice *_tao_to,
          const _chartBackgroundColor_slice *_tao_from
        );

      _chartBackgroundColor chartBackgroundColor;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _chartFontColor[10];
      typedef ::CORBA::Char _chartFontColor_slice;
      struct _chartFontColor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _chartFontColor,
            _chartFontColor_slice,
            _chartFontColor_tag
          >
        _chartFontColor_forany;

      static _chartFontColor_slice *
      _chartFontColor_alloc (void);

      static void
      _chartFontColor_free (
          _chartFontColor_slice *_tao_slice);
      
      static _chartFontColor_slice *
      _chartFontColor_dup (
          const _chartFontColor_slice *_tao_slice);
      
      static void
      _chartFontColor_copy (
          _chartFontColor_slice *_tao_to,
          const _chartFontColor_slice *_tao_from
        );

      _chartFontColor chartFontColor;
      ::CORBA::Long chartExistence;
      ::CORBA::Long chartGridExistence;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _legendBackgroundColor[10];
      typedef ::CORBA::Char _legendBackgroundColor_slice;
      struct _legendBackgroundColor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _legendBackgroundColor,
            _legendBackgroundColor_slice,
            _legendBackgroundColor_tag
          >
        _legendBackgroundColor_forany;

      static _legendBackgroundColor_slice *
      _legendBackgroundColor_alloc (void);

      static void
      _legendBackgroundColor_free (
          _legendBackgroundColor_slice *_tao_slice);
      
      static _legendBackgroundColor_slice *
      _legendBackgroundColor_dup (
          const _legendBackgroundColor_slice *_tao_slice);
      
      static void
      _legendBackgroundColor_copy (
          _legendBackgroundColor_slice *_tao_to,
          const _legendBackgroundColor_slice *_tao_from
        );

      _legendBackgroundColor legendBackgroundColor;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _legendFontColor[10];
      typedef ::CORBA::Char _legendFontColor_slice;
      struct _legendFontColor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _legendFontColor,
            _legendFontColor_slice,
            _legendFontColor_tag
          >
        _legendFontColor_forany;

      static _legendFontColor_slice *
      _legendFontColor_alloc (void);

      static void
      _legendFontColor_free (
          _legendFontColor_slice *_tao_slice);
      
      static _legendFontColor_slice *
      _legendFontColor_dup (
          const _legendFontColor_slice *_tao_slice);
      
      static void
      _legendFontColor_copy (
          _legendFontColor_slice *_tao_to,
          const _legendFontColor_slice *_tao_from
        );

      _legendFontColor legendFontColor;
      ::CORBA::Long legendExistence;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _southFontColor[10];
      typedef ::CORBA::Char _southFontColor_slice;
      struct _southFontColor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _southFontColor,
            _southFontColor_slice,
            _southFontColor_tag
          >
        _southFontColor_forany;

      static _southFontColor_slice *
      _southFontColor_alloc (void);

      static void
      _southFontColor_free (
          _southFontColor_slice *_tao_slice);
      
      static _southFontColor_slice *
      _southFontColor_dup (
          const _southFontColor_slice *_tao_slice);
      
      static void
      _southFontColor_copy (
          _southFontColor_slice *_tao_to,
          const _southFontColor_slice *_tao_from
        );

      _southFontColor southFontColor;
      ::CORBA::Long southExistence;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_IDSUBFUNCTIONJOINEDSEQ_CH_)
#define _NET_ETECH_IDSUBFUNCTIONJOINEDSEQ_CH_

    class IdSubFunctionJoinedSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          IdSubFunctionJoinedSeq
        >
      IdSubFunctionJoinedSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          IdSubFunctionJoinedSeq
        >
      IdSubFunctionJoinedSeq_out;

    class  IdSubFunctionJoinedSeq
      : public
          ::TAO::unbounded_value_sequence<
              ::CORBA::Long
            >
    {
    public:
      IdSubFunctionJoinedSeq (void);
      IdSubFunctionJoinedSeq ( ::CORBA::ULong max);
      IdSubFunctionJoinedSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Long* buffer,
        ::CORBA::Boolean release = false);
      IdSubFunctionJoinedSeq (const IdSubFunctionJoinedSeq &);
      virtual ~IdSubFunctionJoinedSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef IdSubFunctionJoinedSeq_var _var_type;
      typedef IdSubFunctionJoinedSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct SubFunctionJoined;

    typedef
      ::TAO_Var_Var_T<
          SubFunctionJoined
        >
      SubFunctionJoined_var;

    typedef
      ::TAO_Out_T<
          SubFunctionJoined
        >
      SubFunctionJoined_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  SubFunctionJoined
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SubFunctionJoined_var _var_type;
      typedef SubFunctionJoined_out _out_type;
      
      ::CORBA::Long idSubFunction;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _descrizione[150];
      typedef ::CORBA::Char _descrizione_slice;
      struct _descrizione_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _descrizione,
            _descrizione_slice,
            _descrizione_tag
          >
        _descrizione_forany;

      static _descrizione_slice *
      _descrizione_alloc (void);

      static void
      _descrizione_free (
          _descrizione_slice *_tao_slice);
      
      static _descrizione_slice *
      _descrizione_dup (
          const _descrizione_slice *_tao_slice);
      
      static void
      _descrizione_copy (
          _descrizione_slice *_tao_to,
          const _descrizione_slice *_tao_from
        );

      _descrizione descrizione;
      net::etech::IdSubFunctionJoinedSeq idSubFunctionJoined;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_SUBFUNCTIONJOINEDSEQ_CH_)
#define _NET_ETECH_SUBFUNCTIONJOINEDSEQ_CH_

    class SubFunctionJoinedSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          SubFunctionJoinedSeq
        >
      SubFunctionJoinedSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          SubFunctionJoinedSeq
        >
      SubFunctionJoinedSeq_out;

    class  SubFunctionJoinedSeq
      : public
          ::TAO::unbounded_value_sequence<
              SubFunctionJoined
            >
    {
    public:
      SubFunctionJoinedSeq (void);
      SubFunctionJoinedSeq ( ::CORBA::ULong max);
      SubFunctionJoinedSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        SubFunctionJoined* buffer,
        ::CORBA::Boolean release = false);
      SubFunctionJoinedSeq (const SubFunctionJoinedSeq &);
      virtual ~SubFunctionJoinedSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SubFunctionJoinedSeq_var _var_type;
      typedef SubFunctionJoinedSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct SubFunction;

    typedef
      ::TAO_Var_Var_T<
          SubFunction
        >
      SubFunction_var;

    typedef
      ::TAO_Out_T<
          SubFunction
        >
      SubFunction_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  SubFunction
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SubFunction_var _var_type;
      typedef SubFunction_out _out_type;
      
      ::CORBA::Long idSubFunction;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _subFunctionName[50];
      typedef ::CORBA::Char _subFunctionName_slice;
      struct _subFunctionName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _subFunctionName,
            _subFunctionName_slice,
            _subFunctionName_tag
          >
        _subFunctionName_forany;

      static _subFunctionName_slice *
      _subFunctionName_alloc (void);

      static void
      _subFunctionName_free (
          _subFunctionName_slice *_tao_slice);
      
      static _subFunctionName_slice *
      _subFunctionName_dup (
          const _subFunctionName_slice *_tao_slice);
      
      static void
      _subFunctionName_copy (
          _subFunctionName_slice *_tao_to,
          const _subFunctionName_slice *_tao_from
        );

      _subFunctionName subFunctionName;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _description[150];
      typedef ::CORBA::Char _description_slice;
      struct _description_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _description,
            _description_slice,
            _description_tag
          >
        _description_forany;

      static _description_slice *
      _description_alloc (void);

      static void
      _description_free (
          _description_slice *_tao_slice);
      
      static _description_slice *
      _description_dup (
          const _description_slice *_tao_slice);
      
      static void
      _description_copy (
          _description_slice *_tao_to,
          const _description_slice *_tao_from
        );

      _description description;
      ::CORBA::Boolean realTimeOnly;
      ::CORBA::Long dataAvailability;
      net::etech::TimeUnits pollIntervalUnits;
      net::etech::PollingSeq pollIntervalList;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _pollRange[40];
      typedef ::CORBA::Char _pollRange_slice;
      struct _pollRange_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _pollRange,
            _pollRange_slice,
            _pollRange_tag
          >
        _pollRange_forany;

      static _pollRange_slice *
      _pollRange_alloc (void);

      static void
      _pollRange_free (
          _pollRange_slice *_tao_slice);
      
      static _pollRange_slice *
      _pollRange_dup (
          const _pollRange_slice *_tao_slice);
      
      static void
      _pollRange_copy (
          _pollRange_slice *_tao_to,
          const _pollRange_slice *_tao_from
        );

      _pollRange pollRange;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _outputBaseUnit[50];
      typedef ::CORBA::Char _outputBaseUnit_slice;
      struct _outputBaseUnit_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _outputBaseUnit,
            _outputBaseUnit_slice,
            _outputBaseUnit_tag
          >
        _outputBaseUnit_forany;

      static _outputBaseUnit_slice *
      _outputBaseUnit_alloc (void);

      static void
      _outputBaseUnit_free (
          _outputBaseUnit_slice *_tao_slice);
      
      static _outputBaseUnit_slice *
      _outputBaseUnit_dup (
          const _outputBaseUnit_slice *_tao_slice);
      
      static void
      _outputBaseUnit_copy (
          _outputBaseUnit_slice *_tao_to,
          const _outputBaseUnit_slice *_tao_from
        );

      _outputBaseUnit outputBaseUnit;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _minValue[30];
      typedef ::CORBA::Char _minValue_slice;
      struct _minValue_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _minValue,
            _minValue_slice,
            _minValue_tag
          >
        _minValue_forany;

      static _minValue_slice *
      _minValue_alloc (void);

      static void
      _minValue_free (
          _minValue_slice *_tao_slice);
      
      static _minValue_slice *
      _minValue_dup (
          const _minValue_slice *_tao_slice);
      
      static void
      _minValue_copy (
          _minValue_slice *_tao_to,
          const _minValue_slice *_tao_from
        );

      _minValue minValue;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _maxValue[30];
      typedef ::CORBA::Char _maxValue_slice;
      struct _maxValue_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _maxValue,
            _maxValue_slice,
            _maxValue_tag
          >
        _maxValue_forany;

      static _maxValue_slice *
      _maxValue_alloc (void);

      static void
      _maxValue_free (
          _maxValue_slice *_tao_slice);
      
      static _maxValue_slice *
      _maxValue_dup (
          const _maxValue_slice *_tao_slice);
      
      static void
      _maxValue_copy (
          _maxValue_slice *_tao_to,
          const _maxValue_slice *_tao_from
        );

      _maxValue maxValue;
      net::etech::OutputTypeSeq admittedOutputType;
      net::etech::InputItemSeq inputItemsList;
      net::etech::SubFuctionGUI subFunctionGUI;
      ::CORBA::Long enabled;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_SUBFUNCTIONSEQ_CH_)
#define _NET_ETECH_SUBFUNCTIONSEQ_CH_

    class SubFunctionSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          SubFunctionSeq
        >
      SubFunctionSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          SubFunctionSeq
        >
      SubFunctionSeq_out;

    class  SubFunctionSeq
      : public
          ::TAO::unbounded_value_sequence<
              SubFunction
            >
    {
    public:
      SubFunctionSeq (void);
      SubFunctionSeq ( ::CORBA::ULong max);
      SubFunctionSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        SubFunction* buffer,
        ::CORBA::Boolean release = false);
      SubFunctionSeq (const SubFunctionSeq &);
      virtual ~SubFunctionSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SubFunctionSeq_var _var_type;
      typedef SubFunctionSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct Descrittore;

    typedef
      ::TAO_Fixed_Var_T<
          Descrittore
        >
      Descrittore_var;

    typedef
      Descrittore &
      Descrittore_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  Descrittore
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef Descrittore_var _var_type;
      typedef Descrittore_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _descr[150];
      typedef ::CORBA::Char _descr_slice;
      struct _descr_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _descr,
            _descr_slice,
            _descr_tag
          >
        _descr_forany;

      static _descr_slice *
      _descr_alloc (void);

      static void
      _descr_free (
          _descr_slice *_tao_slice);
      
      static _descr_slice *
      _descr_dup (
          const _descr_slice *_tao_slice);
      
      static void
      _descr_copy (
          _descr_slice *_tao_to,
          const _descr_slice *_tao_from
        );

      _descr descr;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_DESCRITTORESEQ_CH_)
#define _NET_ETECH_DESCRITTORESEQ_CH_

    class DescrittoreSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          DescrittoreSeq
        >
      DescrittoreSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          DescrittoreSeq
        >
      DescrittoreSeq_out;

    class  DescrittoreSeq
      : public
          ::TAO::unbounded_value_sequence<
              Descrittore
            >
    {
    public:
      DescrittoreSeq (void);
      DescrittoreSeq ( ::CORBA::ULong max);
      DescrittoreSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        Descrittore* buffer,
        ::CORBA::Boolean release = false);
      DescrittoreSeq (const DescrittoreSeq &);
      virtual ~DescrittoreSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DescrittoreSeq_var _var_type;
      typedef DescrittoreSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DispatcherDescription;

    typedef
      ::TAO_Fixed_Var_T<
          DispatcherDescription
        >
      DispatcherDescription_var;

    typedef
      DispatcherDescription &
      DispatcherDescription_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DispatcherDescription
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DispatcherDescription_var _var_type;
      typedef DispatcherDescription_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _dispatcherName[100];
      typedef ::CORBA::Char _dispatcherName_slice;
      struct _dispatcherName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _dispatcherName,
            _dispatcherName_slice,
            _dispatcherName_tag
          >
        _dispatcherName_forany;

      static _dispatcherName_slice *
      _dispatcherName_alloc (void);

      static void
      _dispatcherName_free (
          _dispatcherName_slice *_tao_slice);
      
      static _dispatcherName_slice *
      _dispatcherName_dup (
          const _dispatcherName_slice *_tao_slice);
      
      static void
      _dispatcherName_copy (
          _dispatcherName_slice *_tao_to,
          const _dispatcherName_slice *_tao_from
        );

      _dispatcherName dispatcherName;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _dispDescription[150];
      typedef ::CORBA::Char _dispDescription_slice;
      struct _dispDescription_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _dispDescription,
            _dispDescription_slice,
            _dispDescription_tag
          >
        _dispDescription_forany;

      static _dispDescription_slice *
      _dispDescription_alloc (void);

      static void
      _dispDescription_free (
          _dispDescription_slice *_tao_slice);
      
      static _dispDescription_slice *
      _dispDescription_dup (
          const _dispDescription_slice *_tao_slice);
      
      static void
      _dispDescription_copy (
          _dispDescription_slice *_tao_to,
          const _dispDescription_slice *_tao_from
        );

      _dispDescription dispDescription;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_DISPATCHERDESCRIPTIONSEQ_CH_)
#define _NET_ETECH_DISPATCHERDESCRIPTIONSEQ_CH_

    class DispatcherDescriptionSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          DispatcherDescriptionSeq
        >
      DispatcherDescriptionSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          DispatcherDescriptionSeq
        >
      DispatcherDescriptionSeq_out;

    class  DispatcherDescriptionSeq
      : public
          ::TAO::unbounded_value_sequence<
              DispatcherDescription
            >
    {
    public:
      DispatcherDescriptionSeq (void);
      DispatcherDescriptionSeq ( ::CORBA::ULong max);
      DispatcherDescriptionSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DispatcherDescription* buffer,
        ::CORBA::Boolean release = false);
      DispatcherDescriptionSeq (const DispatcherDescriptionSeq &);
      virtual ~DispatcherDescriptionSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DispatcherDescriptionSeq_var _var_type;
      typedef DispatcherDescriptionSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct FunctionDescription;

    typedef
      ::TAO_Var_Var_T<
          FunctionDescription
        >
      FunctionDescription_var;

    typedef
      ::TAO_Out_T<
          FunctionDescription
        >
      FunctionDescription_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  FunctionDescription
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef FunctionDescription_var _var_type;
      typedef FunctionDescription_out _out_type;
      
      ::CORBA::Long idFunction;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _pluginName[60];
      typedef ::CORBA::Char _pluginName_slice;
      struct _pluginName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _pluginName,
            _pluginName_slice,
            _pluginName_tag
          >
        _pluginName_forany;

      static _pluginName_slice *
      _pluginName_alloc (void);

      static void
      _pluginName_free (
          _pluginName_slice *_tao_slice);
      
      static _pluginName_slice *
      _pluginName_dup (
          const _pluginName_slice *_tao_slice);
      
      static void
      _pluginName_copy (
          _pluginName_slice *_tao_to,
          const _pluginName_slice *_tao_from
        );

      _pluginName pluginName;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _pluginTag[60];
      typedef ::CORBA::Char _pluginTag_slice;
      struct _pluginTag_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _pluginTag,
            _pluginTag_slice,
            _pluginTag_tag
          >
        _pluginTag_forany;

      static _pluginTag_slice *
      _pluginTag_alloc (void);

      static void
      _pluginTag_free (
          _pluginTag_slice *_tao_slice);
      
      static _pluginTag_slice *
      _pluginTag_dup (
          const _pluginTag_slice *_tao_slice);
      
      static void
      _pluginTag_copy (
          _pluginTag_slice *_tao_to,
          const _pluginTag_slice *_tao_from
        );

      _pluginTag pluginTag;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _dispatcherName[100];
      typedef ::CORBA::Char _dispatcherName_slice;
      struct _dispatcherName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _dispatcherName,
            _dispatcherName_slice,
            _dispatcherName_tag
          >
        _dispatcherName_forany;

      static _dispatcherName_slice *
      _dispatcherName_alloc (void);

      static void
      _dispatcherName_free (
          _dispatcherName_slice *_tao_slice);
      
      static _dispatcherName_slice *
      _dispatcherName_dup (
          const _dispatcherName_slice *_tao_slice);
      
      static void
      _dispatcherName_copy (
          _dispatcherName_slice *_tao_to,
          const _dispatcherName_slice *_tao_from
        );

      _dispatcherName dispatcherName;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _logicalFunction[50];
      typedef ::CORBA::Char _logicalFunction_slice;
      struct _logicalFunction_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _logicalFunction,
            _logicalFunction_slice,
            _logicalFunction_tag
          >
        _logicalFunction_forany;

      static _logicalFunction_slice *
      _logicalFunction_alloc (void);

      static void
      _logicalFunction_free (
          _logicalFunction_slice *_tao_slice);
      
      static _logicalFunction_slice *
      _logicalFunction_dup (
          const _logicalFunction_slice *_tao_slice);
      
      static void
      _logicalFunction_copy (
          _logicalFunction_slice *_tao_to,
          const _logicalFunction_slice *_tao_from
        );

      _logicalFunction logicalFunction;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _longDescription[150];
      typedef ::CORBA::Char _longDescription_slice;
      struct _longDescription_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _longDescription,
            _longDescription_slice,
            _longDescription_tag
          >
        _longDescription_forany;

      static _longDescription_slice *
      _longDescription_alloc (void);

      static void
      _longDescription_free (
          _longDescription_slice *_tao_slice);
      
      static _longDescription_slice *
      _longDescription_dup (
          const _longDescription_slice *_tao_slice);
      
      static void
      _longDescription_copy (
          _longDescription_slice *_tao_to,
          const _longDescription_slice *_tao_from
        );

      _longDescription longDescription;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _version[60];
      typedef ::CORBA::Char _version_slice;
      struct _version_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _version,
            _version_slice,
            _version_tag
          >
        _version_forany;

      static _version_slice *
      _version_alloc (void);

      static void
      _version_free (
          _version_slice *_tao_slice);
      
      static _version_slice *
      _version_dup (
          const _version_slice *_tao_slice);
      
      static void
      _version_copy (
          _version_slice *_tao_to,
          const _version_slice *_tao_from
        );

      _version version;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _releaseDate[60];
      typedef ::CORBA::Char _releaseDate_slice;
      struct _releaseDate_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _releaseDate,
            _releaseDate_slice,
            _releaseDate_tag
          >
        _releaseDate_forany;

      static _releaseDate_slice *
      _releaseDate_alloc (void);

      static void
      _releaseDate_free (
          _releaseDate_slice *_tao_slice);
      
      static _releaseDate_slice *
      _releaseDate_dup (
          const _releaseDate_slice *_tao_slice);
      
      static void
      _releaseDate_copy (
          _releaseDate_slice *_tao_to,
          const _releaseDate_slice *_tao_from
        );

      _releaseDate releaseDate;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _vendor[50];
      typedef ::CORBA::Char _vendor_slice;
      struct _vendor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _vendor,
            _vendor_slice,
            _vendor_tag
          >
        _vendor_forany;

      static _vendor_slice *
      _vendor_alloc (void);

      static void
      _vendor_free (
          _vendor_slice *_tao_slice);
      
      static _vendor_slice *
      _vendor_dup (
          const _vendor_slice *_tao_slice);
      
      static void
      _vendor_copy (
          _vendor_slice *_tao_to,
          const _vendor_slice *_tao_from
        );

      _vendor vendor;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _author[50];
      typedef ::CORBA::Char _author_slice;
      struct _author_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _author,
            _author_slice,
            _author_tag
          >
        _author_forany;

      static _author_slice *
      _author_alloc (void);

      static void
      _author_free (
          _author_slice *_tao_slice);
      
      static _author_slice *
      _author_dup (
          const _author_slice *_tao_slice);
      
      static void
      _author_copy (
          _author_slice *_tao_to,
          const _author_slice *_tao_from
        );

      _author author;
      net::etech::SubFunctionSeq SubFunctionList;
      net::etech::SubFunctionJoinedSeq subFunctionJoinedList;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _sourceData[60];
      typedef ::CORBA::Char _sourceData_slice;
      struct _sourceData_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _sourceData,
            _sourceData_slice,
            _sourceData_tag
          >
        _sourceData_forany;

      static _sourceData_slice *
      _sourceData_alloc (void);

      static void
      _sourceData_free (
          _sourceData_slice *_tao_slice);
      
      static _sourceData_slice *
      _sourceData_dup (
          const _sourceData_slice *_tao_slice);
      
      static void
      _sourceData_copy (
          _sourceData_slice *_tao_to,
          const _sourceData_slice *_tao_from
        );

      _sourceData sourceData;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _sourceLocation[60];
      typedef ::CORBA::Char _sourceLocation_slice;
      struct _sourceLocation_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _sourceLocation,
            _sourceLocation_slice,
            _sourceLocation_tag
          >
        _sourceLocation_forany;

      static _sourceLocation_slice *
      _sourceLocation_alloc (void);

      static void
      _sourceLocation_free (
          _sourceLocation_slice *_tao_slice);
      
      static _sourceLocation_slice *
      _sourceLocation_dup (
          const _sourceLocation_slice *_tao_slice);
      
      static void
      _sourceLocation_copy (
          _sourceLocation_slice *_tao_to,
          const _sourceLocation_slice *_tao_from
        );

      _sourceLocation sourceLocation;
      ::CORBA::Long pluginStatus;
      net::etech::DescrittoreSeq descrittore;
      net::etech::FunctionDefault function_Default;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_FUNCTIONDESCRIPTIONSEQ_CH_)
#define _NET_ETECH_FUNCTIONDESCRIPTIONSEQ_CH_

    class FunctionDescriptionSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          FunctionDescriptionSeq
        >
      FunctionDescriptionSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          FunctionDescriptionSeq
        >
      FunctionDescriptionSeq_out;

    class  FunctionDescriptionSeq
      : public
          ::TAO::unbounded_value_sequence<
              FunctionDescription
            >
    {
    public:
      FunctionDescriptionSeq (void);
      FunctionDescriptionSeq ( ::CORBA::ULong max);
      FunctionDescriptionSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        FunctionDescription* buffer,
        ::CORBA::Boolean release = false);
      FunctionDescriptionSeq (const FunctionDescriptionSeq &);
      virtual ~FunctionDescriptionSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef FunctionDescriptionSeq_var _var_type;
      typedef FunctionDescriptionSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct FunctionDescriptionWrapp;

    typedef
      ::TAO_Var_Var_T<
          FunctionDescriptionWrapp
        >
      FunctionDescriptionWrapp_var;

    typedef
      ::TAO_Out_T<
          FunctionDescriptionWrapp
        >
      FunctionDescriptionWrapp_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  FunctionDescriptionWrapp
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef FunctionDescriptionWrapp_var _var_type;
      typedef FunctionDescriptionWrapp_out _out_type;
      
      net::etech::FunctionDescriptionSeq plugin;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct SYSTEM_TIME;

    typedef
      ::TAO_Fixed_Var_T<
          SYSTEM_TIME
        >
      SYSTEM_TIME_var;

    typedef
      SYSTEM_TIME &
      SYSTEM_TIME_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  SYSTEM_TIME
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SYSTEM_TIME_var _var_type;
      typedef SYSTEM_TIME_out _out_type;
      
      ::CORBA::Long gg;
      ::CORBA::Long mm;
      ::CORBA::Long aa;
      ::CORBA::Long sec;
      ::CORBA::Long min;
      ::CORBA::Long hh;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct InputSubFunction;

    typedef
      ::TAO_Var_Var_T<
          InputSubFunction
        >
      InputSubFunction_var;

    typedef
      ::TAO_Out_T<
          InputSubFunction
        >
      InputSubFunction_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  InputSubFunction
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef InputSubFunction_var _var_type;
      typedef InputSubFunction_out _out_type;
      
      ::CORBA::Long idSubFunction;
      ::CORBA::Long idInputType;
      net::etech::ParamValueSeq paramValue;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_INPUTSUBFUNCTIONSEQ_CH_)
#define _NET_ETECH_INPUTSUBFUNCTIONSEQ_CH_

    class InputSubFunctionSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          InputSubFunctionSeq
        >
      InputSubFunctionSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          InputSubFunctionSeq
        >
      InputSubFunctionSeq_out;

    class  InputSubFunctionSeq
      : public
          ::TAO::unbounded_value_sequence<
              InputSubFunction
            >
    {
    public:
      InputSubFunctionSeq (void);
      InputSubFunctionSeq ( ::CORBA::ULong max);
      InputSubFunctionSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        InputSubFunction* buffer,
        ::CORBA::Boolean release = false);
      InputSubFunctionSeq (const InputSubFunctionSeq &);
      virtual ~InputSubFunctionSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef InputSubFunctionSeq_var _var_type;
      typedef InputSubFunctionSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct PLUGIN_CONFIG;

    typedef
      ::TAO_Var_Var_T<
          PLUGIN_CONFIG
        >
      PLUGIN_CONFIG_var;

    typedef
      ::TAO_Out_T<
          PLUGIN_CONFIG
        >
      PLUGIN_CONFIG_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  PLUGIN_CONFIG
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef PLUGIN_CONFIG_var _var_type;
      typedef PLUGIN_CONFIG_out _out_type;
      
      ::CORBA::Long idFunction;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _pluginName[60];
      typedef ::CORBA::Char _pluginName_slice;
      struct _pluginName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _pluginName,
            _pluginName_slice,
            _pluginName_tag
          >
        _pluginName_forany;

      static _pluginName_slice *
      _pluginName_alloc (void);

      static void
      _pluginName_free (
          _pluginName_slice *_tao_slice);
      
      static _pluginName_slice *
      _pluginName_dup (
          const _pluginName_slice *_tao_slice);
      
      static void
      _pluginName_copy (
          _pluginName_slice *_tao_to,
          const _pluginName_slice *_tao_from
        );

      _pluginName pluginName;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _pluginTag[60];
      typedef ::CORBA::Char _pluginTag_slice;
      struct _pluginTag_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _pluginTag,
            _pluginTag_slice,
            _pluginTag_tag
          >
        _pluginTag_forany;

      static _pluginTag_slice *
      _pluginTag_alloc (void);

      static void
      _pluginTag_free (
          _pluginTag_slice *_tao_slice);
      
      static _pluginTag_slice *
      _pluginTag_dup (
          const _pluginTag_slice *_tao_slice);
      
      static void
      _pluginTag_copy (
          _pluginTag_slice *_tao_to,
          const _pluginTag_slice *_tao_from
        );

      _pluginTag pluginTag;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _logicalFunction[50];
      typedef ::CORBA::Char _logicalFunction_slice;
      struct _logicalFunction_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _logicalFunction,
            _logicalFunction_slice,
            _logicalFunction_tag
          >
        _logicalFunction_forany;

      static _logicalFunction_slice *
      _logicalFunction_alloc (void);

      static void
      _logicalFunction_free (
          _logicalFunction_slice *_tao_slice);
      
      static _logicalFunction_slice *
      _logicalFunction_dup (
          const _logicalFunction_slice *_tao_slice);
      
      static void
      _logicalFunction_copy (
          _logicalFunction_slice *_tao_to,
          const _logicalFunction_slice *_tao_from
        );

      _logicalFunction logicalFunction;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _longDescription[150];
      typedef ::CORBA::Char _longDescription_slice;
      struct _longDescription_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _longDescription,
            _longDescription_slice,
            _longDescription_tag
          >
        _longDescription_forany;

      static _longDescription_slice *
      _longDescription_alloc (void);

      static void
      _longDescription_free (
          _longDescription_slice *_tao_slice);
      
      static _longDescription_slice *
      _longDescription_dup (
          const _longDescription_slice *_tao_slice);
      
      static void
      _longDescription_copy (
          _longDescription_slice *_tao_to,
          const _longDescription_slice *_tao_from
        );

      _longDescription longDescription;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _version[60];
      typedef ::CORBA::Char _version_slice;
      struct _version_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _version,
            _version_slice,
            _version_tag
          >
        _version_forany;

      static _version_slice *
      _version_alloc (void);

      static void
      _version_free (
          _version_slice *_tao_slice);
      
      static _version_slice *
      _version_dup (
          const _version_slice *_tao_slice);
      
      static void
      _version_copy (
          _version_slice *_tao_to,
          const _version_slice *_tao_from
        );

      _version version;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _releaseDate[60];
      typedef ::CORBA::Char _releaseDate_slice;
      struct _releaseDate_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _releaseDate,
            _releaseDate_slice,
            _releaseDate_tag
          >
        _releaseDate_forany;

      static _releaseDate_slice *
      _releaseDate_alloc (void);

      static void
      _releaseDate_free (
          _releaseDate_slice *_tao_slice);
      
      static _releaseDate_slice *
      _releaseDate_dup (
          const _releaseDate_slice *_tao_slice);
      
      static void
      _releaseDate_copy (
          _releaseDate_slice *_tao_to,
          const _releaseDate_slice *_tao_from
        );

      _releaseDate releaseDate;
      net::etech::SYSTEM_TIME validTime;
      net::etech::InputSubFunctionSeq inputSubFunction;
      ::CORBA::Boolean mergedInput;
      ::CORBA::Boolean isFirstCall;
      ::CORBA::Long timePolling;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_DESC;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_DESC
        >
      DATA_DESC_var;

    typedef
      DATA_DESC &
      DATA_DESC_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_DESC
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_DESC_var _var_type;
      typedef DATA_DESC_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _valueHelp[50];
      typedef ::CORBA::Char _valueHelp_slice;
      struct _valueHelp_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _valueHelp,
            _valueHelp_slice,
            _valueHelp_tag
          >
        _valueHelp_forany;

      static _valueHelp_slice *
      _valueHelp_alloc (void);

      static void
      _valueHelp_free (
          _valueHelp_slice *_tao_slice);
      
      static _valueHelp_slice *
      _valueHelp_dup (
          const _valueHelp_slice *_tao_slice);
      
      static void
      _valueHelp_copy (
          _valueHelp_slice *_tao_to,
          const _valueHelp_slice *_tao_from
        );

      _valueHelp valueHelp;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _descHelp[150];
      typedef ::CORBA::Char _descHelp_slice;
      struct _descHelp_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _descHelp,
            _descHelp_slice,
            _descHelp_tag
          >
        _descHelp_forany;

      static _descHelp_slice *
      _descHelp_alloc (void);

      static void
      _descHelp_free (
          _descHelp_slice *_tao_slice);
      
      static _descHelp_slice *
      _descHelp_dup (
          const _descHelp_slice *_tao_slice);
      
      static void
      _descHelp_copy (
          _descHelp_slice *_tao_to,
          const _descHelp_slice *_tao_from
        );

      _descHelp descHelp;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_DESCSEQ_CH_)
#define _NET_ETECH_DESCSEQ_CH_

    class DescSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          DescSeq
        >
      DescSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          DescSeq
        >
      DescSeq_out;

    class  DescSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_DESC
            >
    {
    public:
      DescSeq (void);
      DescSeq ( ::CORBA::ULong max);
      DescSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_DESC* buffer,
        ::CORBA::Boolean release = false);
      DescSeq (const DescSeq &);
      virtual ~DescSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DescSeq_var _var_type;
      typedef DescSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct HELP_LIST;

    typedef
      ::TAO_Var_Var_T<
          HELP_LIST
        >
      HELP_LIST_var;

    typedef
      ::TAO_Out_T<
          HELP_LIST
        >
      HELP_LIST_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  HELP_LIST
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef HELP_LIST_var _var_type;
      typedef HELP_LIST_out _out_type;
      
      ::CORBA::Long idHelp;
      net::etech::DescSeq dataHelp;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_HELPLISTSEQ_CH_)
#define _NET_ETECH_HELPLISTSEQ_CH_

    class HelpListSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          HelpListSeq
        >
      HelpListSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          HelpListSeq
        >
      HelpListSeq_out;

    class  HelpListSeq
      : public
          ::TAO::unbounded_value_sequence<
              HELP_LIST
            >
    {
    public:
      HelpListSeq (void);
      HelpListSeq ( ::CORBA::ULong max);
      HelpListSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        HELP_LIST* buffer,
        ::CORBA::Boolean release = false);
      HelpListSeq (const HelpListSeq &);
      virtual ~HelpListSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef HelpListSeq_var _var_type;
      typedef HelpListSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct EXTERNAL_MODULE;

    typedef
      ::TAO_Fixed_Var_T<
          EXTERNAL_MODULE
        >
      EXTERNAL_MODULE_var;

    typedef
      EXTERNAL_MODULE &
      EXTERNAL_MODULE_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  EXTERNAL_MODULE
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef EXTERNAL_MODULE_var _var_type;
      typedef EXTERNAL_MODULE_out _out_type;
      
      ::CORBA::Long ID_ExternalModule;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _NameModule[20];
      typedef ::CORBA::Char _NameModule_slice;
      struct _NameModule_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _NameModule,
            _NameModule_slice,
            _NameModule_tag
          >
        _NameModule_forany;

      static _NameModule_slice *
      _NameModule_alloc (void);

      static void
      _NameModule_free (
          _NameModule_slice *_tao_slice);
      
      static _NameModule_slice *
      _NameModule_dup (
          const _NameModule_slice *_tao_slice);
      
      static void
      _NameModule_copy (
          _NameModule_slice *_tao_to,
          const _NameModule_slice *_tao_from
        );

      _NameModule NameModule;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _Descrizione[150];
      typedef ::CORBA::Char _Descrizione_slice;
      struct _Descrizione_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _Descrizione,
            _Descrizione_slice,
            _Descrizione_tag
          >
        _Descrizione_forany;

      static _Descrizione_slice *
      _Descrizione_alloc (void);

      static void
      _Descrizione_free (
          _Descrizione_slice *_tao_slice);
      
      static _Descrizione_slice *
      _Descrizione_dup (
          const _Descrizione_slice *_tao_slice);
      
      static void
      _Descrizione_copy (
          _Descrizione_slice *_tao_to,
          const _Descrizione_slice *_tao_from
        );

      _Descrizione Descrizione;
      ::CORBA::Boolean modify;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_MODULESEQ_CH_)
#define _NET_ETECH_MODULESEQ_CH_

    class ModuleSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ModuleSeq
        >
      ModuleSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ModuleSeq
        >
      ModuleSeq_out;

    class  ModuleSeq
      : public
          ::TAO::unbounded_value_sequence<
              EXTERNAL_MODULE
            >
    {
    public:
      ModuleSeq (void);
      ModuleSeq ( ::CORBA::ULong max);
      ModuleSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        EXTERNAL_MODULE* buffer,
        ::CORBA::Boolean release = false);
      ModuleSeq (const ModuleSeq &);
      virtual ~ModuleSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ModuleSeq_var _var_type;
      typedef ModuleSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct SHOW_TYPE_ALARM;

    typedef
      ::TAO_Fixed_Var_T<
          SHOW_TYPE_ALARM
        >
      SHOW_TYPE_ALARM_var;

    typedef
      SHOW_TYPE_ALARM &
      SHOW_TYPE_ALARM_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  SHOW_TYPE_ALARM
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SHOW_TYPE_ALARM_var _var_type;
      typedef SHOW_TYPE_ALARM_out _out_type;
      
      ::CORBA::Long ID_EventAllarm;
      ::CORBA::Boolean enabled;
      ::CORBA::Boolean modify;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_SHOWTYPEALARMSEQ_CH_)
#define _NET_ETECH_SHOWTYPEALARMSEQ_CH_

    class ShowTypeAlarmSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ShowTypeAlarmSeq
        >
      ShowTypeAlarmSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ShowTypeAlarmSeq
        >
      ShowTypeAlarmSeq_out;

    class  ShowTypeAlarmSeq
      : public
          ::TAO::unbounded_value_sequence<
              SHOW_TYPE_ALARM
            >
    {
    public:
      ShowTypeAlarmSeq (void);
      ShowTypeAlarmSeq ( ::CORBA::ULong max);
      ShowTypeAlarmSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        SHOW_TYPE_ALARM* buffer,
        ::CORBA::Boolean release = false);
      ShowTypeAlarmSeq (const ShowTypeAlarmSeq &);
      virtual ~ShowTypeAlarmSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ShowTypeAlarmSeq_var _var_type;
      typedef ShowTypeAlarmSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ENABLE_KPI;

    typedef
      ::TAO_Fixed_Var_T<
          ENABLE_KPI
        >
      ENABLE_KPI_var;

    typedef
      ENABLE_KPI &
      ENABLE_KPI_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  ENABLE_KPI
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ENABLE_KPI_var _var_type;
      typedef ENABLE_KPI_out _out_type;
      
      ::CORBA::Long id_kpi;
      ::CORBA::Long show_on;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_ENABLE_KPISEQ_CH_)
#define _NET_ETECH_ENABLE_KPISEQ_CH_

    class ENABLE_KPISeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ENABLE_KPISeq
        >
      ENABLE_KPISeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ENABLE_KPISeq
        >
      ENABLE_KPISeq_out;

    class  ENABLE_KPISeq
      : public
          ::TAO::unbounded_value_sequence<
              ENABLE_KPI
            >
    {
    public:
      ENABLE_KPISeq (void);
      ENABLE_KPISeq ( ::CORBA::ULong max);
      ENABLE_KPISeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ENABLE_KPI* buffer,
        ::CORBA::Boolean release = false);
      ENABLE_KPISeq (const ENABLE_KPISeq &);
      virtual ~ENABLE_KPISeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ENABLE_KPISeq_var _var_type;
      typedef ENABLE_KPISeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct GRANT_LAYOUT;

    typedef
      ::TAO_Var_Var_T<
          GRANT_LAYOUT
        >
      GRANT_LAYOUT_var;

    typedef
      ::TAO_Out_T<
          GRANT_LAYOUT
        >
      GRANT_LAYOUT_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  GRANT_LAYOUT
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef GRANT_LAYOUT_var _var_type;
      typedef GRANT_LAYOUT_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _profile[40];
      typedef ::CORBA::Char _profile_slice;
      struct _profile_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _profile,
            _profile_slice,
            _profile_tag
          >
        _profile_forany;

      static _profile_slice *
      _profile_alloc (void);

      static void
      _profile_free (
          _profile_slice *_tao_slice);
      
      static _profile_slice *
      _profile_dup (
          const _profile_slice *_tao_slice);
      
      static void
      _profile_copy (
          _profile_slice *_tao_to,
          const _profile_slice *_tao_from
        );

      _profile profile;
      ::CORBA::Long idFunction;
      ::CORBA::Boolean EditingEnableGUI;
      ::CORBA::Boolean EditingEnableDati;
      ::CORBA::Boolean ShowTabLev1;
      ::CORBA::Boolean EditingNumColTab;
      ::CORBA::Boolean EditingNumRowTab;
      ::CORBA::Boolean EditingColBackTab;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Boolean _EditOther[20];
      typedef ::CORBA::Boolean _EditOther_slice;
      struct _EditOther_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _EditOther,
            _EditOther_slice,
            _EditOther_tag
          >
        _EditOther_forany;

      static _EditOther_slice *
      _EditOther_alloc (void);

      static void
      _EditOther_free (
          _EditOther_slice *_tao_slice);
      
      static _EditOther_slice *
      _EditOther_dup (
          const _EditOther_slice *_tao_slice);
      
      static void
      _EditOther_copy (
          _EditOther_slice *_tao_to,
          const _EditOther_slice *_tao_from
        );

      _EditOther EditOther;
      net::etech::ENABLE_KPISeq EnableShowTypeAlarm;
      ::CORBA::Boolean HideAlarm;
      ::CORBA::Boolean ShowGlobalMap;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Boolean _ShowView[20];
      typedef ::CORBA::Boolean _ShowView_slice;
      struct _ShowView_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ShowView,
            _ShowView_slice,
            _ShowView_tag
          >
        _ShowView_forany;

      static _ShowView_slice *
      _ShowView_alloc (void);

      static void
      _ShowView_free (
          _ShowView_slice *_tao_slice);
      
      static _ShowView_slice *
      _ShowView_dup (
          const _ShowView_slice *_tao_slice);
      
      static void
      _ShowView_copy (
          _ShowView_slice *_tao_to,
          const _ShowView_slice *_tao_from
        );

      _ShowView ShowView;
      ::CORBA::Boolean EnableBooking;
      ::CORBA::Boolean EnableTicketing;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Boolean _EnableExternalModule[10];
      typedef ::CORBA::Boolean _EnableExternalModule_slice;
      struct _EnableExternalModule_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _EnableExternalModule,
            _EnableExternalModule_slice,
            _EnableExternalModule_tag
          >
        _EnableExternalModule_forany;

      static _EnableExternalModule_slice *
      _EnableExternalModule_alloc (void);

      static void
      _EnableExternalModule_free (
          _EnableExternalModule_slice *_tao_slice);
      
      static _EnableExternalModule_slice *
      _EnableExternalModule_dup (
          const _EnableExternalModule_slice *_tao_slice);
      
      static void
      _EnableExternalModule_copy (
          _EnableExternalModule_slice *_tao_to,
          const _EnableExternalModule_slice *_tao_from
        );

      _EnableExternalModule EnableExternalModule;
      ::CORBA::Boolean modify;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_GRANTLAYOUTSEQ_CH_)
#define _NET_ETECH_GRANTLAYOUTSEQ_CH_

    class GrantLayoutSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          GrantLayoutSeq
        >
      GrantLayoutSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          GrantLayoutSeq
        >
      GrantLayoutSeq_out;

    class  GrantLayoutSeq
      : public
          ::TAO::unbounded_value_sequence<
              GRANT_LAYOUT
            >
    {
    public:
      GrantLayoutSeq (void);
      GrantLayoutSeq ( ::CORBA::ULong max);
      GrantLayoutSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        GRANT_LAYOUT* buffer,
        ::CORBA::Boolean release = false);
      GrantLayoutSeq (const GrantLayoutSeq &);
      virtual ~GrantLayoutSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef GrantLayoutSeq_var _var_type;
      typedef GrantLayoutSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ALARM_PARAMETER;

    typedef
      ::TAO_Fixed_Var_T<
          ALARM_PARAMETER
        >
      ALARM_PARAMETER_var;

    typedef
      ALARM_PARAMETER &
      ALARM_PARAMETER_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  ALARM_PARAMETER
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ALARM_PARAMETER_var _var_type;
      typedef ALARM_PARAMETER_out _out_type;
      
      ::CORBA::Long idFunction;
      ::CORBA::Long ID_Param;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ParamDesc[50];
      typedef ::CORBA::Char _ParamDesc_slice;
      struct _ParamDesc_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ParamDesc,
            _ParamDesc_slice,
            _ParamDesc_tag
          >
        _ParamDesc_forany;

      static _ParamDesc_slice *
      _ParamDesc_alloc (void);

      static void
      _ParamDesc_free (
          _ParamDesc_slice *_tao_slice);
      
      static _ParamDesc_slice *
      _ParamDesc_dup (
          const _ParamDesc_slice *_tao_slice);
      
      static void
      _ParamDesc_copy (
          _ParamDesc_slice *_tao_to,
          const _ParamDesc_slice *_tao_from
        );

      _ParamDesc ParamDesc;
      ::CORBA::Long ID_ParentParam;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_ALARMPARAMETERSEQ_CH_)
#define _NET_ETECH_ALARMPARAMETERSEQ_CH_

    class AlarmParameterSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          AlarmParameterSeq
        >
      AlarmParameterSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          AlarmParameterSeq
        >
      AlarmParameterSeq_out;

    class  AlarmParameterSeq
      : public
          ::TAO::unbounded_value_sequence<
              ALARM_PARAMETER
            >
    {
    public:
      AlarmParameterSeq (void);
      AlarmParameterSeq ( ::CORBA::ULong max);
      AlarmParameterSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ALARM_PARAMETER* buffer,
        ::CORBA::Boolean release = false);
      AlarmParameterSeq (const AlarmParameterSeq &);
      virtual ~AlarmParameterSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef AlarmParameterSeq_var _var_type;
      typedef AlarmParameterSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct TYPE_ALARM;

    typedef
      ::TAO_Fixed_Var_T<
          TYPE_ALARM
        >
      TYPE_ALARM_var;

    typedef
      TYPE_ALARM &
      TYPE_ALARM_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  TYPE_ALARM
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef TYPE_ALARM_var _var_type;
      typedef TYPE_ALARM_out _out_type;
      
      ::CORBA::Long idFunction;
      ::CORBA::Long ID_EventAllarm;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _AllarmTypeDesc[50];
      typedef ::CORBA::Char _AllarmTypeDesc_slice;
      struct _AllarmTypeDesc_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _AllarmTypeDesc,
            _AllarmTypeDesc_slice,
            _AllarmTypeDesc_tag
          >
        _AllarmTypeDesc_forany;

      static _AllarmTypeDesc_slice *
      _AllarmTypeDesc_alloc (void);

      static void
      _AllarmTypeDesc_free (
          _AllarmTypeDesc_slice *_tao_slice);
      
      static _AllarmTypeDesc_slice *
      _AllarmTypeDesc_dup (
          const _AllarmTypeDesc_slice *_tao_slice);
      
      static void
      _AllarmTypeDesc_copy (
          _AllarmTypeDesc_slice *_tao_to,
          const _AllarmTypeDesc_slice *_tao_from
        );

      _AllarmTypeDesc AllarmTypeDesc;
      ::CORBA::Long priority;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _OnColor[10];
      typedef ::CORBA::Char _OnColor_slice;
      struct _OnColor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _OnColor,
            _OnColor_slice,
            _OnColor_tag
          >
        _OnColor_forany;

      static _OnColor_slice *
      _OnColor_alloc (void);

      static void
      _OnColor_free (
          _OnColor_slice *_tao_slice);
      
      static _OnColor_slice *
      _OnColor_dup (
          const _OnColor_slice *_tao_slice);
      
      static void
      _OnColor_copy (
          _OnColor_slice *_tao_to,
          const _OnColor_slice *_tao_from
        );

      _OnColor OnColor;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _OnIconURL[150];
      typedef ::CORBA::Char _OnIconURL_slice;
      struct _OnIconURL_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _OnIconURL,
            _OnIconURL_slice,
            _OnIconURL_tag
          >
        _OnIconURL_forany;

      static _OnIconURL_slice *
      _OnIconURL_alloc (void);

      static void
      _OnIconURL_free (
          _OnIconURL_slice *_tao_slice);
      
      static _OnIconURL_slice *
      _OnIconURL_dup (
          const _OnIconURL_slice *_tao_slice);
      
      static void
      _OnIconURL_copy (
          _OnIconURL_slice *_tao_to,
          const _OnIconURL_slice *_tao_from
        );

      _OnIconURL OnIconURL;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _OffColor[10];
      typedef ::CORBA::Char _OffColor_slice;
      struct _OffColor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _OffColor,
            _OffColor_slice,
            _OffColor_tag
          >
        _OffColor_forany;

      static _OffColor_slice *
      _OffColor_alloc (void);

      static void
      _OffColor_free (
          _OffColor_slice *_tao_slice);
      
      static _OffColor_slice *
      _OffColor_dup (
          const _OffColor_slice *_tao_slice);
      
      static void
      _OffColor_copy (
          _OffColor_slice *_tao_to,
          const _OffColor_slice *_tao_from
        );

      _OffColor OffColor;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _OffIconURL[150];
      typedef ::CORBA::Char _OffIconURL_slice;
      struct _OffIconURL_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _OffIconURL,
            _OffIconURL_slice,
            _OffIconURL_tag
          >
        _OffIconURL_forany;

      static _OffIconURL_slice *
      _OffIconURL_alloc (void);

      static void
      _OffIconURL_free (
          _OffIconURL_slice *_tao_slice);
      
      static _OffIconURL_slice *
      _OffIconURL_dup (
          const _OffIconURL_slice *_tao_slice);
      
      static void
      _OffIconURL_copy (
          _OffIconURL_slice *_tao_to,
          const _OffIconURL_slice *_tao_from
        );

      _OffIconURL OffIconURL;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_ALARMSEQ_CH_)
#define _NET_ETECH_ALARMSEQ_CH_

    class AlarmSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          AlarmSeq
        >
      AlarmSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          AlarmSeq
        >
      AlarmSeq_out;

    class  AlarmSeq
      : public
          ::TAO::unbounded_value_sequence<
              TYPE_ALARM
            >
    {
    public:
      AlarmSeq (void);
      AlarmSeq ( ::CORBA::ULong max);
      AlarmSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        TYPE_ALARM* buffer,
        ::CORBA::Boolean release = false);
      AlarmSeq (const AlarmSeq &);
      virtual ~AlarmSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef AlarmSeq_var _var_type;
      typedef AlarmSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct LAYOUT;

    typedef
      ::TAO_Var_Var_T<
          LAYOUT
        >
      LAYOUT_var;

    typedef
      ::TAO_Out_T<
          LAYOUT
        >
      LAYOUT_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  LAYOUT
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef LAYOUT_var _var_type;
      typedef LAYOUT_out _out_type;
      
      ::CORBA::Long idFunction;
      ::CORBA::Long type_Layout;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _Name[60];
      typedef ::CORBA::Char _Name_slice;
      struct _Name_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _Name,
            _Name_slice,
            _Name_tag
          >
        _Name_forany;

      static _Name_slice *
      _Name_alloc (void);

      static void
      _Name_free (
          _Name_slice *_tao_slice);
      
      static _Name_slice *
      _Name_dup (
          const _Name_slice *_tao_slice);
      
      static void
      _Name_copy (
          _Name_slice *_tao_to,
          const _Name_slice *_tao_from
        );

      _Name Name;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _Descrizione[150];
      typedef ::CORBA::Char _Descrizione_slice;
      struct _Descrizione_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _Descrizione,
            _Descrizione_slice,
            _Descrizione_tag
          >
        _Descrizione_forany;

      static _Descrizione_slice *
      _Descrizione_alloc (void);

      static void
      _Descrizione_free (
          _Descrizione_slice *_tao_slice);
      
      static _Descrizione_slice *
      _Descrizione_dup (
          const _Descrizione_slice *_tao_slice);
      
      static void
      _Descrizione_copy (
          _Descrizione_slice *_tao_to,
          const _Descrizione_slice *_tao_from
        );

      _Descrizione Descrizione;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ConfigServerName[150];
      typedef ::CORBA::Char _ConfigServerName_slice;
      struct _ConfigServerName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ConfigServerName,
            _ConfigServerName_slice,
            _ConfigServerName_tag
          >
        _ConfigServerName_forany;

      static _ConfigServerName_slice *
      _ConfigServerName_alloc (void);

      static void
      _ConfigServerName_free (
          _ConfigServerName_slice *_tao_slice);
      
      static _ConfigServerName_slice *
      _ConfigServerName_dup (
          const _ConfigServerName_slice *_tao_slice);
      
      static void
      _ConfigServerName_copy (
          _ConfigServerName_slice *_tao_to,
          const _ConfigServerName_slice *_tao_from
        );

      _ConfigServerName ConfigServerName;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _AllarmServerName1[150];
      typedef ::CORBA::Char _AllarmServerName1_slice;
      struct _AllarmServerName1_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _AllarmServerName1,
            _AllarmServerName1_slice,
            _AllarmServerName1_tag
          >
        _AllarmServerName1_forany;

      static _AllarmServerName1_slice *
      _AllarmServerName1_alloc (void);

      static void
      _AllarmServerName1_free (
          _AllarmServerName1_slice *_tao_slice);
      
      static _AllarmServerName1_slice *
      _AllarmServerName1_dup (
          const _AllarmServerName1_slice *_tao_slice);
      
      static void
      _AllarmServerName1_copy (
          _AllarmServerName1_slice *_tao_to,
          const _AllarmServerName1_slice *_tao_from
        );

      _AllarmServerName1 AllarmServerName1;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _AllarmServerName2[150];
      typedef ::CORBA::Char _AllarmServerName2_slice;
      struct _AllarmServerName2_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _AllarmServerName2,
            _AllarmServerName2_slice,
            _AllarmServerName2_tag
          >
        _AllarmServerName2_forany;

      static _AllarmServerName2_slice *
      _AllarmServerName2_alloc (void);

      static void
      _AllarmServerName2_free (
          _AllarmServerName2_slice *_tao_slice);
      
      static _AllarmServerName2_slice *
      _AllarmServerName2_dup (
          const _AllarmServerName2_slice *_tao_slice);
      
      static void
      _AllarmServerName2_copy (
          _AllarmServerName2_slice *_tao_to,
          const _AllarmServerName2_slice *_tao_from
        );

      _AllarmServerName2 AllarmServerName2;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _AllarmServerName3[150];
      typedef ::CORBA::Char _AllarmServerName3_slice;
      struct _AllarmServerName3_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _AllarmServerName3,
            _AllarmServerName3_slice,
            _AllarmServerName3_tag
          >
        _AllarmServerName3_forany;

      static _AllarmServerName3_slice *
      _AllarmServerName3_alloc (void);

      static void
      _AllarmServerName3_free (
          _AllarmServerName3_slice *_tao_slice);
      
      static _AllarmServerName3_slice *
      _AllarmServerName3_dup (
          const _AllarmServerName3_slice *_tao_slice);
      
      static void
      _AllarmServerName3_copy (
          _AllarmServerName3_slice *_tao_to,
          const _AllarmServerName3_slice *_tao_from
        );

      _AllarmServerName3 AllarmServerName3;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _AllarmServerName4[150];
      typedef ::CORBA::Char _AllarmServerName4_slice;
      struct _AllarmServerName4_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _AllarmServerName4,
            _AllarmServerName4_slice,
            _AllarmServerName4_tag
          >
        _AllarmServerName4_forany;

      static _AllarmServerName4_slice *
      _AllarmServerName4_alloc (void);

      static void
      _AllarmServerName4_free (
          _AllarmServerName4_slice *_tao_slice);
      
      static _AllarmServerName4_slice *
      _AllarmServerName4_dup (
          const _AllarmServerName4_slice *_tao_slice);
      
      static void
      _AllarmServerName4_copy (
          _AllarmServerName4_slice *_tao_to,
          const _AllarmServerName4_slice *_tao_from
        );

      _AllarmServerName4 AllarmServerName4;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _AllarmServerName5[150];
      typedef ::CORBA::Char _AllarmServerName5_slice;
      struct _AllarmServerName5_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _AllarmServerName5,
            _AllarmServerName5_slice,
            _AllarmServerName5_tag
          >
        _AllarmServerName5_forany;

      static _AllarmServerName5_slice *
      _AllarmServerName5_alloc (void);

      static void
      _AllarmServerName5_free (
          _AllarmServerName5_slice *_tao_slice);
      
      static _AllarmServerName5_slice *
      _AllarmServerName5_dup (
          const _AllarmServerName5_slice *_tao_slice);
      
      static void
      _AllarmServerName5_copy (
          _AllarmServerName5_slice *_tao_to,
          const _AllarmServerName5_slice *_tao_from
        );

      _AllarmServerName5 AllarmServerName5;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _DetailServerName1[150];
      typedef ::CORBA::Char _DetailServerName1_slice;
      struct _DetailServerName1_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _DetailServerName1,
            _DetailServerName1_slice,
            _DetailServerName1_tag
          >
        _DetailServerName1_forany;

      static _DetailServerName1_slice *
      _DetailServerName1_alloc (void);

      static void
      _DetailServerName1_free (
          _DetailServerName1_slice *_tao_slice);
      
      static _DetailServerName1_slice *
      _DetailServerName1_dup (
          const _DetailServerName1_slice *_tao_slice);
      
      static void
      _DetailServerName1_copy (
          _DetailServerName1_slice *_tao_to,
          const _DetailServerName1_slice *_tao_from
        );

      _DetailServerName1 DetailServerName1;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _DetailServerName2[150];
      typedef ::CORBA::Char _DetailServerName2_slice;
      struct _DetailServerName2_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _DetailServerName2,
            _DetailServerName2_slice,
            _DetailServerName2_tag
          >
        _DetailServerName2_forany;

      static _DetailServerName2_slice *
      _DetailServerName2_alloc (void);

      static void
      _DetailServerName2_free (
          _DetailServerName2_slice *_tao_slice);
      
      static _DetailServerName2_slice *
      _DetailServerName2_dup (
          const _DetailServerName2_slice *_tao_slice);
      
      static void
      _DetailServerName2_copy (
          _DetailServerName2_slice *_tao_to,
          const _DetailServerName2_slice *_tao_from
        );

      _DetailServerName2 DetailServerName2;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _DetailServerName3[150];
      typedef ::CORBA::Char _DetailServerName3_slice;
      struct _DetailServerName3_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _DetailServerName3,
            _DetailServerName3_slice,
            _DetailServerName3_tag
          >
        _DetailServerName3_forany;

      static _DetailServerName3_slice *
      _DetailServerName3_alloc (void);

      static void
      _DetailServerName3_free (
          _DetailServerName3_slice *_tao_slice);
      
      static _DetailServerName3_slice *
      _DetailServerName3_dup (
          const _DetailServerName3_slice *_tao_slice);
      
      static void
      _DetailServerName3_copy (
          _DetailServerName3_slice *_tao_to,
          const _DetailServerName3_slice *_tao_from
        );

      _DetailServerName3 DetailServerName3;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _DetailServerName4[150];
      typedef ::CORBA::Char _DetailServerName4_slice;
      struct _DetailServerName4_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _DetailServerName4,
            _DetailServerName4_slice,
            _DetailServerName4_tag
          >
        _DetailServerName4_forany;

      static _DetailServerName4_slice *
      _DetailServerName4_alloc (void);

      static void
      _DetailServerName4_free (
          _DetailServerName4_slice *_tao_slice);
      
      static _DetailServerName4_slice *
      _DetailServerName4_dup (
          const _DetailServerName4_slice *_tao_slice);
      
      static void
      _DetailServerName4_copy (
          _DetailServerName4_slice *_tao_to,
          const _DetailServerName4_slice *_tao_from
        );

      _DetailServerName4 DetailServerName4;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _DetailServerName5[150];
      typedef ::CORBA::Char _DetailServerName5_slice;
      struct _DetailServerName5_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _DetailServerName5,
            _DetailServerName5_slice,
            _DetailServerName5_tag
          >
        _DetailServerName5_forany;

      static _DetailServerName5_slice *
      _DetailServerName5_alloc (void);

      static void
      _DetailServerName5_free (
          _DetailServerName5_slice *_tao_slice);
      
      static _DetailServerName5_slice *
      _DetailServerName5_dup (
          const _DetailServerName5_slice *_tao_slice);
      
      static void
      _DetailServerName5_copy (
          _DetailServerName5_slice *_tao_to,
          const _DetailServerName5_slice *_tao_from
        );

      _DetailServerName5 DetailServerName5;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _MapRepository[150];
      typedef ::CORBA::Char _MapRepository_slice;
      struct _MapRepository_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _MapRepository,
            _MapRepository_slice,
            _MapRepository_tag
          >
        _MapRepository_forany;

      static _MapRepository_slice *
      _MapRepository_alloc (void);

      static void
      _MapRepository_free (
          _MapRepository_slice *_tao_slice);
      
      static _MapRepository_slice *
      _MapRepository_dup (
          const _MapRepository_slice *_tao_slice);
      
      static void
      _MapRepository_copy (
          _MapRepository_slice *_tao_to,
          const _MapRepository_slice *_tao_from
        );

      _MapRepository MapRepository;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _IconRepository[150];
      typedef ::CORBA::Char _IconRepository_slice;
      struct _IconRepository_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _IconRepository,
            _IconRepository_slice,
            _IconRepository_tag
          >
        _IconRepository_forany;

      static _IconRepository_slice *
      _IconRepository_alloc (void);

      static void
      _IconRepository_free (
          _IconRepository_slice *_tao_slice);
      
      static _IconRepository_slice *
      _IconRepository_dup (
          const _IconRepository_slice *_tao_slice);
      
      static void
      _IconRepository_copy (
          _IconRepository_slice *_tao_to,
          const _IconRepository_slice *_tao_from
        );

      _IconRepository IconRepository;
      ::CORBA::Long RefreshTime;
      net::etech::AlarmParameterSeq AllarmParameter;
      net::etech::AlarmSeq Allarm;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _MapName[50];
      typedef ::CORBA::Char _MapName_slice;
      struct _MapName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _MapName,
            _MapName_slice,
            _MapName_tag
          >
        _MapName_forany;

      static _MapName_slice *
      _MapName_alloc (void);

      static void
      _MapName_free (
          _MapName_slice *_tao_slice);
      
      static _MapName_slice *
      _MapName_dup (
          const _MapName_slice *_tao_slice);
      
      static void
      _MapName_copy (
          _MapName_slice *_tao_to,
          const _MapName_slice *_tao_from
        );

      _MapName MapName;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _MapDesc[150];
      typedef ::CORBA::Char _MapDesc_slice;
      struct _MapDesc_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _MapDesc,
            _MapDesc_slice,
            _MapDesc_tag
          >
        _MapDesc_forany;

      static _MapDesc_slice *
      _MapDesc_alloc (void);

      static void
      _MapDesc_free (
          _MapDesc_slice *_tao_slice);
      
      static _MapDesc_slice *
      _MapDesc_dup (
          const _MapDesc_slice *_tao_slice);
      
      static void
      _MapDesc_copy (
          _MapDesc_slice *_tao_to,
          const _MapDesc_slice *_tao_from
        );

      _MapDesc MapDesc;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _MapURL[150];
      typedef ::CORBA::Char _MapURL_slice;
      struct _MapURL_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _MapURL,
            _MapURL_slice,
            _MapURL_tag
          >
        _MapURL_forany;

      static _MapURL_slice *
      _MapURL_alloc (void);

      static void
      _MapURL_free (
          _MapURL_slice *_tao_slice);
      
      static _MapURL_slice *
      _MapURL_dup (
          const _MapURL_slice *_tao_slice);
      
      static void
      _MapURL_copy (
          _MapURL_slice *_tao_to,
          const _MapURL_slice *_tao_from
        );

      _MapURL MapURL;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _defOffColor[10];
      typedef ::CORBA::Char _defOffColor_slice;
      struct _defOffColor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _defOffColor,
            _defOffColor_slice,
            _defOffColor_tag
          >
        _defOffColor_forany;

      static _defOffColor_slice *
      _defOffColor_alloc (void);

      static void
      _defOffColor_free (
          _defOffColor_slice *_tao_slice);
      
      static _defOffColor_slice *
      _defOffColor_dup (
          const _defOffColor_slice *_tao_slice);
      
      static void
      _defOffColor_copy (
          _defOffColor_slice *_tao_to,
          const _defOffColor_slice *_tao_from
        );

      _defOffColor defOffColor;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _defOffIconURL[150];
      typedef ::CORBA::Char _defOffIconURL_slice;
      struct _defOffIconURL_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _defOffIconURL,
            _defOffIconURL_slice,
            _defOffIconURL_tag
          >
        _defOffIconURL_forany;

      static _defOffIconURL_slice *
      _defOffIconURL_alloc (void);

      static void
      _defOffIconURL_free (
          _defOffIconURL_slice *_tao_slice);
      
      static _defOffIconURL_slice *
      _defOffIconURL_dup (
          const _defOffIconURL_slice *_tao_slice);
      
      static void
      _defOffIconURL_copy (
          _defOffIconURL_slice *_tao_to,
          const _defOffIconURL_slice *_tao_from
        );

      _defOffIconURL defOffIconURL;
      ::CORBA::Boolean modify;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_LAYOUTSEQ_CH_)
#define _NET_ETECH_LAYOUTSEQ_CH_

    class LayoutSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          LayoutSeq
        >
      LayoutSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          LayoutSeq
        >
      LayoutSeq_out;

    class  LayoutSeq
      : public
          ::TAO::unbounded_value_sequence<
              LAYOUT
            >
    {
    public:
      LayoutSeq (void);
      LayoutSeq ( ::CORBA::ULong max);
      LayoutSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        LAYOUT* buffer,
        ::CORBA::Boolean release = false);
      LayoutSeq (const LayoutSeq &);
      virtual ~LayoutSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef LayoutSeq_var _var_type;
      typedef LayoutSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct LayoutWrapp;

    typedef
      ::TAO_Var_Var_T<
          LayoutWrapp
        >
      LayoutWrapp_var;

    typedef
      ::TAO_Out_T<
          LayoutWrapp
        >
      LayoutWrapp_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  LayoutWrapp
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef LayoutWrapp_var _var_type;
      typedef LayoutWrapp_out _out_type;
      
      net::etech::LayoutSeq layout;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct USER_PROFILE_IMG;

    typedef
      ::TAO_Var_Var_T<
          USER_PROFILE_IMG
        >
      USER_PROFILE_IMG_var;

    typedef
      ::TAO_Out_T<
          USER_PROFILE_IMG
        >
      USER_PROFILE_IMG_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  USER_PROFILE_IMG
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef USER_PROFILE_IMG_var _var_type;
      typedef USER_PROFILE_IMG_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _profile[40];
      typedef ::CORBA::Char _profile_slice;
      struct _profile_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _profile,
            _profile_slice,
            _profile_tag
          >
        _profile_forany;

      static _profile_slice *
      _profile_alloc (void);

      static void
      _profile_free (
          _profile_slice *_tao_slice);
      
      static _profile_slice *
      _profile_dup (
          const _profile_slice *_tao_slice);
      
      static void
      _profile_copy (
          _profile_slice *_tao_to,
          const _profile_slice *_tao_from
        );

      _profile profile;
      net::etech::GrantLayoutSeq grantLayout;
      net::etech::LayoutSeq layout;
      ::CORBA::Boolean modify;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct NAZIONE;

    typedef
      ::TAO_Fixed_Var_T<
          NAZIONE
        >
      NAZIONE_var;

    typedef
      NAZIONE &
      NAZIONE_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  NAZIONE
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef NAZIONE_var _var_type;
      typedef NAZIONE_out _out_type;
      
      ::CORBA::Long idNazione;
      ::CORBA::Long idFunction;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _shortDescription[50];
      typedef ::CORBA::Char _shortDescription_slice;
      struct _shortDescription_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _shortDescription,
            _shortDescription_slice,
            _shortDescription_tag
          >
        _shortDescription_forany;

      static _shortDescription_slice *
      _shortDescription_alloc (void);

      static void
      _shortDescription_free (
          _shortDescription_slice *_tao_slice);
      
      static _shortDescription_slice *
      _shortDescription_dup (
          const _shortDescription_slice *_tao_slice);
      
      static void
      _shortDescription_copy (
          _shortDescription_slice *_tao_to,
          const _shortDescription_slice *_tao_from
        );

      _shortDescription shortDescription;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _longDescritpion[150];
      typedef ::CORBA::Char _longDescritpion_slice;
      struct _longDescritpion_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _longDescritpion,
            _longDescritpion_slice,
            _longDescritpion_tag
          >
        _longDescritpion_forany;

      static _longDescritpion_slice *
      _longDescritpion_alloc (void);

      static void
      _longDescritpion_free (
          _longDescritpion_slice *_tao_slice);
      
      static _longDescritpion_slice *
      _longDescritpion_dup (
          const _longDescritpion_slice *_tao_slice);
      
      static void
      _longDescritpion_copy (
          _longDescritpion_slice *_tao_to,
          const _longDescritpion_slice *_tao_from
        );

      _longDescritpion longDescritpion;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _firstIconURL[150];
      typedef ::CORBA::Char _firstIconURL_slice;
      struct _firstIconURL_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _firstIconURL,
            _firstIconURL_slice,
            _firstIconURL_tag
          >
        _firstIconURL_forany;

      static _firstIconURL_slice *
      _firstIconURL_alloc (void);

      static void
      _firstIconURL_free (
          _firstIconURL_slice *_tao_slice);
      
      static _firstIconURL_slice *
      _firstIconURL_dup (
          const _firstIconURL_slice *_tao_slice);
      
      static void
      _firstIconURL_copy (
          _firstIconURL_slice *_tao_to,
          const _firstIconURL_slice *_tao_from
        );

      _firstIconURL firstIconURL;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _secondIconURL[150];
      typedef ::CORBA::Char _secondIconURL_slice;
      struct _secondIconURL_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _secondIconURL,
            _secondIconURL_slice,
            _secondIconURL_tag
          >
        _secondIconURL_forany;

      static _secondIconURL_slice *
      _secondIconURL_alloc (void);

      static void
      _secondIconURL_free (
          _secondIconURL_slice *_tao_slice);
      
      static _secondIconURL_slice *
      _secondIconURL_dup (
          const _secondIconURL_slice *_tao_slice);
      
      static void
      _secondIconURL_copy (
          _secondIconURL_slice *_tao_to,
          const _secondIconURL_slice *_tao_from
        );

      _secondIconURL secondIconURL;
      ::CORBA::Boolean modify;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_NATIONSEQ_CH_)
#define _NET_ETECH_NATIONSEQ_CH_

    class NationSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          NationSeq
        >
      NationSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          NationSeq
        >
      NationSeq_out;

    class  NationSeq
      : public
          ::TAO::unbounded_value_sequence<
              NAZIONE
            >
    {
    public:
      NationSeq (void);
      NationSeq ( ::CORBA::ULong max);
      NationSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        NAZIONE* buffer,
        ::CORBA::Boolean release = false);
      NationSeq (const NationSeq &);
      virtual ~NationSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef NationSeq_var _var_type;
      typedef NationSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct CONTINENTE;

    typedef
      ::TAO_Fixed_Var_T<
          CONTINENTE
        >
      CONTINENTE_var;

    typedef
      CONTINENTE &
      CONTINENTE_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  CONTINENTE
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef CONTINENTE_var _var_type;
      typedef CONTINENTE_out _out_type;
      
      ::CORBA::Long idContinente;
      ::CORBA::Long idFunction;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _shortDescription[50];
      typedef ::CORBA::Char _shortDescription_slice;
      struct _shortDescription_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _shortDescription,
            _shortDescription_slice,
            _shortDescription_tag
          >
        _shortDescription_forany;

      static _shortDescription_slice *
      _shortDescription_alloc (void);

      static void
      _shortDescription_free (
          _shortDescription_slice *_tao_slice);
      
      static _shortDescription_slice *
      _shortDescription_dup (
          const _shortDescription_slice *_tao_slice);
      
      static void
      _shortDescription_copy (
          _shortDescription_slice *_tao_to,
          const _shortDescription_slice *_tao_from
        );

      _shortDescription shortDescription;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _longDescritpion[150];
      typedef ::CORBA::Char _longDescritpion_slice;
      struct _longDescritpion_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _longDescritpion,
            _longDescritpion_slice,
            _longDescritpion_tag
          >
        _longDescritpion_forany;

      static _longDescritpion_slice *
      _longDescritpion_alloc (void);

      static void
      _longDescritpion_free (
          _longDescritpion_slice *_tao_slice);
      
      static _longDescritpion_slice *
      _longDescritpion_dup (
          const _longDescritpion_slice *_tao_slice);
      
      static void
      _longDescritpion_copy (
          _longDescritpion_slice *_tao_to,
          const _longDescritpion_slice *_tao_from
        );

      _longDescritpion longDescritpion;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _firstIconURL[150];
      typedef ::CORBA::Char _firstIconURL_slice;
      struct _firstIconURL_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _firstIconURL,
            _firstIconURL_slice,
            _firstIconURL_tag
          >
        _firstIconURL_forany;

      static _firstIconURL_slice *
      _firstIconURL_alloc (void);

      static void
      _firstIconURL_free (
          _firstIconURL_slice *_tao_slice);
      
      static _firstIconURL_slice *
      _firstIconURL_dup (
          const _firstIconURL_slice *_tao_slice);
      
      static void
      _firstIconURL_copy (
          _firstIconURL_slice *_tao_to,
          const _firstIconURL_slice *_tao_from
        );

      _firstIconURL firstIconURL;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _secondIconURL[150];
      typedef ::CORBA::Char _secondIconURL_slice;
      struct _secondIconURL_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _secondIconURL,
            _secondIconURL_slice,
            _secondIconURL_tag
          >
        _secondIconURL_forany;

      static _secondIconURL_slice *
      _secondIconURL_alloc (void);

      static void
      _secondIconURL_free (
          _secondIconURL_slice *_tao_slice);
      
      static _secondIconURL_slice *
      _secondIconURL_dup (
          const _secondIconURL_slice *_tao_slice);
      
      static void
      _secondIconURL_copy (
          _secondIconURL_slice *_tao_to,
          const _secondIconURL_slice *_tao_from
        );

      _secondIconURL secondIconURL;
      ::CORBA::Long idView;
      ::CORBA::Boolean modify;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_CONTINENTSEQ_CH_)
#define _NET_ETECH_CONTINENTSEQ_CH_

    class ContinentSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ContinentSeq
        >
      ContinentSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ContinentSeq
        >
      ContinentSeq_out;

    class  ContinentSeq
      : public
          ::TAO::unbounded_value_sequence<
              CONTINENTE
            >
    {
    public:
      ContinentSeq (void);
      ContinentSeq ( ::CORBA::ULong max);
      ContinentSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        CONTINENTE* buffer,
        ::CORBA::Boolean release = false);
      ContinentSeq (const ContinentSeq &);
      virtual ~ContinentSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ContinentSeq_var _var_type;
      typedef ContinentSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct COORDINATE;

    typedef
      ::TAO_Fixed_Var_T<
          COORDINATE
        >
      COORDINATE_var;

    typedef
      COORDINATE &
      COORDINATE_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  COORDINATE
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef COORDINATE_var _var_type;
      typedef COORDINATE_out _out_type;
      
      ::CORBA::Long x;
      ::CORBA::Long y;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct VIEW;

    typedef
      ::TAO_Fixed_Var_T<
          VIEW
        >
      VIEW_var;

    typedef
      VIEW &
      VIEW_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  VIEW
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef VIEW_var _var_type;
      typedef VIEW_out _out_type;
      
      ::CORBA::Long idView;
      ::CORBA::Long idFunction;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _shortDescription[50];
      typedef ::CORBA::Char _shortDescription_slice;
      struct _shortDescription_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _shortDescription,
            _shortDescription_slice,
            _shortDescription_tag
          >
        _shortDescription_forany;

      static _shortDescription_slice *
      _shortDescription_alloc (void);

      static void
      _shortDescription_free (
          _shortDescription_slice *_tao_slice);
      
      static _shortDescription_slice *
      _shortDescription_dup (
          const _shortDescription_slice *_tao_slice);
      
      static void
      _shortDescription_copy (
          _shortDescription_slice *_tao_to,
          const _shortDescription_slice *_tao_from
        );

      _shortDescription shortDescription;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _longDescritpion[150];
      typedef ::CORBA::Char _longDescritpion_slice;
      struct _longDescritpion_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _longDescritpion,
            _longDescritpion_slice,
            _longDescritpion_tag
          >
        _longDescritpion_forany;

      static _longDescritpion_slice *
      _longDescritpion_alloc (void);

      static void
      _longDescritpion_free (
          _longDescritpion_slice *_tao_slice);
      
      static _longDescritpion_slice *
      _longDescritpion_dup (
          const _longDescritpion_slice *_tao_slice);
      
      static void
      _longDescritpion_copy (
          _longDescritpion_slice *_tao_to,
          const _longDescritpion_slice *_tao_from
        );

      _longDescritpion longDescritpion;
      net::etech::COORDINATE upLeft;
      net::etech::COORDINATE downRight;
      ::CORBA::Boolean modify;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_VIEWSEQ_CH_)
#define _NET_ETECH_VIEWSEQ_CH_

    class ViewSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ViewSeq
        >
      ViewSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ViewSeq
        >
      ViewSeq_out;

    class  ViewSeq
      : public
          ::TAO::unbounded_value_sequence<
              VIEW
            >
    {
    public:
      ViewSeq (void);
      ViewSeq ( ::CORBA::ULong max);
      ViewSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        VIEW* buffer,
        ::CORBA::Boolean release = false);
      ViewSeq (const ViewSeq &);
      virtual ~ViewSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ViewSeq_var _var_type;
      typedef ViewSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ALARM_SPOT;

    typedef
      ::TAO_Fixed_Var_T<
          ALARM_SPOT
        >
      ALARM_SPOT_var;

    typedef
      ALARM_SPOT &
      ALARM_SPOT_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  ALARM_SPOT
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ALARM_SPOT_var _var_type;
      typedef ALARM_SPOT_out _out_type;
      
      ::CORBA::Long idAlarmElement;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _AlarmSpotValue[50];
      typedef ::CORBA::Char _AlarmSpotValue_slice;
      struct _AlarmSpotValue_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _AlarmSpotValue,
            _AlarmSpotValue_slice,
            _AlarmSpotValue_tag
          >
        _AlarmSpotValue_forany;

      static _AlarmSpotValue_slice *
      _AlarmSpotValue_alloc (void);

      static void
      _AlarmSpotValue_free (
          _AlarmSpotValue_slice *_tao_slice);
      
      static _AlarmSpotValue_slice *
      _AlarmSpotValue_dup (
          const _AlarmSpotValue_slice *_tao_slice);
      
      static void
      _AlarmSpotValue_copy (
          _AlarmSpotValue_slice *_tao_to,
          const _AlarmSpotValue_slice *_tao_from
        );

      _AlarmSpotValue AlarmSpotValue;
      ::CORBA::Long ID_Param;
      ::CORBA::Long idFunction;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _shortDescription[50];
      typedef ::CORBA::Char _shortDescription_slice;
      struct _shortDescription_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _shortDescription,
            _shortDescription_slice,
            _shortDescription_tag
          >
        _shortDescription_forany;

      static _shortDescription_slice *
      _shortDescription_alloc (void);

      static void
      _shortDescription_free (
          _shortDescription_slice *_tao_slice);
      
      static _shortDescription_slice *
      _shortDescription_dup (
          const _shortDescription_slice *_tao_slice);
      
      static void
      _shortDescription_copy (
          _shortDescription_slice *_tao_to,
          const _shortDescription_slice *_tao_from
        );

      _shortDescription shortDescription;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _longDescritpion[150];
      typedef ::CORBA::Char _longDescritpion_slice;
      struct _longDescritpion_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _longDescritpion,
            _longDescritpion_slice,
            _longDescritpion_tag
          >
        _longDescritpion_forany;

      static _longDescritpion_slice *
      _longDescritpion_alloc (void);

      static void
      _longDescritpion_free (
          _longDescritpion_slice *_tao_slice);
      
      static _longDescritpion_slice *
      _longDescritpion_dup (
          const _longDescritpion_slice *_tao_slice);
      
      static void
      _longDescritpion_copy (
          _longDescritpion_slice *_tao_to,
          const _longDescritpion_slice *_tao_from
        );

      _longDescritpion longDescritpion;
      ::CORBA::Boolean modify;
      ::CORBA::Long TypeLevel;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_ALARMSPOTSEQ_CH_)
#define _NET_ETECH_ALARMSPOTSEQ_CH_

    class AlarmSpotSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          AlarmSpotSeq
        >
      AlarmSpotSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          AlarmSpotSeq
        >
      AlarmSpotSeq_out;

    class  AlarmSpotSeq
      : public
          ::TAO::unbounded_value_sequence<
              ALARM_SPOT
            >
    {
    public:
      AlarmSpotSeq (void);
      AlarmSpotSeq ( ::CORBA::ULong max);
      AlarmSpotSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ALARM_SPOT* buffer,
        ::CORBA::Boolean release = false);
      AlarmSpotSeq (const AlarmSpotSeq &);
      virtual ~AlarmSpotSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef AlarmSpotSeq_var _var_type;
      typedef AlarmSpotSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct SPOT_ELEMENTS;

    typedef
      ::TAO_Var_Var_T<
          SPOT_ELEMENTS
        >
      SPOT_ELEMENTS_var;

    typedef
      ::TAO_Out_T<
          SPOT_ELEMENTS
        >
      SPOT_ELEMENTS_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  SPOT_ELEMENTS
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SPOT_ELEMENTS_var _var_type;
      typedef SPOT_ELEMENTS_out _out_type;
      
      net::etech::ALARM_SPOT primaryElement;
      net::etech::AlarmSpotSeq secondaryElement;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_SPOTELEMENTSEQ_CH_)
#define _NET_ETECH_SPOTELEMENTSEQ_CH_

    class SpotElementSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          SpotElementSeq
        >
      SpotElementSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          SpotElementSeq
        >
      SpotElementSeq_out;

    class  SpotElementSeq
      : public
          ::TAO::unbounded_value_sequence<
              SPOT_ELEMENTS
            >
    {
    public:
      SpotElementSeq (void);
      SpotElementSeq ( ::CORBA::ULong max);
      SpotElementSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        SPOT_ELEMENTS* buffer,
        ::CORBA::Boolean release = false);
      SpotElementSeq (const SpotElementSeq &);
      virtual ~SpotElementSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SpotElementSeq_var _var_type;
      typedef SpotElementSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ALARM_ELEMENT;

    typedef
      ::TAO_Var_Var_T<
          ALARM_ELEMENT
        >
      ALARM_ELEMENT_var;

    typedef
      ::TAO_Out_T<
          ALARM_ELEMENT
        >
      ALARM_ELEMENT_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  ALARM_ELEMENT
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ALARM_ELEMENT_var _var_type;
      typedef ALARM_ELEMENT_out _out_type;
      
      ::CORBA::Long idAlarmElement;
      ::CORBA::Long idFunction;
      ::CORBA::Long ID_NEXT_Layout;
      net::etech::COORDINATE mapLocation;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _shortDescription[50];
      typedef ::CORBA::Char _shortDescription_slice;
      struct _shortDescription_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _shortDescription,
            _shortDescription_slice,
            _shortDescription_tag
          >
        _shortDescription_forany;

      static _shortDescription_slice *
      _shortDescription_alloc (void);

      static void
      _shortDescription_free (
          _shortDescription_slice *_tao_slice);
      
      static _shortDescription_slice *
      _shortDescription_dup (
          const _shortDescription_slice *_tao_slice);
      
      static void
      _shortDescription_copy (
          _shortDescription_slice *_tao_to,
          const _shortDescription_slice *_tao_from
        );

      _shortDescription shortDescription;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _longDescritpion[150];
      typedef ::CORBA::Char _longDescritpion_slice;
      struct _longDescritpion_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _longDescritpion,
            _longDescritpion_slice,
            _longDescritpion_tag
          >
        _longDescritpion_forany;

      static _longDescritpion_slice *
      _longDescritpion_alloc (void);

      static void
      _longDescritpion_free (
          _longDescritpion_slice *_tao_slice);
      
      static _longDescritpion_slice *
      _longDescritpion_dup (
          const _longDescritpion_slice *_tao_slice);
      
      static void
      _longDescritpion_copy (
          _longDescritpion_slice *_tao_to,
          const _longDescritpion_slice *_tao_from
        );

      _longDescritpion longDescritpion;
      net::etech::SpotElementSeq spotElement;
      ::CORBA::Long alarmMode;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ovrOffColor[10];
      typedef ::CORBA::Char _ovrOffColor_slice;
      struct _ovrOffColor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ovrOffColor,
            _ovrOffColor_slice,
            _ovrOffColor_tag
          >
        _ovrOffColor_forany;

      static _ovrOffColor_slice *
      _ovrOffColor_alloc (void);

      static void
      _ovrOffColor_free (
          _ovrOffColor_slice *_tao_slice);
      
      static _ovrOffColor_slice *
      _ovrOffColor_dup (
          const _ovrOffColor_slice *_tao_slice);
      
      static void
      _ovrOffColor_copy (
          _ovrOffColor_slice *_tao_to,
          const _ovrOffColor_slice *_tao_from
        );

      _ovrOffColor ovrOffColor;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _offIconURL[150];
      typedef ::CORBA::Char _offIconURL_slice;
      struct _offIconURL_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _offIconURL,
            _offIconURL_slice,
            _offIconURL_tag
          >
        _offIconURL_forany;

      static _offIconURL_slice *
      _offIconURL_alloc (void);

      static void
      _offIconURL_free (
          _offIconURL_slice *_tao_slice);
      
      static _offIconURL_slice *
      _offIconURL_dup (
          const _offIconURL_slice *_tao_slice);
      
      static void
      _offIconURL_copy (
          _offIconURL_slice *_tao_to,
          const _offIconURL_slice *_tao_from
        );

      _offIconURL offIconURL;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ovrOnColor[10];
      typedef ::CORBA::Char _ovrOnColor_slice;
      struct _ovrOnColor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ovrOnColor,
            _ovrOnColor_slice,
            _ovrOnColor_tag
          >
        _ovrOnColor_forany;

      static _ovrOnColor_slice *
      _ovrOnColor_alloc (void);

      static void
      _ovrOnColor_free (
          _ovrOnColor_slice *_tao_slice);
      
      static _ovrOnColor_slice *
      _ovrOnColor_dup (
          const _ovrOnColor_slice *_tao_slice);
      
      static void
      _ovrOnColor_copy (
          _ovrOnColor_slice *_tao_to,
          const _ovrOnColor_slice *_tao_from
        );

      _ovrOnColor ovrOnColor;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _onIconURL[150];
      typedef ::CORBA::Char _onIconURL_slice;
      struct _onIconURL_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _onIconURL,
            _onIconURL_slice,
            _onIconURL_tag
          >
        _onIconURL_forany;

      static _onIconURL_slice *
      _onIconURL_alloc (void);

      static void
      _onIconURL_free (
          _onIconURL_slice *_tao_slice);
      
      static _onIconURL_slice *
      _onIconURL_dup (
          const _onIconURL_slice *_tao_slice);
      
      static void
      _onIconURL_copy (
          _onIconURL_slice *_tao_to,
          const _onIconURL_slice *_tao_from
        );

      _onIconURL onIconURL;
      ::CORBA::Long bookMode;
      ::CORBA::Long ticketMode;
      ::CORBA::Boolean showOnMap;
      ::CORBA::Boolean showOnTab;
      ::CORBA::Long idContinent;
      ::CORBA::Long idNation;
      ::CORBA::Long idGroup;
      ::CORBA::Long status;
      ::CORBA::Long alwaysVisible;
      ::CORBA::Boolean modify;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_ALARMELEMENTSEQ_CH_)
#define _NET_ETECH_ALARMELEMENTSEQ_CH_

    class AlarmElementSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          AlarmElementSeq
        >
      AlarmElementSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          AlarmElementSeq
        >
      AlarmElementSeq_out;

    class  AlarmElementSeq
      : public
          ::TAO::unbounded_value_sequence<
              ALARM_ELEMENT
            >
    {
    public:
      AlarmElementSeq (void);
      AlarmElementSeq ( ::CORBA::ULong max);
      AlarmElementSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ALARM_ELEMENT* buffer,
        ::CORBA::Boolean release = false);
      AlarmElementSeq (const AlarmElementSeq &);
      virtual ~AlarmElementSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef AlarmElementSeq_var _var_type;
      typedef AlarmElementSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct MAG_CENTRALI;

    typedef
      ::TAO_Fixed_Var_T<
          MAG_CENTRALI
        >
      MAG_CENTRALI_var;

    typedef
      MAG_CENTRALI &
      MAG_CENTRALI_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  MAG_CENTRALI
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef MAG_CENTRALI_var _var_type;
      typedef MAG_CENTRALI_out _out_type;
      
      ::CORBA::Long idCentrale;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _nameCen[50];
      typedef ::CORBA::Char _nameCen_slice;
      struct _nameCen_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _nameCen,
            _nameCen_slice,
            _nameCen_tag
          >
        _nameCen_forany;

      static _nameCen_slice *
      _nameCen_alloc (void);

      static void
      _nameCen_free (
          _nameCen_slice *_tao_slice);
      
      static _nameCen_slice *
      _nameCen_dup (
          const _nameCen_slice *_tao_slice);
      
      static void
      _nameCen_copy (
          _nameCen_slice *_tao_to,
          const _nameCen_slice *_tao_from
        );

      _nameCen nameCen;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _descCen[150];
      typedef ::CORBA::Char _descCen_slice;
      struct _descCen_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _descCen,
            _descCen_slice,
            _descCen_tag
          >
        _descCen_forany;

      static _descCen_slice *
      _descCen_alloc (void);

      static void
      _descCen_free (
          _descCen_slice *_tao_slice);
      
      static _descCen_slice *
      _descCen_dup (
          const _descCen_slice *_tao_slice);
      
      static void
      _descCen_copy (
          _descCen_slice *_tao_to,
          const _descCen_slice *_tao_from
        );

      _descCen descCen;
      ::CORBA::Long pollTime;
      ::CORBA::Long soglia;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_MAGCENTRALISEQ_CH_)
#define _NET_ETECH_MAGCENTRALISEQ_CH_

    class MagCentraliSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          MagCentraliSeq
        >
      MagCentraliSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          MagCentraliSeq
        >
      MagCentraliSeq_out;

    class  MagCentraliSeq
      : public
          ::TAO::unbounded_value_sequence<
              MAG_CENTRALI
            >
    {
    public:
      MagCentraliSeq (void);
      MagCentraliSeq ( ::CORBA::ULong max);
      MagCentraliSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        MAG_CENTRALI* buffer,
        ::CORBA::Boolean release = false);
      MagCentraliSeq (const MagCentraliSeq &);
      virtual ~MagCentraliSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef MagCentraliSeq_var _var_type;
      typedef MagCentraliSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct S_CONFIG_ADAMS;

    typedef
      ::TAO_Fixed_Var_T<
          S_CONFIG_ADAMS
        >
      S_CONFIG_ADAMS_var;

    typedef
      S_CONFIG_ADAMS &
      S_CONFIG_ADAMS_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  S_CONFIG_ADAMS
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef S_CONFIG_ADAMS_var _var_type;
      typedef S_CONFIG_ADAMS_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _configName[40];
      typedef ::CORBA::Char _configName_slice;
      struct _configName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _configName,
            _configName_slice,
            _configName_tag
          >
        _configName_forany;

      static _configName_slice *
      _configName_alloc (void);

      static void
      _configName_free (
          _configName_slice *_tao_slice);
      
      static _configName_slice *
      _configName_dup (
          const _configName_slice *_tao_slice);
      
      static void
      _configName_copy (
          _configName_slice *_tao_to,
          const _configName_slice *_tao_from
        );

      _configName configName;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_SCONFIGSEQ_CH_)
#define _NET_ETECH_SCONFIGSEQ_CH_

    class SConfigSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          SConfigSeq
        >
      SConfigSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          SConfigSeq
        >
      SConfigSeq_out;

    class  SConfigSeq
      : public
          ::TAO::unbounded_value_sequence<
              S_CONFIG_ADAMS
            >
    {
    public:
      SConfigSeq (void);
      SConfigSeq ( ::CORBA::ULong max);
      SConfigSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        S_CONFIG_ADAMS* buffer,
        ::CORBA::Boolean release = false);
      SConfigSeq (const SConfigSeq &);
      virtual ~SConfigSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SConfigSeq_var _var_type;
      typedef SConfigSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ADAMS_PROFILE_GRANT;

    typedef
      ::TAO_Var_Var_T<
          ADAMS_PROFILE_GRANT
        >
      ADAMS_PROFILE_GRANT_var;

    typedef
      ::TAO_Out_T<
          ADAMS_PROFILE_GRANT
        >
      ADAMS_PROFILE_GRANT_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  ADAMS_PROFILE_GRANT
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ADAMS_PROFILE_GRANT_var _var_type;
      typedef ADAMS_PROFILE_GRANT_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _profile[40];
      typedef ::CORBA::Char _profile_slice;
      struct _profile_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _profile,
            _profile_slice,
            _profile_tag
          >
        _profile_forany;

      static _profile_slice *
      _profile_alloc (void);

      static void
      _profile_free (
          _profile_slice *_tao_slice);
      
      static _profile_slice *
      _profile_dup (
          const _profile_slice *_tao_slice);
      
      static void
      _profile_copy (
          _profile_slice *_tao_to,
          const _profile_slice *_tao_from
        );

      _profile profile;
      ::CORBA::Boolean completeNumber;
      ::CORBA::Boolean wideCalnedar;
      ::CORBA::Long jobSched;
      ::CORBA::Long queeNumber;
      net::etech::SConfigSeq configSeq;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct E_MAIL;

    typedef
      ::TAO_Fixed_Var_T<
          E_MAIL
        >
      E_MAIL_var;

    typedef
      E_MAIL &
      E_MAIL_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  E_MAIL
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef E_MAIL_var _var_type;
      typedef E_MAIL_out _out_type;
      
      ::CORBA::Long id_email;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _utente[20];
      typedef ::CORBA::Char _utente_slice;
      struct _utente_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _utente,
            _utente_slice,
            _utente_tag
          >
        _utente_forany;

      static _utente_slice *
      _utente_alloc (void);

      static void
      _utente_free (
          _utente_slice *_tao_slice);
      
      static _utente_slice *
      _utente_dup (
          const _utente_slice *_tao_slice);
      
      static void
      _utente_copy (
          _utente_slice *_tao_to,
          const _utente_slice *_tao_from
        );

      _utente utente;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _data_email[20];
      typedef ::CORBA::Char _data_email_slice;
      struct _data_email_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _data_email,
            _data_email_slice,
            _data_email_tag
          >
        _data_email_forany;

      static _data_email_slice *
      _data_email_alloc (void);

      static void
      _data_email_free (
          _data_email_slice *_tao_slice);
      
      static _data_email_slice *
      _data_email_dup (
          const _data_email_slice *_tao_slice);
      
      static void
      _data_email_copy (
          _data_email_slice *_tao_to,
          const _data_email_slice *_tao_from
        );

      _data_email data_email;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _data_delete_email[20];
      typedef ::CORBA::Char _data_delete_email_slice;
      struct _data_delete_email_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _data_delete_email,
            _data_delete_email_slice,
            _data_delete_email_tag
          >
        _data_delete_email_forany;

      static _data_delete_email_slice *
      _data_delete_email_alloc (void);

      static void
      _data_delete_email_free (
          _data_delete_email_slice *_tao_slice);
      
      static _data_delete_email_slice *
      _data_delete_email_dup (
          const _data_delete_email_slice *_tao_slice);
      
      static void
      _data_delete_email_copy (
          _data_delete_email_slice *_tao_to,
          const _data_delete_email_slice *_tao_from
        );

      _data_delete_email data_delete_email;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _email_to[256];
      typedef ::CORBA::Char _email_to_slice;
      struct _email_to_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _email_to,
            _email_to_slice,
            _email_to_tag
          >
        _email_to_forany;

      static _email_to_slice *
      _email_to_alloc (void);

      static void
      _email_to_free (
          _email_to_slice *_tao_slice);
      
      static _email_to_slice *
      _email_to_dup (
          const _email_to_slice *_tao_slice);
      
      static void
      _email_to_copy (
          _email_to_slice *_tao_to,
          const _email_to_slice *_tao_from
        );

      _email_to email_to;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _email_cc[256];
      typedef ::CORBA::Char _email_cc_slice;
      struct _email_cc_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _email_cc,
            _email_cc_slice,
            _email_cc_tag
          >
        _email_cc_forany;

      static _email_cc_slice *
      _email_cc_alloc (void);

      static void
      _email_cc_free (
          _email_cc_slice *_tao_slice);
      
      static _email_cc_slice *
      _email_cc_dup (
          const _email_cc_slice *_tao_slice);
      
      static void
      _email_cc_copy (
          _email_cc_slice *_tao_to,
          const _email_cc_slice *_tao_from
        );

      _email_cc email_cc;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _email_from[256];
      typedef ::CORBA::Char _email_from_slice;
      struct _email_from_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _email_from,
            _email_from_slice,
            _email_from_tag
          >
        _email_from_forany;

      static _email_from_slice *
      _email_from_alloc (void);

      static void
      _email_from_free (
          _email_from_slice *_tao_slice);
      
      static _email_from_slice *
      _email_from_dup (
          const _email_from_slice *_tao_slice);
      
      static void
      _email_from_copy (
          _email_from_slice *_tao_to,
          const _email_from_slice *_tao_from
        );

      _email_from email_from;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _email_subject[1000];
      typedef ::CORBA::Char _email_subject_slice;
      struct _email_subject_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _email_subject,
            _email_subject_slice,
            _email_subject_tag
          >
        _email_subject_forany;

      static _email_subject_slice *
      _email_subject_alloc (void);

      static void
      _email_subject_free (
          _email_subject_slice *_tao_slice);
      
      static _email_subject_slice *
      _email_subject_dup (
          const _email_subject_slice *_tao_slice);
      
      static void
      _email_subject_copy (
          _email_subject_slice *_tao_to,
          const _email_subject_slice *_tao_from
        );

      _email_subject email_subject;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _email_attach[256];
      typedef ::CORBA::Char _email_attach_slice;
      struct _email_attach_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _email_attach,
            _email_attach_slice,
            _email_attach_tag
          >
        _email_attach_forany;

      static _email_attach_slice *
      _email_attach_alloc (void);

      static void
      _email_attach_free (
          _email_attach_slice *_tao_slice);
      
      static _email_attach_slice *
      _email_attach_dup (
          const _email_attach_slice *_tao_slice);
      
      static void
      _email_attach_copy (
          _email_attach_slice *_tao_to,
          const _email_attach_slice *_tao_from
        );

      _email_attach email_attach;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _email_msg[3000];
      typedef ::CORBA::Char _email_msg_slice;
      struct _email_msg_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _email_msg,
            _email_msg_slice,
            _email_msg_tag
          >
        _email_msg_forany;

      static _email_msg_slice *
      _email_msg_alloc (void);

      static void
      _email_msg_free (
          _email_msg_slice *_tao_slice);
      
      static _email_msg_slice *
      _email_msg_dup (
          const _email_msg_slice *_tao_slice);
      
      static void
      _email_msg_copy (
          _email_msg_slice *_tao_to,
          const _email_msg_slice *_tao_from
        );

      _email_msg email_msg;
      ::CORBA::Long type_email;
      ::CORBA::Long status_email;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_E_MAILSEQ_CH_)
#define _NET_ETECH_E_MAILSEQ_CH_

    class E_MAILSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          E_MAILSeq
        >
      E_MAILSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          E_MAILSeq
        >
      E_MAILSeq_out;

    class  E_MAILSeq
      : public
          ::TAO::unbounded_value_sequence<
              E_MAIL
            >
    {
    public:
      E_MAILSeq (void);
      E_MAILSeq ( ::CORBA::ULong max);
      E_MAILSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        E_MAIL* buffer,
        ::CORBA::Boolean release = false);
      E_MAILSeq (const E_MAILSeq &);
      virtual ~E_MAILSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef E_MAILSeq_var _var_type;
      typedef E_MAILSeq_out _out_type;
    };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module net::etech

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module net

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace net
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace etech
  {

    // TAO_IDL - Generated from
    // be/be_visitor_module/module_ch.cpp:38

    namespace ASP
    {

      // TAO_IDL - Generated from
      // be/be_interface.cpp:751

#if !defined (_NET_ETECH_ASP_ASP_USERMANAGEMENT_SERVER__VAR_OUT_CH_)
#define _NET_ETECH_ASP_ASP_USERMANAGEMENT_SERVER__VAR_OUT_CH_

      class asp_usermanagement_server;
      typedef asp_usermanagement_server *asp_usermanagement_server_ptr;

      typedef
        TAO_Objref_Var_T<
            asp_usermanagement_server
          >
        asp_usermanagement_server_var;
      
      typedef
        TAO_Objref_Out_T<
            asp_usermanagement_server
          >
        asp_usermanagement_server_out;

#endif /* end #if !defined */

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:43

      class  asp_usermanagement_server
        : public virtual ::CORBA::Object
      {
      public:
        friend class TAO::Narrow_Utils<asp_usermanagement_server>;

        // TAO_IDL - Generated from
        // be/be_type.cpp:307

        typedef asp_usermanagement_server_ptr _ptr_type;
        typedef asp_usermanagement_server_var _var_type;
        typedef asp_usermanagement_server_out _out_type;

        // The static operations.
        static asp_usermanagement_server_ptr _duplicate (asp_usermanagement_server_ptr obj);

        static void _tao_release (asp_usermanagement_server_ptr obj);

        static asp_usermanagement_server_ptr _narrow (::CORBA::Object_ptr obj);
        static asp_usermanagement_server_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
        static asp_usermanagement_server_ptr _nil (void);

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eID_MOD_STSCONFIG = 5;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eID_MOD_PMON = 4;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eID_MOD_DTM = 6;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eID_MOD_DISPATCHER = 7;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eID_MOD_ANAGRAFICHE = 10;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eID_MOD_ADAMS_CONF = 8;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_TIME_STAMP = 20;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_IP_GENERATORE = 16;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_HOSTNAME_GENERATORE = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_IP_CLIENT = 16;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_HOSTNAME_CLIENT = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_UTENZA_APPLICATIVA = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_UTENZA_CLIENT = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_APPLICATIVO_CLIENT = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_AZIONE = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_OGGETTO = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_PARAMETRI = 500;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_ESITO = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_DESC_ROLE = 150;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_DESC_CLASS = 150;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_NAME_FUNCTION = 60;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_DESC_FUNCTION = 150;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_VERSION = 60;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_RELEASED_DATA = 60;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_AUTHOR = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_VENDOR = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_PROFILE = 40;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_NAME_PROFILE = 40;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_DESC_PROFILE = 300;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_LOGIN_LEN = 20;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_PASSWORD_LEN = 20;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_NOMEUTENTE_LEN = 100;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_DESC_USER_LEN = 150;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eOP_INSERT = 1;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eOP_MODIFY = 2;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eOP_DELETE = 3;

        virtual ::CORBA::Boolean LoginUser (
          ::CORBA::Long idClass,
          const char * login,
          const char * password,
          ::CORBA::Boolean disablePassCheck,
          const ::net::etech::S_APP_LOG & AppLog,
          ::CORBA::Long_out ruolo);

        virtual ::CORBA::Boolean getConfigLib (
          ::CORBA::Long flag,
          ::net::etech::S_CONFIG_LIB_out ConfigLib);

        virtual ::CORBA::Boolean getUserConfiguration (
          ::CORBA::Long flag,
          const char * login,
          ::CORBA::Long idClass,
          ::net::etech::S_USER_out user,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean setUserConfiguration (
          ::CORBA::Long flag,
          const ::net::etech::S_USER & user,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean getProfileConfiguration (
          ::CORBA::Long flag,
          const char * profileName,
          ::net::etech::S_PROFILE_out profile,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean setProfileConfiguration (
          ::CORBA::Long flag,
          const ::net::etech::S_PROFILE & profile,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean imd_Role (
          ::CORBA::Long flag,
          const ::net::etech::S_ROLE & role,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean imd_Class (
          ::CORBA::Long flag,
          const ::net::etech::S_CLASS & modulo,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean imd_Function (
          ::CORBA::Long flag,
          const ::net::etech::S_FUNCTION & function,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean imd_Profile (
          ::CORBA::Long flag,
          const ::net::etech::S_PROFILE & profile,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean imd_User (
          ::CORBA::Long flag,
          const ::net::etech::S_USER & user,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean getNode (
          ::net::etech::ConfNodeSeq_out nodeList,
          const ::net::etech::S_APP_LOG & AppLog);

        // TAO_IDL - Generated from
        // be/be_visitor_interface/interface_ch.cpp:140

        virtual ::CORBA::Boolean _is_a (const char *type_id);
        virtual const char* _interface_repository_id (void) const;
        virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
      
      protected:
        // Concrete interface only.
        asp_usermanagement_server (void);

        // Concrete non-local interface only.
        asp_usermanagement_server (
            ::IOP::IOR *ior,
            TAO_ORB_Core *orb_core);
        
        // Non-local interface only.
        asp_usermanagement_server (
            TAO_Stub *objref,
            ::CORBA::Boolean _tao_collocated = false,
            TAO_Abstract_ServantBase *servant = 0,
            TAO_ORB_Core *orb_core = 0);

        virtual ~asp_usermanagement_server (void);
      
      private:
        // Private and unimplemented for concrete interfaces.
        asp_usermanagement_server (const asp_usermanagement_server &);

        void operator= (const asp_usermanagement_server &);
      };

      // TAO_IDL - Generated from
      // be/be_interface.cpp:751

#if !defined (_NET_ETECH_ASP_MDM_CONFIGURATION_SERVER__VAR_OUT_CH_)
#define _NET_ETECH_ASP_MDM_CONFIGURATION_SERVER__VAR_OUT_CH_

      class mdm_configuration_server;
      typedef mdm_configuration_server *mdm_configuration_server_ptr;

      typedef
        TAO_Objref_Var_T<
            mdm_configuration_server
          >
        mdm_configuration_server_var;
      
      typedef
        TAO_Objref_Out_T<
            mdm_configuration_server
          >
        mdm_configuration_server_out;

#endif /* end #if !defined */

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:43

      class  mdm_configuration_server
        : public virtual ::CORBA::Object
      {
      public:
        friend class TAO::Narrow_Utils<mdm_configuration_server>;

        // TAO_IDL - Generated from
        // be/be_type.cpp:307

        typedef mdm_configuration_server_ptr _ptr_type;
        typedef mdm_configuration_server_var _var_type;
        typedef mdm_configuration_server_out _out_type;

        // The static operations.
        static mdm_configuration_server_ptr _duplicate (mdm_configuration_server_ptr obj);

        static void _tao_release (mdm_configuration_server_ptr obj);

        static mdm_configuration_server_ptr _narrow (::CORBA::Object_ptr obj);
        static mdm_configuration_server_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
        static mdm_configuration_server_ptr _nil (void);

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eID_MOD_MDM = 1;

        virtual ::CORBA::Boolean getProfileConfigurationMDM (
          const char * profileName,
          ::net::etech::ADAMS_PROFILE_GRANT_out profileADAMS,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean setProfileConfigurationMDM (
          ::CORBA::Long flag,
          const ::net::etech::ADAMS_PROFILE_GRANT & profileADAMS,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean setConfiguration (
          ::CORBA::Long flag,
          const ::net::etech::S_FUNCTION & newConfiguration,
          const ::net::etech::S_APP_LOG & AppLog);

        // TAO_IDL - Generated from
        // be/be_visitor_interface/interface_ch.cpp:140

        virtual ::CORBA::Boolean _is_a (const char *type_id);
        virtual const char* _interface_repository_id (void) const;
        virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
      
      protected:
        // Concrete interface only.
        mdm_configuration_server (void);

        // Concrete non-local interface only.
        mdm_configuration_server (
            ::IOP::IOR *ior,
            TAO_ORB_Core *orb_core);
        
        // Non-local interface only.
        mdm_configuration_server (
            TAO_Stub *objref,
            ::CORBA::Boolean _tao_collocated = false,
            TAO_Abstract_ServantBase *servant = 0,
            TAO_ORB_Core *orb_core = 0);

        virtual ~mdm_configuration_server (void);
      
      private:
        // Private and unimplemented for concrete interfaces.
        mdm_configuration_server (const mdm_configuration_server &);

        void operator= (const mdm_configuration_server &);
      };

      // TAO_IDL - Generated from
      // be/be_interface.cpp:751

#if !defined (_NET_ETECH_ASP_MONITORCONFIGURATION__VAR_OUT_CH_)
#define _NET_ETECH_ASP_MONITORCONFIGURATION__VAR_OUT_CH_

      class MONITORConfiguration;
      typedef MONITORConfiguration *MONITORConfiguration_ptr;

      typedef
        TAO_Objref_Var_T<
            MONITORConfiguration
          >
        MONITORConfiguration_var;
      
      typedef
        TAO_Objref_Out_T<
            MONITORConfiguration
          >
        MONITORConfiguration_out;

#endif /* end #if !defined */

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:43

      class  MONITORConfiguration
        : public virtual ::CORBA::Object
      {
      public:
        friend class TAO::Narrow_Utils<MONITORConfiguration>;

        // TAO_IDL - Generated from
        // be/be_type.cpp:307

        typedef MONITORConfiguration_ptr _ptr_type;
        typedef MONITORConfiguration_var _var_type;
        typedef MONITORConfiguration_out _out_type;

        // The static operations.
        static MONITORConfiguration_ptr _duplicate (MONITORConfiguration_ptr obj);

        static void _tao_release (MONITORConfiguration_ptr obj);

        static MONITORConfiguration_ptr _narrow (::CORBA::Object_ptr obj);
        static MONITORConfiguration_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
        static MONITORConfiguration_ptr _nil (void);

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eID_GET_SAVE_TPL = -3;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eID_MOD_MONITOR = 3;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMODULE_USER_GOD = 1;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long ePLUGIN_NOT_VALIDATE = 0;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long ePLUGIN_VALIDATE = 1;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long ePLUGIN_VALIDATE_AND_CONFIGURATED = 2;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eALL_PLUGIN = -2;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eUSER_LIST_CONFIGURATED_PLUGINS = -3;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eCONFIGURATED_PLUGIN = -1;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_PLUGIN_NAME_LEN = 60;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_PLUGIN_TAG_LEN = 60;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_LOGICAL_FUNCTION_LEN = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_FUNCTION_DESCRIPTION_LEN = 150;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_VERSION_LEN = 60;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_RELEASE_DATA_LEN = 60;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_VENDOR_LEN = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_AUTHOR_LEN = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_SOURCE_DATA_LEN = 60;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_SOURCE_LOCATION_LEN = 60;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_DESCRITTORE_LEN = 150;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_SUB_FUNCTION_NAME_LEN = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_DESC_LEN = 150;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_POL_RANGE_LEN = 40;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_OUTPUT_BASE_UNIT_LEN = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_MIN_VALUE_LEN = 30;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_IMPUT_NAME_LEN = 15;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_ALTERNATIVE_NAME_LEN = 30;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_STR_LEN = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_COLOR_LEN = 10;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_DESC_SESSION = 150;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_VALUE_LEN = 50;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_FONT_NAME_LEN = 100;

        virtual ::CORBA::Boolean getUserGrant (
          const char * login,
          const char * profilo,
          ::CORBA::Long flag,
          ::net::etech::MONITOR_USER_GRANT_out UserGrant,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean setUserGrant (
          const ::net::etech::MONITOR_USER_GRANT & UserGrant,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean getDispatcherList (
          ::net::etech::DispatcherDescriptionSeq_out dispList,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean getPlugIn (
          ::net::etech::FunctionDescriptionWrapp_out PlugIn,
          const char * profile,
          ::CORBA::Long idFunction,
          const char * pluginName,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean getSession (
          ::net::etech::SessionSeq_out SessionList,
          const char * login,
          ::CORBA::Long idFunction,
          ::CORBA::Long flagSession,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean deleteSession (
          const char * login,
          ::CORBA::Long idSession,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean setSession (
          const ::net::etech::Session & sessione,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean validatePlugIn (
          const ::net::etech::FunctionDescriptionSeq & PlugIn,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean configurePlugIn (
          const ::net::etech::FunctionDescription & PlugIn,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean getHelpList (
          ::CORBA::Long idHelp,
          ::net::etech::DescSeq_out HelpList,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean getHelp (
          const ::net::etech::PLUGIN_CONFIG & plug_in,
          ::net::etech::HelpListSeq_out HelpList,
          const ::net::etech::S_APP_LOG & AppLog);

        // TAO_IDL - Generated from
        // be/be_visitor_interface/interface_ch.cpp:140

        virtual ::CORBA::Boolean _is_a (const char *type_id);
        virtual const char* _interface_repository_id (void) const;
        virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
      
      protected:
        // Concrete interface only.
        MONITORConfiguration (void);

        // Concrete non-local interface only.
        MONITORConfiguration (
            ::IOP::IOR *ior,
            TAO_ORB_Core *orb_core);
        
        // Non-local interface only.
        MONITORConfiguration (
            TAO_Stub *objref,
            ::CORBA::Boolean _tao_collocated = false,
            TAO_Abstract_ServantBase *servant = 0,
            TAO_ORB_Core *orb_core = 0);

        virtual ~MONITORConfiguration (void);
      
      private:
        // Private and unimplemented for concrete interfaces.
        MONITORConfiguration (const MONITORConfiguration &);

        void operator= (const MONITORConfiguration &);
      };

      // TAO_IDL - Generated from
      // be/be_interface.cpp:751

#if !defined (_NET_ETECH_ASP_IMAGESERVERCONFIGURATION__VAR_OUT_CH_)
#define _NET_ETECH_ASP_IMAGESERVERCONFIGURATION__VAR_OUT_CH_

      class IMAGEServerConfiguration;
      typedef IMAGEServerConfiguration *IMAGEServerConfiguration_ptr;

      typedef
        TAO_Objref_Var_T<
            IMAGEServerConfiguration
          >
        IMAGEServerConfiguration_var;
      
      typedef
        TAO_Objref_Out_T<
            IMAGEServerConfiguration
          >
        IMAGEServerConfiguration_out;

#endif /* end #if !defined */

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:43

      class  IMAGEServerConfiguration
        : public virtual ::CORBA::Object
      {
      public:
        friend class TAO::Narrow_Utils<IMAGEServerConfiguration>;

        // TAO_IDL - Generated from
        // be/be_type.cpp:307

        typedef IMAGEServerConfiguration_ptr _ptr_type;
        typedef IMAGEServerConfiguration_var _var_type;
        typedef IMAGEServerConfiguration_out _out_type;

        // The static operations.
        static IMAGEServerConfiguration_ptr _duplicate (IMAGEServerConfiguration_ptr obj);

        static void _tao_release (IMAGEServerConfiguration_ptr obj);

        static IMAGEServerConfiguration_ptr _narrow (::CORBA::Object_ptr obj);
        static IMAGEServerConfiguration_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
        static IMAGEServerConfiguration_ptr _nil (void);

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eID_MOD_IMAGE = 2;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eSUPER_USER_MAG = -5;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMODULE_USER_GOD = 1;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eID_LAYOUT_IP_SCENIC_1 = 5;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eID_LAYOUT_IP_SCENIC_2 = 6;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_IMG_EDIT_OTHER = 20;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_IMG_ALARM_MAX = 30;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_IMG_VIEW = 20;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_IMG_EXTERNAL_MODULE = 10;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eTYPE_MAP = 0;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eTYPE_TAB = 1;

        virtual ::CORBA::Boolean reloadConfigurationIP (
          ::CORBA::Boolean flag,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean getProfileConfigurationImg (
          ::CORBA::Long idClass,
          const char * profileName,
          ::net::etech::USER_PROFILE_IMG_out UserProfileImg,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean getAllLayout (
          ::net::etech::LayoutWrapp_out Layout,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean setUserConfigurationImg (
          const ::net::etech::USER_PROFILE_IMG & UserProfileImg,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean setLayout (
          const ::net::etech::LAYOUT & newLayout,
          const ::net::etech::S_FUNCTION & newFunction,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean deleteLayout (
          ::CORBA::Long ID_Function,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean getConfigMap (
          ::CORBA::Long idFunction,
          ::net::etech::NationSeq_out nazioni,
          ::net::etech::ContinentSeq_out continenti,
          ::net::etech::ViewSeq_out view,
          ::net::etech::AlarmElementSeq_out AlarmElement,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean setAlarmElement (
          const ::net::etech::AlarmElementSeq & AlarmElement,
          ::CORBA::Long idFunction,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean setConfigMap (
          const ::net::etech::NationSeq & nazioni,
          const ::net::etech::ContinentSeq & continenti,
          const ::net::etech::ViewSeq & view,
          const ::net::etech::AlarmElementSeq & AlarmElement,
          ::CORBA::Long idFunction,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean getMagCentrali (
          ::net::etech::MagCentraliSeq_out mgCentraliSeq,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean setMagCentrali (
          const ::net::etech::MagCentraliSeq & mgCentraliSeq,
          const ::net::etech::S_APP_LOG & AppLog);

        // TAO_IDL - Generated from
        // be/be_visitor_interface/interface_ch.cpp:140

        virtual ::CORBA::Boolean _is_a (const char *type_id);
        virtual const char* _interface_repository_id (void) const;
        virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
      
      protected:
        // Concrete interface only.
        IMAGEServerConfiguration (void);

        // Concrete non-local interface only.
        IMAGEServerConfiguration (
            ::IOP::IOR *ior,
            TAO_ORB_Core *orb_core);
        
        // Non-local interface only.
        IMAGEServerConfiguration (
            TAO_Stub *objref,
            ::CORBA::Boolean _tao_collocated = false,
            TAO_Abstract_ServantBase *servant = 0,
            TAO_ORB_Core *orb_core = 0);

        virtual ~IMAGEServerConfiguration (void);
      
      private:
        // Private and unimplemented for concrete interfaces.
        IMAGEServerConfiguration (const IMAGEServerConfiguration &);

        void operator= (const IMAGEServerConfiguration &);
      };

      // TAO_IDL - Generated from
      // be/be_interface.cpp:751

#if !defined (_NET_ETECH_ASP_MAGSERVERCONFIGURATION__VAR_OUT_CH_)
#define _NET_ETECH_ASP_MAGSERVERCONFIGURATION__VAR_OUT_CH_

      class MAGServerConfiguration;
      typedef MAGServerConfiguration *MAGServerConfiguration_ptr;

      typedef
        TAO_Objref_Var_T<
            MAGServerConfiguration
          >
        MAGServerConfiguration_var;
      
      typedef
        TAO_Objref_Out_T<
            MAGServerConfiguration
          >
        MAGServerConfiguration_out;

#endif /* end #if !defined */

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:43

      class  MAGServerConfiguration
        : public virtual ::CORBA::Object
      {
      public:
        friend class TAO::Narrow_Utils<MAGServerConfiguration>;

        // TAO_IDL - Generated from
        // be/be_type.cpp:307

        typedef MAGServerConfiguration_ptr _ptr_type;
        typedef MAGServerConfiguration_var _var_type;
        typedef MAGServerConfiguration_out _out_type;

        // The static operations.
        static MAGServerConfiguration_ptr _duplicate (MAGServerConfiguration_ptr obj);

        static void _tao_release (MAGServerConfiguration_ptr obj);

        static MAGServerConfiguration_ptr _narrow (::CORBA::Object_ptr obj);
        static MAGServerConfiguration_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
        static MAGServerConfiguration_ptr _nil (void);

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eID_MOD_MAG = 9;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_UTENTE = 20;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_DATA_EMAIL = 20;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_DATA_DELETE_EMAIL = 20;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_EMAIL_TO = 256;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_EMAIL_CC = 256;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_EMAIL_FROM = 256;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_EMAIL_SUBJECT = 1000;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_EMAIL_ATTACH = 256;

        // TAO_IDL - Generated from
        // be/be_visitor_constant/constant_ch.cpp:38

        static const CORBA::Long eMAX_EMAIL_MSG = 3000;

        virtual ::CORBA::Long checkStatus (
          void);

        virtual ::CORBA::Boolean getEMAIL (
          ::net::etech::E_MAILSeq_out eMailSeq,
          const char * nome_utente,
          ::CORBA::Long num_giorni,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean writeEMAIL (
          const ::net::etech::E_MAILSeq & eMailSeq,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean updateEMAIL (
          const ::net::etech::E_MAILSeq & eMailSeq,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean getID_USER (
          const char * nome_utente,
          ::CORBA::Long_out id_utente,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean getNAME_USER (
          ::CORBA::Long id_utente,
          ::CORBA::String_out nome_utente,
          const ::net::etech::S_APP_LOG & AppLog);

        // TAO_IDL - Generated from
        // be/be_visitor_interface/interface_ch.cpp:140

        virtual ::CORBA::Boolean _is_a (const char *type_id);
        virtual const char* _interface_repository_id (void) const;
        virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
      
      protected:
        // Concrete interface only.
        MAGServerConfiguration (void);

        // Concrete non-local interface only.
        MAGServerConfiguration (
            ::IOP::IOR *ior,
            TAO_ORB_Core *orb_core);
        
        // Non-local interface only.
        MAGServerConfiguration (
            TAO_Stub *objref,
            ::CORBA::Boolean _tao_collocated = false,
            TAO_Abstract_ServantBase *servant = 0,
            TAO_ORB_Core *orb_core = 0);

        virtual ~MAGServerConfiguration (void);
      
      private:
        // Private and unimplemented for concrete interfaces.
        MAGServerConfiguration (const MAGServerConfiguration &);

        void operator= (const MAGServerConfiguration &);
      };

      // TAO_IDL - Generated from
      // be/be_interface.cpp:751

#if !defined (_NET_ETECH_ASP_ASP_ENTRY__VAR_OUT_CH_)
#define _NET_ETECH_ASP_ASP_ENTRY__VAR_OUT_CH_

      class asp_entry;
      typedef asp_entry *asp_entry_ptr;

      typedef
        TAO_Objref_Var_T<
            asp_entry
          >
        asp_entry_var;
      
      typedef
        TAO_Objref_Out_T<
            asp_entry
          >
        asp_entry_out;

#endif /* end #if !defined */

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:43

      class  asp_entry
        : public virtual ::net::etech::ASP::asp_usermanagement_server,
          public virtual ::net::etech::ASP::mdm_configuration_server
      
      {
      public:
        friend class TAO::Narrow_Utils<asp_entry>;

        // TAO_IDL - Generated from
        // be/be_type.cpp:307

        typedef asp_entry_ptr _ptr_type;
        typedef asp_entry_var _var_type;
        typedef asp_entry_out _out_type;

        // The static operations.
        static asp_entry_ptr _duplicate (asp_entry_ptr obj);

        static void _tao_release (asp_entry_ptr obj);

        static asp_entry_ptr _narrow (::CORBA::Object_ptr obj);
        static asp_entry_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
        static asp_entry_ptr _nil (void);

        virtual ::CORBA::Boolean writeAPP_LOG (
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean getPswd (
          const char * nomeNodo,
          const char * typePassword,
          const char * userLogin,
          ::CORBA::String_out userPassword);

        virtual ::CORBA::Boolean dummy (
          void);

        // TAO_IDL - Generated from
        // be/be_visitor_interface/interface_ch.cpp:140

        virtual ::CORBA::Boolean _is_a (const char *type_id);
        virtual const char* _interface_repository_id (void) const;
        virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
      
      protected:
        // Concrete interface only.
        asp_entry (void);

        // Concrete non-local interface only.
        asp_entry (
            ::IOP::IOR *ior,
            TAO_ORB_Core *orb_core);
        
        // Non-local interface only.
        asp_entry (
            TAO_Stub *objref,
            ::CORBA::Boolean _tao_collocated = false,
            TAO_Abstract_ServantBase *servant = 0,
            TAO_ORB_Core *orb_core = 0);

        virtual ~asp_entry (void);
      
      private:
        // Private and unimplemented for concrete interfaces.
        asp_entry (const asp_entry &);

        void operator= (const asp_entry &);
      };

      // TAO_IDL - Generated from
      // be/be_interface.cpp:751

#if !defined (_NET_ETECH_ASP_ASP_ENTRY_OLD__VAR_OUT_CH_)
#define _NET_ETECH_ASP_ASP_ENTRY_OLD__VAR_OUT_CH_

      class asp_entry_old;
      typedef asp_entry_old *asp_entry_old_ptr;

      typedef
        TAO_Objref_Var_T<
            asp_entry_old
          >
        asp_entry_old_var;
      
      typedef
        TAO_Objref_Out_T<
            asp_entry_old
          >
        asp_entry_old_out;

#endif /* end #if !defined */

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:43

      class  asp_entry_old
        : public virtual ::net::etech::ASP::MONITORConfiguration,
          public virtual ::net::etech::ASP::IMAGEServerConfiguration,
          public virtual ::net::etech::ASP::MAGServerConfiguration
      
      {
      public:
        friend class TAO::Narrow_Utils<asp_entry_old>;

        // TAO_IDL - Generated from
        // be/be_type.cpp:307

        typedef asp_entry_old_ptr _ptr_type;
        typedef asp_entry_old_var _var_type;
        typedef asp_entry_old_out _out_type;

        // The static operations.
        static asp_entry_old_ptr _duplicate (asp_entry_old_ptr obj);

        static void _tao_release (asp_entry_old_ptr obj);

        static asp_entry_old_ptr _narrow (::CORBA::Object_ptr obj);
        static asp_entry_old_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
        static asp_entry_old_ptr _nil (void);

        virtual ::CORBA::Boolean writeAPP_LOG (
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean writeMAG_LOG (
          const char * SessionID,
          const ::net::etech::S_APP_LOG & AppLog);

        virtual ::CORBA::Boolean getPswd (
          const char * nomeNodo,
          const char * typePassword,
          const char * userLogin,
          ::CORBA::String_out userPassword);

        virtual void shutDown (
          void);

        // TAO_IDL - Generated from
        // be/be_visitor_interface/interface_ch.cpp:140

        virtual ::CORBA::Boolean _is_a (const char *type_id);
        virtual const char* _interface_repository_id (void) const;
        virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
      
      protected:
        // Concrete interface only.
        asp_entry_old (void);

        // Concrete non-local interface only.
        asp_entry_old (
            ::IOP::IOR *ior,
            TAO_ORB_Core *orb_core);
        
        // Non-local interface only.
        asp_entry_old (
            TAO_Stub *objref,
            ::CORBA::Boolean _tao_collocated = false,
            TAO_Abstract_ServantBase *servant = 0,
            TAO_ORB_Core *orb_core = 0);

        virtual ~asp_entry_old (void);
      
      private:
        // Private and unimplemented for concrete interfaces.
        asp_entry_old (const asp_entry_old &);

        void operator= (const asp_entry_old &);
      };
    
    // TAO_IDL - Generated from
    // be/be_visitor_module/module_ch.cpp:67
    
    } // module net::etech::ASP
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module net::etech

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module net

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::CONF_NODE>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::CONF_NODE,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ConfNodeSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ConfNodeSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::S_ROLE>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::S_ROLE,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::SRoleSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::SRoleSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::S_CLASS>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::S_CLASS,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::SClassSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::SClassSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::S_FUNCTION>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::S_FUNCTION,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::SFunctionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::SFunctionSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::S_LOGIN>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::S_LOGIN,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::SLoginSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::SLoginSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::S_PROFILE>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::S_PROFILE,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::SProfileSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::SProfileSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::S_USER>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::S_USER,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::SUserSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::SUserSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::S_CONFIG_LIB>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::S_CONFIG_LIB,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::S_APP_LOG>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::S_APP_LOG,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::FUNCTION_ENABLED>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::FUNCTION_ENABLED,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::FunctionEnabledSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::FunctionEnabledSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::MONITOR_USER_GRANT>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::MONITOR_USER_GRANT,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:904

  template<>
  class Arg_Traits< ::net::etech::TimeUnits>
    : public
        Basic_Arg_Traits_T<
            ::net::etech::TimeUnits,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:904

  template<>
  class Arg_Traits< ::net::etech::InputItemType>
    : public
        Basic_Arg_Traits_T<
            ::net::etech::InputItemType,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:904

  template<>
  class Arg_Traits< ::net::etech::OutputType>
    : public
        Basic_Arg_Traits_T<
            ::net::etech::OutputType,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::InputItem>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::InputItem,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::InputItemSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::InputItemSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::Polling>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::Polling,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::PollingSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::PollingSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::Output_Type>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::Output_Type,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::OutputTypeSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::OutputTypeSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::SubFuctionGUI>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::SubFuctionGUI,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::ParamValue>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::ParamValue,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ParamValueSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ParamValueSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::ParamSelected>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ParamSelected,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ParamSelectedSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ParamSelectedSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::CounterGUI>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::CounterGUI,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::CounterSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::CounterSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::FontChart>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::FontChart,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::FontChartSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::FontChartSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::Chart>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::Chart,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ChartSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ChartSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::Session>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::Session,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::SessionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::SessionSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::FunctionDefault>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::FunctionDefault,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::IdSubFunctionJoinedSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::IdSubFunctionJoinedSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::SubFunctionJoined>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::SubFunctionJoined,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::SubFunctionJoinedSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::SubFunctionJoinedSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::SubFunction>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::SubFunction,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::SubFunctionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::SubFunctionSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::Descrittore>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::Descrittore,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::DescrittoreSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::DescrittoreSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DispatcherDescription>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DispatcherDescription,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::DispatcherDescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::DispatcherDescriptionSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::FunctionDescription>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::FunctionDescription,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::FunctionDescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::FunctionDescriptionSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::FunctionDescriptionWrapp>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::FunctionDescriptionWrapp,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::SYSTEM_TIME>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::SYSTEM_TIME,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::InputSubFunction>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::InputSubFunction,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::InputSubFunctionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::InputSubFunctionSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::PLUGIN_CONFIG>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::PLUGIN_CONFIG,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_DESC>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_DESC,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::DescSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::DescSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::HELP_LIST>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::HELP_LIST,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::HelpListSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::HelpListSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::EXTERNAL_MODULE>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::EXTERNAL_MODULE,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ModuleSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ModuleSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::SHOW_TYPE_ALARM>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::SHOW_TYPE_ALARM,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ShowTypeAlarmSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ShowTypeAlarmSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::ENABLE_KPI>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::ENABLE_KPI,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ENABLE_KPISeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ENABLE_KPISeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::GRANT_LAYOUT>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::GRANT_LAYOUT,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::GrantLayoutSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::GrantLayoutSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::ALARM_PARAMETER>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::ALARM_PARAMETER,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::AlarmParameterSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::AlarmParameterSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::TYPE_ALARM>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::TYPE_ALARM,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::AlarmSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::AlarmSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::LAYOUT>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::LAYOUT,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::LayoutSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::LayoutSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::LayoutWrapp>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::LayoutWrapp,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::USER_PROFILE_IMG>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::USER_PROFILE_IMG,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::NAZIONE>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::NAZIONE,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::NationSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::NationSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::CONTINENTE>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::CONTINENTE,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ContinentSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ContinentSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::COORDINATE>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::COORDINATE,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::VIEW>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::VIEW,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ViewSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ViewSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::ALARM_SPOT>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::ALARM_SPOT,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::AlarmSpotSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::AlarmSpotSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::SPOT_ELEMENTS>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::SPOT_ELEMENTS,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::SpotElementSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::SpotElementSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::ALARM_ELEMENT>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ALARM_ELEMENT,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::AlarmElementSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::AlarmElementSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::MAG_CENTRALI>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::MAG_CENTRALI,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::MagCentraliSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::MagCentraliSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::S_CONFIG_ADAMS>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::S_CONFIG_ADAMS,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::SConfigSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::SConfigSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::ADAMS_PROFILE_GRANT>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ADAMS_PROFILE_GRANT,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::E_MAIL>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::E_MAIL,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::E_MAILSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::E_MAILSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_ASP_ASP_USERMANAGEMENT_SERVER__ARG_TRAITS_)
#define _NET_ETECH_ASP_ASP_USERMANAGEMENT_SERVER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::net::etech::ASP::asp_usermanagement_server>
    : public
        Object_Arg_Traits_T<
            ::net::etech::ASP::asp_usermanagement_server_ptr,
            ::net::etech::ASP::asp_usermanagement_server_var,
            ::net::etech::ASP::asp_usermanagement_server_out,
            TAO::Objref_Traits<net::etech::ASP::asp_usermanagement_server>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_ASP_MDM_CONFIGURATION_SERVER__ARG_TRAITS_)
#define _NET_ETECH_ASP_MDM_CONFIGURATION_SERVER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::net::etech::ASP::mdm_configuration_server>
    : public
        Object_Arg_Traits_T<
            ::net::etech::ASP::mdm_configuration_server_ptr,
            ::net::etech::ASP::mdm_configuration_server_var,
            ::net::etech::ASP::mdm_configuration_server_out,
            TAO::Objref_Traits<net::etech::ASP::mdm_configuration_server>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_ASP_MONITORCONFIGURATION__ARG_TRAITS_)
#define _NET_ETECH_ASP_MONITORCONFIGURATION__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::net::etech::ASP::MONITORConfiguration>
    : public
        Object_Arg_Traits_T<
            ::net::etech::ASP::MONITORConfiguration_ptr,
            ::net::etech::ASP::MONITORConfiguration_var,
            ::net::etech::ASP::MONITORConfiguration_out,
            TAO::Objref_Traits<net::etech::ASP::MONITORConfiguration>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_ASP_IMAGESERVERCONFIGURATION__ARG_TRAITS_)
#define _NET_ETECH_ASP_IMAGESERVERCONFIGURATION__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::net::etech::ASP::IMAGEServerConfiguration>
    : public
        Object_Arg_Traits_T<
            ::net::etech::ASP::IMAGEServerConfiguration_ptr,
            ::net::etech::ASP::IMAGEServerConfiguration_var,
            ::net::etech::ASP::IMAGEServerConfiguration_out,
            TAO::Objref_Traits<net::etech::ASP::IMAGEServerConfiguration>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_ASP_MAGSERVERCONFIGURATION__ARG_TRAITS_)
#define _NET_ETECH_ASP_MAGSERVERCONFIGURATION__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::net::etech::ASP::MAGServerConfiguration>
    : public
        Object_Arg_Traits_T<
            ::net::etech::ASP::MAGServerConfiguration_ptr,
            ::net::etech::ASP::MAGServerConfiguration_var,
            ::net::etech::ASP::MAGServerConfiguration_out,
            TAO::Objref_Traits<net::etech::ASP::MAGServerConfiguration>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_ASP_ASP_ENTRY__ARG_TRAITS_)
#define _NET_ETECH_ASP_ASP_ENTRY__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::net::etech::ASP::asp_entry>
    : public
        Object_Arg_Traits_T<
            ::net::etech::ASP::asp_entry_ptr,
            ::net::etech::ASP::asp_entry_var,
            ::net::etech::ASP::asp_entry_out,
            TAO::Objref_Traits<net::etech::ASP::asp_entry>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_ASP_ASP_ENTRY_OLD__ARG_TRAITS_)
#define _NET_ETECH_ASP_ASP_ENTRY_OLD__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::net::etech::ASP::asp_entry_old>
    : public
        Object_Arg_Traits_T<
            ::net::etech::ASP::asp_entry_old_ptr,
            ::net::etech::ASP::asp_entry_old_var,
            ::net::etech::ASP::asp_entry_old_out,
            TAO::Objref_Traits<net::etech::ASP::asp_entry_old>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
  template<>
  struct  Array_Traits<
      net::etech::CONF_NODE::_nameNode_forany
    >
  {
    static void free (
        net::etech::CONF_NODE::_nameNode_slice * _tao_slice);
    static net::etech::CONF_NODE::_nameNode_slice * dup (
        const net::etech::CONF_NODE::_nameNode_slice * _tao_slice);
    static void copy (
        net::etech::CONF_NODE::_nameNode_slice * _tao_to,
        const net::etech::CONF_NODE::_nameNode_slice * _tao_from);
    static net::etech::CONF_NODE::_nameNode_slice * alloc (void);
    static void zero (
        net::etech::CONF_NODE::_nameNode_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::CONF_NODE::_descNode_forany
    >
  {
    static void free (
        net::etech::CONF_NODE::_descNode_slice * _tao_slice);
    static net::etech::CONF_NODE::_descNode_slice * dup (
        const net::etech::CONF_NODE::_descNode_slice * _tao_slice);
    static void copy (
        net::etech::CONF_NODE::_descNode_slice * _tao_to,
        const net::etech::CONF_NODE::_descNode_slice * _tao_from);
    static net::etech::CONF_NODE::_descNode_slice * alloc (void);
    static void zero (
        net::etech::CONF_NODE::_descNode_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::CONF_NODE::_tipoNode_forany
    >
  {
    static void free (
        net::etech::CONF_NODE::_tipoNode_slice * _tao_slice);
    static net::etech::CONF_NODE::_tipoNode_slice * dup (
        const net::etech::CONF_NODE::_tipoNode_slice * _tao_slice);
    static void copy (
        net::etech::CONF_NODE::_tipoNode_slice * _tao_to,
        const net::etech::CONF_NODE::_tipoNode_slice * _tao_from);
    static net::etech::CONF_NODE::_tipoNode_slice * alloc (void);
    static void zero (
        net::etech::CONF_NODE::_tipoNode_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_ROLE::_descRole_forany
    >
  {
    static void free (
        net::etech::S_ROLE::_descRole_slice * _tao_slice);
    static net::etech::S_ROLE::_descRole_slice * dup (
        const net::etech::S_ROLE::_descRole_slice * _tao_slice);
    static void copy (
        net::etech::S_ROLE::_descRole_slice * _tao_to,
        const net::etech::S_ROLE::_descRole_slice * _tao_from);
    static net::etech::S_ROLE::_descRole_slice * alloc (void);
    static void zero (
        net::etech::S_ROLE::_descRole_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_CLASS::_descClass_forany
    >
  {
    static void free (
        net::etech::S_CLASS::_descClass_slice * _tao_slice);
    static net::etech::S_CLASS::_descClass_slice * dup (
        const net::etech::S_CLASS::_descClass_slice * _tao_slice);
    static void copy (
        net::etech::S_CLASS::_descClass_slice * _tao_to,
        const net::etech::S_CLASS::_descClass_slice * _tao_from);
    static net::etech::S_CLASS::_descClass_slice * alloc (void);
    static void zero (
        net::etech::S_CLASS::_descClass_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_FUNCTION::_nameFunction_forany
    >
  {
    static void free (
        net::etech::S_FUNCTION::_nameFunction_slice * _tao_slice);
    static net::etech::S_FUNCTION::_nameFunction_slice * dup (
        const net::etech::S_FUNCTION::_nameFunction_slice * _tao_slice);
    static void copy (
        net::etech::S_FUNCTION::_nameFunction_slice * _tao_to,
        const net::etech::S_FUNCTION::_nameFunction_slice * _tao_from);
    static net::etech::S_FUNCTION::_nameFunction_slice * alloc (void);
    static void zero (
        net::etech::S_FUNCTION::_nameFunction_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_FUNCTION::_descFunction_forany
    >
  {
    static void free (
        net::etech::S_FUNCTION::_descFunction_slice * _tao_slice);
    static net::etech::S_FUNCTION::_descFunction_slice * dup (
        const net::etech::S_FUNCTION::_descFunction_slice * _tao_slice);
    static void copy (
        net::etech::S_FUNCTION::_descFunction_slice * _tao_to,
        const net::etech::S_FUNCTION::_descFunction_slice * _tao_from);
    static net::etech::S_FUNCTION::_descFunction_slice * alloc (void);
    static void zero (
        net::etech::S_FUNCTION::_descFunction_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_FUNCTION::_version_forany
    >
  {
    static void free (
        net::etech::S_FUNCTION::_version_slice * _tao_slice);
    static net::etech::S_FUNCTION::_version_slice * dup (
        const net::etech::S_FUNCTION::_version_slice * _tao_slice);
    static void copy (
        net::etech::S_FUNCTION::_version_slice * _tao_to,
        const net::etech::S_FUNCTION::_version_slice * _tao_from);
    static net::etech::S_FUNCTION::_version_slice * alloc (void);
    static void zero (
        net::etech::S_FUNCTION::_version_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_FUNCTION::_releasedData_forany
    >
  {
    static void free (
        net::etech::S_FUNCTION::_releasedData_slice * _tao_slice);
    static net::etech::S_FUNCTION::_releasedData_slice * dup (
        const net::etech::S_FUNCTION::_releasedData_slice * _tao_slice);
    static void copy (
        net::etech::S_FUNCTION::_releasedData_slice * _tao_to,
        const net::etech::S_FUNCTION::_releasedData_slice * _tao_from);
    static net::etech::S_FUNCTION::_releasedData_slice * alloc (void);
    static void zero (
        net::etech::S_FUNCTION::_releasedData_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_FUNCTION::_author_forany
    >
  {
    static void free (
        net::etech::S_FUNCTION::_author_slice * _tao_slice);
    static net::etech::S_FUNCTION::_author_slice * dup (
        const net::etech::S_FUNCTION::_author_slice * _tao_slice);
    static void copy (
        net::etech::S_FUNCTION::_author_slice * _tao_to,
        const net::etech::S_FUNCTION::_author_slice * _tao_from);
    static net::etech::S_FUNCTION::_author_slice * alloc (void);
    static void zero (
        net::etech::S_FUNCTION::_author_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_FUNCTION::_vendor_forany
    >
  {
    static void free (
        net::etech::S_FUNCTION::_vendor_slice * _tao_slice);
    static net::etech::S_FUNCTION::_vendor_slice * dup (
        const net::etech::S_FUNCTION::_vendor_slice * _tao_slice);
    static void copy (
        net::etech::S_FUNCTION::_vendor_slice * _tao_to,
        const net::etech::S_FUNCTION::_vendor_slice * _tao_from);
    static net::etech::S_FUNCTION::_vendor_slice * alloc (void);
    static void zero (
        net::etech::S_FUNCTION::_vendor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_LOGIN::_login_forany
    >
  {
    static void free (
        net::etech::S_LOGIN::_login_slice * _tao_slice);
    static net::etech::S_LOGIN::_login_slice * dup (
        const net::etech::S_LOGIN::_login_slice * _tao_slice);
    static void copy (
        net::etech::S_LOGIN::_login_slice * _tao_to,
        const net::etech::S_LOGIN::_login_slice * _tao_from);
    static net::etech::S_LOGIN::_login_slice * alloc (void);
    static void zero (
        net::etech::S_LOGIN::_login_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_PROFILE::_profile_forany
    >
  {
    static void free (
        net::etech::S_PROFILE::_profile_slice * _tao_slice);
    static net::etech::S_PROFILE::_profile_slice * dup (
        const net::etech::S_PROFILE::_profile_slice * _tao_slice);
    static void copy (
        net::etech::S_PROFILE::_profile_slice * _tao_to,
        const net::etech::S_PROFILE::_profile_slice * _tao_from);
    static net::etech::S_PROFILE::_profile_slice * alloc (void);
    static void zero (
        net::etech::S_PROFILE::_profile_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_PROFILE::_descProfile_forany
    >
  {
    static void free (
        net::etech::S_PROFILE::_descProfile_slice * _tao_slice);
    static net::etech::S_PROFILE::_descProfile_slice * dup (
        const net::etech::S_PROFILE::_descProfile_slice * _tao_slice);
    static void copy (
        net::etech::S_PROFILE::_descProfile_slice * _tao_to,
        const net::etech::S_PROFILE::_descProfile_slice * _tao_from);
    static net::etech::S_PROFILE::_descProfile_slice * alloc (void);
    static void zero (
        net::etech::S_PROFILE::_descProfile_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_USER::_login_forany
    >
  {
    static void free (
        net::etech::S_USER::_login_slice * _tao_slice);
    static net::etech::S_USER::_login_slice * dup (
        const net::etech::S_USER::_login_slice * _tao_slice);
    static void copy (
        net::etech::S_USER::_login_slice * _tao_to,
        const net::etech::S_USER::_login_slice * _tao_from);
    static net::etech::S_USER::_login_slice * alloc (void);
    static void zero (
        net::etech::S_USER::_login_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_USER::_password_forany
    >
  {
    static void free (
        net::etech::S_USER::_password_slice * _tao_slice);
    static net::etech::S_USER::_password_slice * dup (
        const net::etech::S_USER::_password_slice * _tao_slice);
    static void copy (
        net::etech::S_USER::_password_slice * _tao_to,
        const net::etech::S_USER::_password_slice * _tao_from);
    static net::etech::S_USER::_password_slice * alloc (void);
    static void zero (
        net::etech::S_USER::_password_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_USER::_nomeUtente_forany
    >
  {
    static void free (
        net::etech::S_USER::_nomeUtente_slice * _tao_slice);
    static net::etech::S_USER::_nomeUtente_slice * dup (
        const net::etech::S_USER::_nomeUtente_slice * _tao_slice);
    static void copy (
        net::etech::S_USER::_nomeUtente_slice * _tao_to,
        const net::etech::S_USER::_nomeUtente_slice * _tao_from);
    static net::etech::S_USER::_nomeUtente_slice * alloc (void);
    static void zero (
        net::etech::S_USER::_nomeUtente_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_USER::_descUser_forany
    >
  {
    static void free (
        net::etech::S_USER::_descUser_slice * _tao_slice);
    static net::etech::S_USER::_descUser_slice * dup (
        const net::etech::S_USER::_descUser_slice * _tao_slice);
    static void copy (
        net::etech::S_USER::_descUser_slice * _tao_to,
        const net::etech::S_USER::_descUser_slice * _tao_from);
    static net::etech::S_USER::_descUser_slice * alloc (void);
    static void zero (
        net::etech::S_USER::_descUser_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_APP_LOG::_timeStamp_forany
    >
  {
    static void free (
        net::etech::S_APP_LOG::_timeStamp_slice * _tao_slice);
    static net::etech::S_APP_LOG::_timeStamp_slice * dup (
        const net::etech::S_APP_LOG::_timeStamp_slice * _tao_slice);
    static void copy (
        net::etech::S_APP_LOG::_timeStamp_slice * _tao_to,
        const net::etech::S_APP_LOG::_timeStamp_slice * _tao_from);
    static net::etech::S_APP_LOG::_timeStamp_slice * alloc (void);
    static void zero (
        net::etech::S_APP_LOG::_timeStamp_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_APP_LOG::_ip_server_forany
    >
  {
    static void free (
        net::etech::S_APP_LOG::_ip_server_slice * _tao_slice);
    static net::etech::S_APP_LOG::_ip_server_slice * dup (
        const net::etech::S_APP_LOG::_ip_server_slice * _tao_slice);
    static void copy (
        net::etech::S_APP_LOG::_ip_server_slice * _tao_to,
        const net::etech::S_APP_LOG::_ip_server_slice * _tao_from);
    static net::etech::S_APP_LOG::_ip_server_slice * alloc (void);
    static void zero (
        net::etech::S_APP_LOG::_ip_server_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_APP_LOG::_hostname_server_forany
    >
  {
    static void free (
        net::etech::S_APP_LOG::_hostname_server_slice * _tao_slice);
    static net::etech::S_APP_LOG::_hostname_server_slice * dup (
        const net::etech::S_APP_LOG::_hostname_server_slice * _tao_slice);
    static void copy (
        net::etech::S_APP_LOG::_hostname_server_slice * _tao_to,
        const net::etech::S_APP_LOG::_hostname_server_slice * _tao_from);
    static net::etech::S_APP_LOG::_hostname_server_slice * alloc (void);
    static void zero (
        net::etech::S_APP_LOG::_hostname_server_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_APP_LOG::_ip_client_forany
    >
  {
    static void free (
        net::etech::S_APP_LOG::_ip_client_slice * _tao_slice);
    static net::etech::S_APP_LOG::_ip_client_slice * dup (
        const net::etech::S_APP_LOG::_ip_client_slice * _tao_slice);
    static void copy (
        net::etech::S_APP_LOG::_ip_client_slice * _tao_to,
        const net::etech::S_APP_LOG::_ip_client_slice * _tao_from);
    static net::etech::S_APP_LOG::_ip_client_slice * alloc (void);
    static void zero (
        net::etech::S_APP_LOG::_ip_client_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_APP_LOG::_hostname_client_forany
    >
  {
    static void free (
        net::etech::S_APP_LOG::_hostname_client_slice * _tao_slice);
    static net::etech::S_APP_LOG::_hostname_client_slice * dup (
        const net::etech::S_APP_LOG::_hostname_client_slice * _tao_slice);
    static void copy (
        net::etech::S_APP_LOG::_hostname_client_slice * _tao_to,
        const net::etech::S_APP_LOG::_hostname_client_slice * _tao_from);
    static net::etech::S_APP_LOG::_hostname_client_slice * alloc (void);
    static void zero (
        net::etech::S_APP_LOG::_hostname_client_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_APP_LOG::_application_user_forany
    >
  {
    static void free (
        net::etech::S_APP_LOG::_application_user_slice * _tao_slice);
    static net::etech::S_APP_LOG::_application_user_slice * dup (
        const net::etech::S_APP_LOG::_application_user_slice * _tao_slice);
    static void copy (
        net::etech::S_APP_LOG::_application_user_slice * _tao_to,
        const net::etech::S_APP_LOG::_application_user_slice * _tao_from);
    static net::etech::S_APP_LOG::_application_user_slice * alloc (void);
    static void zero (
        net::etech::S_APP_LOG::_application_user_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_APP_LOG::_client_user_forany
    >
  {
    static void free (
        net::etech::S_APP_LOG::_client_user_slice * _tao_slice);
    static net::etech::S_APP_LOG::_client_user_slice * dup (
        const net::etech::S_APP_LOG::_client_user_slice * _tao_slice);
    static void copy (
        net::etech::S_APP_LOG::_client_user_slice * _tao_to,
        const net::etech::S_APP_LOG::_client_user_slice * _tao_from);
    static net::etech::S_APP_LOG::_client_user_slice * alloc (void);
    static void zero (
        net::etech::S_APP_LOG::_client_user_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_APP_LOG::_application_forany
    >
  {
    static void free (
        net::etech::S_APP_LOG::_application_slice * _tao_slice);
    static net::etech::S_APP_LOG::_application_slice * dup (
        const net::etech::S_APP_LOG::_application_slice * _tao_slice);
    static void copy (
        net::etech::S_APP_LOG::_application_slice * _tao_to,
        const net::etech::S_APP_LOG::_application_slice * _tao_from);
    static net::etech::S_APP_LOG::_application_slice * alloc (void);
    static void zero (
        net::etech::S_APP_LOG::_application_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_APP_LOG::_action_forany
    >
  {
    static void free (
        net::etech::S_APP_LOG::_action_slice * _tao_slice);
    static net::etech::S_APP_LOG::_action_slice * dup (
        const net::etech::S_APP_LOG::_action_slice * _tao_slice);
    static void copy (
        net::etech::S_APP_LOG::_action_slice * _tao_to,
        const net::etech::S_APP_LOG::_action_slice * _tao_from);
    static net::etech::S_APP_LOG::_action_slice * alloc (void);
    static void zero (
        net::etech::S_APP_LOG::_action_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_APP_LOG::_action_object_forany
    >
  {
    static void free (
        net::etech::S_APP_LOG::_action_object_slice * _tao_slice);
    static net::etech::S_APP_LOG::_action_object_slice * dup (
        const net::etech::S_APP_LOG::_action_object_slice * _tao_slice);
    static void copy (
        net::etech::S_APP_LOG::_action_object_slice * _tao_to,
        const net::etech::S_APP_LOG::_action_object_slice * _tao_from);
    static net::etech::S_APP_LOG::_action_object_slice * alloc (void);
    static void zero (
        net::etech::S_APP_LOG::_action_object_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_APP_LOG::_parameter_forany
    >
  {
    static void free (
        net::etech::S_APP_LOG::_parameter_slice * _tao_slice);
    static net::etech::S_APP_LOG::_parameter_slice * dup (
        const net::etech::S_APP_LOG::_parameter_slice * _tao_slice);
    static void copy (
        net::etech::S_APP_LOG::_parameter_slice * _tao_to,
        const net::etech::S_APP_LOG::_parameter_slice * _tao_from);
    static net::etech::S_APP_LOG::_parameter_slice * alloc (void);
    static void zero (
        net::etech::S_APP_LOG::_parameter_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_APP_LOG::_successful_forany
    >
  {
    static void free (
        net::etech::S_APP_LOG::_successful_slice * _tao_slice);
    static net::etech::S_APP_LOG::_successful_slice * dup (
        const net::etech::S_APP_LOG::_successful_slice * _tao_slice);
    static void copy (
        net::etech::S_APP_LOG::_successful_slice * _tao_to,
        const net::etech::S_APP_LOG::_successful_slice * _tao_from);
    static net::etech::S_APP_LOG::_successful_slice * alloc (void);
    static void zero (
        net::etech::S_APP_LOG::_successful_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::MONITOR_USER_GRANT::_profile_forany
    >
  {
    static void free (
        net::etech::MONITOR_USER_GRANT::_profile_slice * _tao_slice);
    static net::etech::MONITOR_USER_GRANT::_profile_slice * dup (
        const net::etech::MONITOR_USER_GRANT::_profile_slice * _tao_slice);
    static void copy (
        net::etech::MONITOR_USER_GRANT::_profile_slice * _tao_to,
        const net::etech::MONITOR_USER_GRANT::_profile_slice * _tao_from);
    static net::etech::MONITOR_USER_GRANT::_profile_slice * alloc (void);
    static void zero (
        net::etech::MONITOR_USER_GRANT::_profile_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::InputItem::_inputItemName_forany
    >
  {
    static void free (
        net::etech::InputItem::_inputItemName_slice * _tao_slice);
    static net::etech::InputItem::_inputItemName_slice * dup (
        const net::etech::InputItem::_inputItemName_slice * _tao_slice);
    static void copy (
        net::etech::InputItem::_inputItemName_slice * _tao_to,
        const net::etech::InputItem::_inputItemName_slice * _tao_from);
    static net::etech::InputItem::_inputItemName_slice * alloc (void);
    static void zero (
        net::etech::InputItem::_inputItemName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::InputItem::_alternativeLongName_forany
    >
  {
    static void free (
        net::etech::InputItem::_alternativeLongName_slice * _tao_slice);
    static net::etech::InputItem::_alternativeLongName_slice * dup (
        const net::etech::InputItem::_alternativeLongName_slice * _tao_slice);
    static void copy (
        net::etech::InputItem::_alternativeLongName_slice * _tao_to,
        const net::etech::InputItem::_alternativeLongName_slice * _tao_from);
    static net::etech::InputItem::_alternativeLongName_slice * alloc (void);
    static void zero (
        net::etech::InputItem::_alternativeLongName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::SubFuctionGUI::_color_forany
    >
  {
    static void free (
        net::etech::SubFuctionGUI::_color_slice * _tao_slice);
    static net::etech::SubFuctionGUI::_color_slice * dup (
        const net::etech::SubFuctionGUI::_color_slice * _tao_slice);
    static void copy (
        net::etech::SubFuctionGUI::_color_slice * _tao_to,
        const net::etech::SubFuctionGUI::_color_slice * _tao_from);
    static net::etech::SubFuctionGUI::_color_slice * alloc (void);
    static void zero (
        net::etech::SubFuctionGUI::_color_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ParamValue::_paramValueIn_forany
    >
  {
    static void free (
        net::etech::ParamValue::_paramValueIn_slice * _tao_slice);
    static net::etech::ParamValue::_paramValueIn_slice * dup (
        const net::etech::ParamValue::_paramValueIn_slice * _tao_slice);
    static void copy (
        net::etech::ParamValue::_paramValueIn_slice * _tao_to,
        const net::etech::ParamValue::_paramValueIn_slice * _tao_from);
    static net::etech::ParamValue::_paramValueIn_slice * alloc (void);
    static void zero (
        net::etech::ParamValue::_paramValueIn_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ParamValue::_descValueIn_forany
    >
  {
    static void free (
        net::etech::ParamValue::_descValueIn_slice * _tao_slice);
    static net::etech::ParamValue::_descValueIn_slice * dup (
        const net::etech::ParamValue::_descValueIn_slice * _tao_slice);
    static void copy (
        net::etech::ParamValue::_descValueIn_slice * _tao_to,
        const net::etech::ParamValue::_descValueIn_slice * _tao_from);
    static net::etech::ParamValue::_descValueIn_slice * alloc (void);
    static void zero (
        net::etech::ParamValue::_descValueIn_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FontChart::_nameFont_forany
    >
  {
    static void free (
        net::etech::FontChart::_nameFont_slice * _tao_slice);
    static net::etech::FontChart::_nameFont_slice * dup (
        const net::etech::FontChart::_nameFont_slice * _tao_slice);
    static void copy (
        net::etech::FontChart::_nameFont_slice * _tao_to,
        const net::etech::FontChart::_nameFont_slice * _tao_from);
    static net::etech::FontChart::_nameFont_slice * alloc (void);
    static void zero (
        net::etech::FontChart::_nameFont_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FontChart::_colorFont_forany
    >
  {
    static void free (
        net::etech::FontChart::_colorFont_slice * _tao_slice);
    static net::etech::FontChart::_colorFont_slice * dup (
        const net::etech::FontChart::_colorFont_slice * _tao_slice);
    static void copy (
        net::etech::FontChart::_colorFont_slice * _tao_to,
        const net::etech::FontChart::_colorFont_slice * _tao_from);
    static net::etech::FontChart::_colorFont_slice * alloc (void);
    static void zero (
        net::etech::FontChart::_colorFont_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::Chart::_chartBackgroundColor_forany
    >
  {
    static void free (
        net::etech::Chart::_chartBackgroundColor_slice * _tao_slice);
    static net::etech::Chart::_chartBackgroundColor_slice * dup (
        const net::etech::Chart::_chartBackgroundColor_slice * _tao_slice);
    static void copy (
        net::etech::Chart::_chartBackgroundColor_slice * _tao_to,
        const net::etech::Chart::_chartBackgroundColor_slice * _tao_from);
    static net::etech::Chart::_chartBackgroundColor_slice * alloc (void);
    static void zero (
        net::etech::Chart::_chartBackgroundColor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::Chart::_chartForegroundColor_forany
    >
  {
    static void free (
        net::etech::Chart::_chartForegroundColor_slice * _tao_slice);
    static net::etech::Chart::_chartForegroundColor_slice * dup (
        const net::etech::Chart::_chartForegroundColor_slice * _tao_slice);
    static void copy (
        net::etech::Chart::_chartForegroundColor_slice * _tao_to,
        const net::etech::Chart::_chartForegroundColor_slice * _tao_from);
    static net::etech::Chart::_chartForegroundColor_slice * alloc (void);
    static void zero (
        net::etech::Chart::_chartForegroundColor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::Chart::_titleFontColor_forany
    >
  {
    static void free (
        net::etech::Chart::_titleFontColor_slice * _tao_slice);
    static net::etech::Chart::_titleFontColor_slice * dup (
        const net::etech::Chart::_titleFontColor_slice * _tao_slice);
    static void copy (
        net::etech::Chart::_titleFontColor_slice * _tao_to,
        const net::etech::Chart::_titleFontColor_slice * _tao_from);
    static net::etech::Chart::_titleFontColor_slice * alloc (void);
    static void zero (
        net::etech::Chart::_titleFontColor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::Chart::_legendBackgroundColor_forany
    >
  {
    static void free (
        net::etech::Chart::_legendBackgroundColor_slice * _tao_slice);
    static net::etech::Chart::_legendBackgroundColor_slice * dup (
        const net::etech::Chart::_legendBackgroundColor_slice * _tao_slice);
    static void copy (
        net::etech::Chart::_legendBackgroundColor_slice * _tao_to,
        const net::etech::Chart::_legendBackgroundColor_slice * _tao_from);
    static net::etech::Chart::_legendBackgroundColor_slice * alloc (void);
    static void zero (
        net::etech::Chart::_legendBackgroundColor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::Chart::_legendFontColor_forany
    >
  {
    static void free (
        net::etech::Chart::_legendFontColor_slice * _tao_slice);
    static net::etech::Chart::_legendFontColor_slice * dup (
        const net::etech::Chart::_legendFontColor_slice * _tao_slice);
    static void copy (
        net::etech::Chart::_legendFontColor_slice * _tao_to,
        const net::etech::Chart::_legendFontColor_slice * _tao_from);
    static net::etech::Chart::_legendFontColor_slice * alloc (void);
    static void zero (
        net::etech::Chart::_legendFontColor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::Session::_login_forany
    >
  {
    static void free (
        net::etech::Session::_login_slice * _tao_slice);
    static net::etech::Session::_login_slice * dup (
        const net::etech::Session::_login_slice * _tao_slice);
    static void copy (
        net::etech::Session::_login_slice * _tao_to,
        const net::etech::Session::_login_slice * _tao_from);
    static net::etech::Session::_login_slice * alloc (void);
    static void zero (
        net::etech::Session::_login_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::Session::_descSession_forany
    >
  {
    static void free (
        net::etech::Session::_descSession_slice * _tao_slice);
    static net::etech::Session::_descSession_slice * dup (
        const net::etech::Session::_descSession_slice * _tao_slice);
    static void copy (
        net::etech::Session::_descSession_slice * _tao_to,
        const net::etech::Session::_descSession_slice * _tao_from);
    static net::etech::Session::_descSession_slice * alloc (void);
    static void zero (
        net::etech::Session::_descSession_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDefault::_northCenterStr_forany
    >
  {
    static void free (
        net::etech::FunctionDefault::_northCenterStr_slice * _tao_slice);
    static net::etech::FunctionDefault::_northCenterStr_slice * dup (
        const net::etech::FunctionDefault::_northCenterStr_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDefault::_northCenterStr_slice * _tao_to,
        const net::etech::FunctionDefault::_northCenterStr_slice * _tao_from);
    static net::etech::FunctionDefault::_northCenterStr_slice * alloc (void);
    static void zero (
        net::etech::FunctionDefault::_northCenterStr_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDefault::_northCenterIcon_forany
    >
  {
    static void free (
        net::etech::FunctionDefault::_northCenterIcon_slice * _tao_slice);
    static net::etech::FunctionDefault::_northCenterIcon_slice * dup (
        const net::etech::FunctionDefault::_northCenterIcon_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDefault::_northCenterIcon_slice * _tao_to,
        const net::etech::FunctionDefault::_northCenterIcon_slice * _tao_from);
    static net::etech::FunctionDefault::_northCenterIcon_slice * alloc (void);
    static void zero (
        net::etech::FunctionDefault::_northCenterIcon_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDefault::_northRigthStr_forany
    >
  {
    static void free (
        net::etech::FunctionDefault::_northRigthStr_slice * _tao_slice);
    static net::etech::FunctionDefault::_northRigthStr_slice * dup (
        const net::etech::FunctionDefault::_northRigthStr_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDefault::_northRigthStr_slice * _tao_to,
        const net::etech::FunctionDefault::_northRigthStr_slice * _tao_from);
    static net::etech::FunctionDefault::_northRigthStr_slice * alloc (void);
    static void zero (
        net::etech::FunctionDefault::_northRigthStr_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDefault::_northFontColor_forany
    >
  {
    static void free (
        net::etech::FunctionDefault::_northFontColor_slice * _tao_slice);
    static net::etech::FunctionDefault::_northFontColor_slice * dup (
        const net::etech::FunctionDefault::_northFontColor_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDefault::_northFontColor_slice * _tao_to,
        const net::etech::FunctionDefault::_northFontColor_slice * _tao_from);
    static net::etech::FunctionDefault::_northFontColor_slice * alloc (void);
    static void zero (
        net::etech::FunctionDefault::_northFontColor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDefault::_chartBackgroundColor_forany
    >
  {
    static void free (
        net::etech::FunctionDefault::_chartBackgroundColor_slice * _tao_slice);
    static net::etech::FunctionDefault::_chartBackgroundColor_slice * dup (
        const net::etech::FunctionDefault::_chartBackgroundColor_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDefault::_chartBackgroundColor_slice * _tao_to,
        const net::etech::FunctionDefault::_chartBackgroundColor_slice * _tao_from);
    static net::etech::FunctionDefault::_chartBackgroundColor_slice * alloc (void);
    static void zero (
        net::etech::FunctionDefault::_chartBackgroundColor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDefault::_chartFontColor_forany
    >
  {
    static void free (
        net::etech::FunctionDefault::_chartFontColor_slice * _tao_slice);
    static net::etech::FunctionDefault::_chartFontColor_slice * dup (
        const net::etech::FunctionDefault::_chartFontColor_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDefault::_chartFontColor_slice * _tao_to,
        const net::etech::FunctionDefault::_chartFontColor_slice * _tao_from);
    static net::etech::FunctionDefault::_chartFontColor_slice * alloc (void);
    static void zero (
        net::etech::FunctionDefault::_chartFontColor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDefault::_legendBackgroundColor_forany
    >
  {
    static void free (
        net::etech::FunctionDefault::_legendBackgroundColor_slice * _tao_slice);
    static net::etech::FunctionDefault::_legendBackgroundColor_slice * dup (
        const net::etech::FunctionDefault::_legendBackgroundColor_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDefault::_legendBackgroundColor_slice * _tao_to,
        const net::etech::FunctionDefault::_legendBackgroundColor_slice * _tao_from);
    static net::etech::FunctionDefault::_legendBackgroundColor_slice * alloc (void);
    static void zero (
        net::etech::FunctionDefault::_legendBackgroundColor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDefault::_legendFontColor_forany
    >
  {
    static void free (
        net::etech::FunctionDefault::_legendFontColor_slice * _tao_slice);
    static net::etech::FunctionDefault::_legendFontColor_slice * dup (
        const net::etech::FunctionDefault::_legendFontColor_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDefault::_legendFontColor_slice * _tao_to,
        const net::etech::FunctionDefault::_legendFontColor_slice * _tao_from);
    static net::etech::FunctionDefault::_legendFontColor_slice * alloc (void);
    static void zero (
        net::etech::FunctionDefault::_legendFontColor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDefault::_southFontColor_forany
    >
  {
    static void free (
        net::etech::FunctionDefault::_southFontColor_slice * _tao_slice);
    static net::etech::FunctionDefault::_southFontColor_slice * dup (
        const net::etech::FunctionDefault::_southFontColor_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDefault::_southFontColor_slice * _tao_to,
        const net::etech::FunctionDefault::_southFontColor_slice * _tao_from);
    static net::etech::FunctionDefault::_southFontColor_slice * alloc (void);
    static void zero (
        net::etech::FunctionDefault::_southFontColor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::SubFunctionJoined::_descrizione_forany
    >
  {
    static void free (
        net::etech::SubFunctionJoined::_descrizione_slice * _tao_slice);
    static net::etech::SubFunctionJoined::_descrizione_slice * dup (
        const net::etech::SubFunctionJoined::_descrizione_slice * _tao_slice);
    static void copy (
        net::etech::SubFunctionJoined::_descrizione_slice * _tao_to,
        const net::etech::SubFunctionJoined::_descrizione_slice * _tao_from);
    static net::etech::SubFunctionJoined::_descrizione_slice * alloc (void);
    static void zero (
        net::etech::SubFunctionJoined::_descrizione_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::SubFunction::_subFunctionName_forany
    >
  {
    static void free (
        net::etech::SubFunction::_subFunctionName_slice * _tao_slice);
    static net::etech::SubFunction::_subFunctionName_slice * dup (
        const net::etech::SubFunction::_subFunctionName_slice * _tao_slice);
    static void copy (
        net::etech::SubFunction::_subFunctionName_slice * _tao_to,
        const net::etech::SubFunction::_subFunctionName_slice * _tao_from);
    static net::etech::SubFunction::_subFunctionName_slice * alloc (void);
    static void zero (
        net::etech::SubFunction::_subFunctionName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::SubFunction::_description_forany
    >
  {
    static void free (
        net::etech::SubFunction::_description_slice * _tao_slice);
    static net::etech::SubFunction::_description_slice * dup (
        const net::etech::SubFunction::_description_slice * _tao_slice);
    static void copy (
        net::etech::SubFunction::_description_slice * _tao_to,
        const net::etech::SubFunction::_description_slice * _tao_from);
    static net::etech::SubFunction::_description_slice * alloc (void);
    static void zero (
        net::etech::SubFunction::_description_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::SubFunction::_pollRange_forany
    >
  {
    static void free (
        net::etech::SubFunction::_pollRange_slice * _tao_slice);
    static net::etech::SubFunction::_pollRange_slice * dup (
        const net::etech::SubFunction::_pollRange_slice * _tao_slice);
    static void copy (
        net::etech::SubFunction::_pollRange_slice * _tao_to,
        const net::etech::SubFunction::_pollRange_slice * _tao_from);
    static net::etech::SubFunction::_pollRange_slice * alloc (void);
    static void zero (
        net::etech::SubFunction::_pollRange_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::SubFunction::_outputBaseUnit_forany
    >
  {
    static void free (
        net::etech::SubFunction::_outputBaseUnit_slice * _tao_slice);
    static net::etech::SubFunction::_outputBaseUnit_slice * dup (
        const net::etech::SubFunction::_outputBaseUnit_slice * _tao_slice);
    static void copy (
        net::etech::SubFunction::_outputBaseUnit_slice * _tao_to,
        const net::etech::SubFunction::_outputBaseUnit_slice * _tao_from);
    static net::etech::SubFunction::_outputBaseUnit_slice * alloc (void);
    static void zero (
        net::etech::SubFunction::_outputBaseUnit_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::SubFunction::_minValue_forany
    >
  {
    static void free (
        net::etech::SubFunction::_minValue_slice * _tao_slice);
    static net::etech::SubFunction::_minValue_slice * dup (
        const net::etech::SubFunction::_minValue_slice * _tao_slice);
    static void copy (
        net::etech::SubFunction::_minValue_slice * _tao_to,
        const net::etech::SubFunction::_minValue_slice * _tao_from);
    static net::etech::SubFunction::_minValue_slice * alloc (void);
    static void zero (
        net::etech::SubFunction::_minValue_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::SubFunction::_maxValue_forany
    >
  {
    static void free (
        net::etech::SubFunction::_maxValue_slice * _tao_slice);
    static net::etech::SubFunction::_maxValue_slice * dup (
        const net::etech::SubFunction::_maxValue_slice * _tao_slice);
    static void copy (
        net::etech::SubFunction::_maxValue_slice * _tao_to,
        const net::etech::SubFunction::_maxValue_slice * _tao_from);
    static net::etech::SubFunction::_maxValue_slice * alloc (void);
    static void zero (
        net::etech::SubFunction::_maxValue_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::Descrittore::_descr_forany
    >
  {
    static void free (
        net::etech::Descrittore::_descr_slice * _tao_slice);
    static net::etech::Descrittore::_descr_slice * dup (
        const net::etech::Descrittore::_descr_slice * _tao_slice);
    static void copy (
        net::etech::Descrittore::_descr_slice * _tao_to,
        const net::etech::Descrittore::_descr_slice * _tao_from);
    static net::etech::Descrittore::_descr_slice * alloc (void);
    static void zero (
        net::etech::Descrittore::_descr_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DispatcherDescription::_dispatcherName_forany
    >
  {
    static void free (
        net::etech::DispatcherDescription::_dispatcherName_slice * _tao_slice);
    static net::etech::DispatcherDescription::_dispatcherName_slice * dup (
        const net::etech::DispatcherDescription::_dispatcherName_slice * _tao_slice);
    static void copy (
        net::etech::DispatcherDescription::_dispatcherName_slice * _tao_to,
        const net::etech::DispatcherDescription::_dispatcherName_slice * _tao_from);
    static net::etech::DispatcherDescription::_dispatcherName_slice * alloc (void);
    static void zero (
        net::etech::DispatcherDescription::_dispatcherName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DispatcherDescription::_dispDescription_forany
    >
  {
    static void free (
        net::etech::DispatcherDescription::_dispDescription_slice * _tao_slice);
    static net::etech::DispatcherDescription::_dispDescription_slice * dup (
        const net::etech::DispatcherDescription::_dispDescription_slice * _tao_slice);
    static void copy (
        net::etech::DispatcherDescription::_dispDescription_slice * _tao_to,
        const net::etech::DispatcherDescription::_dispDescription_slice * _tao_from);
    static net::etech::DispatcherDescription::_dispDescription_slice * alloc (void);
    static void zero (
        net::etech::DispatcherDescription::_dispDescription_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDescription::_pluginName_forany
    >
  {
    static void free (
        net::etech::FunctionDescription::_pluginName_slice * _tao_slice);
    static net::etech::FunctionDescription::_pluginName_slice * dup (
        const net::etech::FunctionDescription::_pluginName_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDescription::_pluginName_slice * _tao_to,
        const net::etech::FunctionDescription::_pluginName_slice * _tao_from);
    static net::etech::FunctionDescription::_pluginName_slice * alloc (void);
    static void zero (
        net::etech::FunctionDescription::_pluginName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDescription::_pluginTag_forany
    >
  {
    static void free (
        net::etech::FunctionDescription::_pluginTag_slice * _tao_slice);
    static net::etech::FunctionDescription::_pluginTag_slice * dup (
        const net::etech::FunctionDescription::_pluginTag_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDescription::_pluginTag_slice * _tao_to,
        const net::etech::FunctionDescription::_pluginTag_slice * _tao_from);
    static net::etech::FunctionDescription::_pluginTag_slice * alloc (void);
    static void zero (
        net::etech::FunctionDescription::_pluginTag_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDescription::_dispatcherName_forany
    >
  {
    static void free (
        net::etech::FunctionDescription::_dispatcherName_slice * _tao_slice);
    static net::etech::FunctionDescription::_dispatcherName_slice * dup (
        const net::etech::FunctionDescription::_dispatcherName_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDescription::_dispatcherName_slice * _tao_to,
        const net::etech::FunctionDescription::_dispatcherName_slice * _tao_from);
    static net::etech::FunctionDescription::_dispatcherName_slice * alloc (void);
    static void zero (
        net::etech::FunctionDescription::_dispatcherName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDescription::_logicalFunction_forany
    >
  {
    static void free (
        net::etech::FunctionDescription::_logicalFunction_slice * _tao_slice);
    static net::etech::FunctionDescription::_logicalFunction_slice * dup (
        const net::etech::FunctionDescription::_logicalFunction_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDescription::_logicalFunction_slice * _tao_to,
        const net::etech::FunctionDescription::_logicalFunction_slice * _tao_from);
    static net::etech::FunctionDescription::_logicalFunction_slice * alloc (void);
    static void zero (
        net::etech::FunctionDescription::_logicalFunction_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDescription::_longDescription_forany
    >
  {
    static void free (
        net::etech::FunctionDescription::_longDescription_slice * _tao_slice);
    static net::etech::FunctionDescription::_longDescription_slice * dup (
        const net::etech::FunctionDescription::_longDescription_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDescription::_longDescription_slice * _tao_to,
        const net::etech::FunctionDescription::_longDescription_slice * _tao_from);
    static net::etech::FunctionDescription::_longDescription_slice * alloc (void);
    static void zero (
        net::etech::FunctionDescription::_longDescription_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDescription::_version_forany
    >
  {
    static void free (
        net::etech::FunctionDescription::_version_slice * _tao_slice);
    static net::etech::FunctionDescription::_version_slice * dup (
        const net::etech::FunctionDescription::_version_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDescription::_version_slice * _tao_to,
        const net::etech::FunctionDescription::_version_slice * _tao_from);
    static net::etech::FunctionDescription::_version_slice * alloc (void);
    static void zero (
        net::etech::FunctionDescription::_version_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDescription::_releaseDate_forany
    >
  {
    static void free (
        net::etech::FunctionDescription::_releaseDate_slice * _tao_slice);
    static net::etech::FunctionDescription::_releaseDate_slice * dup (
        const net::etech::FunctionDescription::_releaseDate_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDescription::_releaseDate_slice * _tao_to,
        const net::etech::FunctionDescription::_releaseDate_slice * _tao_from);
    static net::etech::FunctionDescription::_releaseDate_slice * alloc (void);
    static void zero (
        net::etech::FunctionDescription::_releaseDate_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDescription::_vendor_forany
    >
  {
    static void free (
        net::etech::FunctionDescription::_vendor_slice * _tao_slice);
    static net::etech::FunctionDescription::_vendor_slice * dup (
        const net::etech::FunctionDescription::_vendor_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDescription::_vendor_slice * _tao_to,
        const net::etech::FunctionDescription::_vendor_slice * _tao_from);
    static net::etech::FunctionDescription::_vendor_slice * alloc (void);
    static void zero (
        net::etech::FunctionDescription::_vendor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDescription::_author_forany
    >
  {
    static void free (
        net::etech::FunctionDescription::_author_slice * _tao_slice);
    static net::etech::FunctionDescription::_author_slice * dup (
        const net::etech::FunctionDescription::_author_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDescription::_author_slice * _tao_to,
        const net::etech::FunctionDescription::_author_slice * _tao_from);
    static net::etech::FunctionDescription::_author_slice * alloc (void);
    static void zero (
        net::etech::FunctionDescription::_author_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDescription::_sourceData_forany
    >
  {
    static void free (
        net::etech::FunctionDescription::_sourceData_slice * _tao_slice);
    static net::etech::FunctionDescription::_sourceData_slice * dup (
        const net::etech::FunctionDescription::_sourceData_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDescription::_sourceData_slice * _tao_to,
        const net::etech::FunctionDescription::_sourceData_slice * _tao_from);
    static net::etech::FunctionDescription::_sourceData_slice * alloc (void);
    static void zero (
        net::etech::FunctionDescription::_sourceData_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FunctionDescription::_sourceLocation_forany
    >
  {
    static void free (
        net::etech::FunctionDescription::_sourceLocation_slice * _tao_slice);
    static net::etech::FunctionDescription::_sourceLocation_slice * dup (
        const net::etech::FunctionDescription::_sourceLocation_slice * _tao_slice);
    static void copy (
        net::etech::FunctionDescription::_sourceLocation_slice * _tao_to,
        const net::etech::FunctionDescription::_sourceLocation_slice * _tao_from);
    static net::etech::FunctionDescription::_sourceLocation_slice * alloc (void);
    static void zero (
        net::etech::FunctionDescription::_sourceLocation_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::PLUGIN_CONFIG::_pluginName_forany
    >
  {
    static void free (
        net::etech::PLUGIN_CONFIG::_pluginName_slice * _tao_slice);
    static net::etech::PLUGIN_CONFIG::_pluginName_slice * dup (
        const net::etech::PLUGIN_CONFIG::_pluginName_slice * _tao_slice);
    static void copy (
        net::etech::PLUGIN_CONFIG::_pluginName_slice * _tao_to,
        const net::etech::PLUGIN_CONFIG::_pluginName_slice * _tao_from);
    static net::etech::PLUGIN_CONFIG::_pluginName_slice * alloc (void);
    static void zero (
        net::etech::PLUGIN_CONFIG::_pluginName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::PLUGIN_CONFIG::_pluginTag_forany
    >
  {
    static void free (
        net::etech::PLUGIN_CONFIG::_pluginTag_slice * _tao_slice);
    static net::etech::PLUGIN_CONFIG::_pluginTag_slice * dup (
        const net::etech::PLUGIN_CONFIG::_pluginTag_slice * _tao_slice);
    static void copy (
        net::etech::PLUGIN_CONFIG::_pluginTag_slice * _tao_to,
        const net::etech::PLUGIN_CONFIG::_pluginTag_slice * _tao_from);
    static net::etech::PLUGIN_CONFIG::_pluginTag_slice * alloc (void);
    static void zero (
        net::etech::PLUGIN_CONFIG::_pluginTag_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::PLUGIN_CONFIG::_logicalFunction_forany
    >
  {
    static void free (
        net::etech::PLUGIN_CONFIG::_logicalFunction_slice * _tao_slice);
    static net::etech::PLUGIN_CONFIG::_logicalFunction_slice * dup (
        const net::etech::PLUGIN_CONFIG::_logicalFunction_slice * _tao_slice);
    static void copy (
        net::etech::PLUGIN_CONFIG::_logicalFunction_slice * _tao_to,
        const net::etech::PLUGIN_CONFIG::_logicalFunction_slice * _tao_from);
    static net::etech::PLUGIN_CONFIG::_logicalFunction_slice * alloc (void);
    static void zero (
        net::etech::PLUGIN_CONFIG::_logicalFunction_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::PLUGIN_CONFIG::_longDescription_forany
    >
  {
    static void free (
        net::etech::PLUGIN_CONFIG::_longDescription_slice * _tao_slice);
    static net::etech::PLUGIN_CONFIG::_longDescription_slice * dup (
        const net::etech::PLUGIN_CONFIG::_longDescription_slice * _tao_slice);
    static void copy (
        net::etech::PLUGIN_CONFIG::_longDescription_slice * _tao_to,
        const net::etech::PLUGIN_CONFIG::_longDescription_slice * _tao_from);
    static net::etech::PLUGIN_CONFIG::_longDescription_slice * alloc (void);
    static void zero (
        net::etech::PLUGIN_CONFIG::_longDescription_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::PLUGIN_CONFIG::_version_forany
    >
  {
    static void free (
        net::etech::PLUGIN_CONFIG::_version_slice * _tao_slice);
    static net::etech::PLUGIN_CONFIG::_version_slice * dup (
        const net::etech::PLUGIN_CONFIG::_version_slice * _tao_slice);
    static void copy (
        net::etech::PLUGIN_CONFIG::_version_slice * _tao_to,
        const net::etech::PLUGIN_CONFIG::_version_slice * _tao_from);
    static net::etech::PLUGIN_CONFIG::_version_slice * alloc (void);
    static void zero (
        net::etech::PLUGIN_CONFIG::_version_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::PLUGIN_CONFIG::_releaseDate_forany
    >
  {
    static void free (
        net::etech::PLUGIN_CONFIG::_releaseDate_slice * _tao_slice);
    static net::etech::PLUGIN_CONFIG::_releaseDate_slice * dup (
        const net::etech::PLUGIN_CONFIG::_releaseDate_slice * _tao_slice);
    static void copy (
        net::etech::PLUGIN_CONFIG::_releaseDate_slice * _tao_to,
        const net::etech::PLUGIN_CONFIG::_releaseDate_slice * _tao_from);
    static net::etech::PLUGIN_CONFIG::_releaseDate_slice * alloc (void);
    static void zero (
        net::etech::PLUGIN_CONFIG::_releaseDate_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DESC::_valueHelp_forany
    >
  {
    static void free (
        net::etech::DATA_DESC::_valueHelp_slice * _tao_slice);
    static net::etech::DATA_DESC::_valueHelp_slice * dup (
        const net::etech::DATA_DESC::_valueHelp_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DESC::_valueHelp_slice * _tao_to,
        const net::etech::DATA_DESC::_valueHelp_slice * _tao_from);
    static net::etech::DATA_DESC::_valueHelp_slice * alloc (void);
    static void zero (
        net::etech::DATA_DESC::_valueHelp_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DESC::_descHelp_forany
    >
  {
    static void free (
        net::etech::DATA_DESC::_descHelp_slice * _tao_slice);
    static net::etech::DATA_DESC::_descHelp_slice * dup (
        const net::etech::DATA_DESC::_descHelp_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DESC::_descHelp_slice * _tao_to,
        const net::etech::DATA_DESC::_descHelp_slice * _tao_from);
    static net::etech::DATA_DESC::_descHelp_slice * alloc (void);
    static void zero (
        net::etech::DATA_DESC::_descHelp_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::EXTERNAL_MODULE::_NameModule_forany
    >
  {
    static void free (
        net::etech::EXTERNAL_MODULE::_NameModule_slice * _tao_slice);
    static net::etech::EXTERNAL_MODULE::_NameModule_slice * dup (
        const net::etech::EXTERNAL_MODULE::_NameModule_slice * _tao_slice);
    static void copy (
        net::etech::EXTERNAL_MODULE::_NameModule_slice * _tao_to,
        const net::etech::EXTERNAL_MODULE::_NameModule_slice * _tao_from);
    static net::etech::EXTERNAL_MODULE::_NameModule_slice * alloc (void);
    static void zero (
        net::etech::EXTERNAL_MODULE::_NameModule_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::EXTERNAL_MODULE::_Descrizione_forany
    >
  {
    static void free (
        net::etech::EXTERNAL_MODULE::_Descrizione_slice * _tao_slice);
    static net::etech::EXTERNAL_MODULE::_Descrizione_slice * dup (
        const net::etech::EXTERNAL_MODULE::_Descrizione_slice * _tao_slice);
    static void copy (
        net::etech::EXTERNAL_MODULE::_Descrizione_slice * _tao_to,
        const net::etech::EXTERNAL_MODULE::_Descrizione_slice * _tao_from);
    static net::etech::EXTERNAL_MODULE::_Descrizione_slice * alloc (void);
    static void zero (
        net::etech::EXTERNAL_MODULE::_Descrizione_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::GRANT_LAYOUT::_profile_forany
    >
  {
    static void free (
        net::etech::GRANT_LAYOUT::_profile_slice * _tao_slice);
    static net::etech::GRANT_LAYOUT::_profile_slice * dup (
        const net::etech::GRANT_LAYOUT::_profile_slice * _tao_slice);
    static void copy (
        net::etech::GRANT_LAYOUT::_profile_slice * _tao_to,
        const net::etech::GRANT_LAYOUT::_profile_slice * _tao_from);
    static net::etech::GRANT_LAYOUT::_profile_slice * alloc (void);
    static void zero (
        net::etech::GRANT_LAYOUT::_profile_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::GRANT_LAYOUT::_EditOther_forany
    >
  {
    static void free (
        net::etech::GRANT_LAYOUT::_EditOther_slice * _tao_slice);
    static net::etech::GRANT_LAYOUT::_EditOther_slice * dup (
        const net::etech::GRANT_LAYOUT::_EditOther_slice * _tao_slice);
    static void copy (
        net::etech::GRANT_LAYOUT::_EditOther_slice * _tao_to,
        const net::etech::GRANT_LAYOUT::_EditOther_slice * _tao_from);
    static net::etech::GRANT_LAYOUT::_EditOther_slice * alloc (void);
    static void zero (
        net::etech::GRANT_LAYOUT::_EditOther_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::GRANT_LAYOUT::_ShowView_forany
    >
  {
    static void free (
        net::etech::GRANT_LAYOUT::_ShowView_slice * _tao_slice);
    static net::etech::GRANT_LAYOUT::_ShowView_slice * dup (
        const net::etech::GRANT_LAYOUT::_ShowView_slice * _tao_slice);
    static void copy (
        net::etech::GRANT_LAYOUT::_ShowView_slice * _tao_to,
        const net::etech::GRANT_LAYOUT::_ShowView_slice * _tao_from);
    static net::etech::GRANT_LAYOUT::_ShowView_slice * alloc (void);
    static void zero (
        net::etech::GRANT_LAYOUT::_ShowView_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::GRANT_LAYOUT::_EnableExternalModule_forany
    >
  {
    static void free (
        net::etech::GRANT_LAYOUT::_EnableExternalModule_slice * _tao_slice);
    static net::etech::GRANT_LAYOUT::_EnableExternalModule_slice * dup (
        const net::etech::GRANT_LAYOUT::_EnableExternalModule_slice * _tao_slice);
    static void copy (
        net::etech::GRANT_LAYOUT::_EnableExternalModule_slice * _tao_to,
        const net::etech::GRANT_LAYOUT::_EnableExternalModule_slice * _tao_from);
    static net::etech::GRANT_LAYOUT::_EnableExternalModule_slice * alloc (void);
    static void zero (
        net::etech::GRANT_LAYOUT::_EnableExternalModule_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_PARAMETER::_ParamDesc_forany
    >
  {
    static void free (
        net::etech::ALARM_PARAMETER::_ParamDesc_slice * _tao_slice);
    static net::etech::ALARM_PARAMETER::_ParamDesc_slice * dup (
        const net::etech::ALARM_PARAMETER::_ParamDesc_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_PARAMETER::_ParamDesc_slice * _tao_to,
        const net::etech::ALARM_PARAMETER::_ParamDesc_slice * _tao_from);
    static net::etech::ALARM_PARAMETER::_ParamDesc_slice * alloc (void);
    static void zero (
        net::etech::ALARM_PARAMETER::_ParamDesc_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TYPE_ALARM::_AllarmTypeDesc_forany
    >
  {
    static void free (
        net::etech::TYPE_ALARM::_AllarmTypeDesc_slice * _tao_slice);
    static net::etech::TYPE_ALARM::_AllarmTypeDesc_slice * dup (
        const net::etech::TYPE_ALARM::_AllarmTypeDesc_slice * _tao_slice);
    static void copy (
        net::etech::TYPE_ALARM::_AllarmTypeDesc_slice * _tao_to,
        const net::etech::TYPE_ALARM::_AllarmTypeDesc_slice * _tao_from);
    static net::etech::TYPE_ALARM::_AllarmTypeDesc_slice * alloc (void);
    static void zero (
        net::etech::TYPE_ALARM::_AllarmTypeDesc_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TYPE_ALARM::_OnColor_forany
    >
  {
    static void free (
        net::etech::TYPE_ALARM::_OnColor_slice * _tao_slice);
    static net::etech::TYPE_ALARM::_OnColor_slice * dup (
        const net::etech::TYPE_ALARM::_OnColor_slice * _tao_slice);
    static void copy (
        net::etech::TYPE_ALARM::_OnColor_slice * _tao_to,
        const net::etech::TYPE_ALARM::_OnColor_slice * _tao_from);
    static net::etech::TYPE_ALARM::_OnColor_slice * alloc (void);
    static void zero (
        net::etech::TYPE_ALARM::_OnColor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TYPE_ALARM::_OnIconURL_forany
    >
  {
    static void free (
        net::etech::TYPE_ALARM::_OnIconURL_slice * _tao_slice);
    static net::etech::TYPE_ALARM::_OnIconURL_slice * dup (
        const net::etech::TYPE_ALARM::_OnIconURL_slice * _tao_slice);
    static void copy (
        net::etech::TYPE_ALARM::_OnIconURL_slice * _tao_to,
        const net::etech::TYPE_ALARM::_OnIconURL_slice * _tao_from);
    static net::etech::TYPE_ALARM::_OnIconURL_slice * alloc (void);
    static void zero (
        net::etech::TYPE_ALARM::_OnIconURL_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TYPE_ALARM::_OffColor_forany
    >
  {
    static void free (
        net::etech::TYPE_ALARM::_OffColor_slice * _tao_slice);
    static net::etech::TYPE_ALARM::_OffColor_slice * dup (
        const net::etech::TYPE_ALARM::_OffColor_slice * _tao_slice);
    static void copy (
        net::etech::TYPE_ALARM::_OffColor_slice * _tao_to,
        const net::etech::TYPE_ALARM::_OffColor_slice * _tao_from);
    static net::etech::TYPE_ALARM::_OffColor_slice * alloc (void);
    static void zero (
        net::etech::TYPE_ALARM::_OffColor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TYPE_ALARM::_OffIconURL_forany
    >
  {
    static void free (
        net::etech::TYPE_ALARM::_OffIconURL_slice * _tao_slice);
    static net::etech::TYPE_ALARM::_OffIconURL_slice * dup (
        const net::etech::TYPE_ALARM::_OffIconURL_slice * _tao_slice);
    static void copy (
        net::etech::TYPE_ALARM::_OffIconURL_slice * _tao_to,
        const net::etech::TYPE_ALARM::_OffIconURL_slice * _tao_from);
    static net::etech::TYPE_ALARM::_OffIconURL_slice * alloc (void);
    static void zero (
        net::etech::TYPE_ALARM::_OffIconURL_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_Name_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_Name_slice * _tao_slice);
    static net::etech::LAYOUT::_Name_slice * dup (
        const net::etech::LAYOUT::_Name_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_Name_slice * _tao_to,
        const net::etech::LAYOUT::_Name_slice * _tao_from);
    static net::etech::LAYOUT::_Name_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_Name_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_Descrizione_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_Descrizione_slice * _tao_slice);
    static net::etech::LAYOUT::_Descrizione_slice * dup (
        const net::etech::LAYOUT::_Descrizione_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_Descrizione_slice * _tao_to,
        const net::etech::LAYOUT::_Descrizione_slice * _tao_from);
    static net::etech::LAYOUT::_Descrizione_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_Descrizione_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_ConfigServerName_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_ConfigServerName_slice * _tao_slice);
    static net::etech::LAYOUT::_ConfigServerName_slice * dup (
        const net::etech::LAYOUT::_ConfigServerName_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_ConfigServerName_slice * _tao_to,
        const net::etech::LAYOUT::_ConfigServerName_slice * _tao_from);
    static net::etech::LAYOUT::_ConfigServerName_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_ConfigServerName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_AllarmServerName1_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_AllarmServerName1_slice * _tao_slice);
    static net::etech::LAYOUT::_AllarmServerName1_slice * dup (
        const net::etech::LAYOUT::_AllarmServerName1_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_AllarmServerName1_slice * _tao_to,
        const net::etech::LAYOUT::_AllarmServerName1_slice * _tao_from);
    static net::etech::LAYOUT::_AllarmServerName1_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_AllarmServerName1_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_AllarmServerName2_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_AllarmServerName2_slice * _tao_slice);
    static net::etech::LAYOUT::_AllarmServerName2_slice * dup (
        const net::etech::LAYOUT::_AllarmServerName2_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_AllarmServerName2_slice * _tao_to,
        const net::etech::LAYOUT::_AllarmServerName2_slice * _tao_from);
    static net::etech::LAYOUT::_AllarmServerName2_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_AllarmServerName2_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_AllarmServerName3_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_AllarmServerName3_slice * _tao_slice);
    static net::etech::LAYOUT::_AllarmServerName3_slice * dup (
        const net::etech::LAYOUT::_AllarmServerName3_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_AllarmServerName3_slice * _tao_to,
        const net::etech::LAYOUT::_AllarmServerName3_slice * _tao_from);
    static net::etech::LAYOUT::_AllarmServerName3_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_AllarmServerName3_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_AllarmServerName4_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_AllarmServerName4_slice * _tao_slice);
    static net::etech::LAYOUT::_AllarmServerName4_slice * dup (
        const net::etech::LAYOUT::_AllarmServerName4_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_AllarmServerName4_slice * _tao_to,
        const net::etech::LAYOUT::_AllarmServerName4_slice * _tao_from);
    static net::etech::LAYOUT::_AllarmServerName4_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_AllarmServerName4_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_AllarmServerName5_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_AllarmServerName5_slice * _tao_slice);
    static net::etech::LAYOUT::_AllarmServerName5_slice * dup (
        const net::etech::LAYOUT::_AllarmServerName5_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_AllarmServerName5_slice * _tao_to,
        const net::etech::LAYOUT::_AllarmServerName5_slice * _tao_from);
    static net::etech::LAYOUT::_AllarmServerName5_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_AllarmServerName5_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_DetailServerName1_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_DetailServerName1_slice * _tao_slice);
    static net::etech::LAYOUT::_DetailServerName1_slice * dup (
        const net::etech::LAYOUT::_DetailServerName1_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_DetailServerName1_slice * _tao_to,
        const net::etech::LAYOUT::_DetailServerName1_slice * _tao_from);
    static net::etech::LAYOUT::_DetailServerName1_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_DetailServerName1_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_DetailServerName2_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_DetailServerName2_slice * _tao_slice);
    static net::etech::LAYOUT::_DetailServerName2_slice * dup (
        const net::etech::LAYOUT::_DetailServerName2_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_DetailServerName2_slice * _tao_to,
        const net::etech::LAYOUT::_DetailServerName2_slice * _tao_from);
    static net::etech::LAYOUT::_DetailServerName2_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_DetailServerName2_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_DetailServerName3_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_DetailServerName3_slice * _tao_slice);
    static net::etech::LAYOUT::_DetailServerName3_slice * dup (
        const net::etech::LAYOUT::_DetailServerName3_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_DetailServerName3_slice * _tao_to,
        const net::etech::LAYOUT::_DetailServerName3_slice * _tao_from);
    static net::etech::LAYOUT::_DetailServerName3_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_DetailServerName3_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_DetailServerName4_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_DetailServerName4_slice * _tao_slice);
    static net::etech::LAYOUT::_DetailServerName4_slice * dup (
        const net::etech::LAYOUT::_DetailServerName4_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_DetailServerName4_slice * _tao_to,
        const net::etech::LAYOUT::_DetailServerName4_slice * _tao_from);
    static net::etech::LAYOUT::_DetailServerName4_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_DetailServerName4_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_DetailServerName5_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_DetailServerName5_slice * _tao_slice);
    static net::etech::LAYOUT::_DetailServerName5_slice * dup (
        const net::etech::LAYOUT::_DetailServerName5_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_DetailServerName5_slice * _tao_to,
        const net::etech::LAYOUT::_DetailServerName5_slice * _tao_from);
    static net::etech::LAYOUT::_DetailServerName5_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_DetailServerName5_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_MapRepository_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_MapRepository_slice * _tao_slice);
    static net::etech::LAYOUT::_MapRepository_slice * dup (
        const net::etech::LAYOUT::_MapRepository_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_MapRepository_slice * _tao_to,
        const net::etech::LAYOUT::_MapRepository_slice * _tao_from);
    static net::etech::LAYOUT::_MapRepository_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_MapRepository_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_IconRepository_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_IconRepository_slice * _tao_slice);
    static net::etech::LAYOUT::_IconRepository_slice * dup (
        const net::etech::LAYOUT::_IconRepository_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_IconRepository_slice * _tao_to,
        const net::etech::LAYOUT::_IconRepository_slice * _tao_from);
    static net::etech::LAYOUT::_IconRepository_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_IconRepository_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_MapName_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_MapName_slice * _tao_slice);
    static net::etech::LAYOUT::_MapName_slice * dup (
        const net::etech::LAYOUT::_MapName_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_MapName_slice * _tao_to,
        const net::etech::LAYOUT::_MapName_slice * _tao_from);
    static net::etech::LAYOUT::_MapName_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_MapName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_MapDesc_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_MapDesc_slice * _tao_slice);
    static net::etech::LAYOUT::_MapDesc_slice * dup (
        const net::etech::LAYOUT::_MapDesc_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_MapDesc_slice * _tao_to,
        const net::etech::LAYOUT::_MapDesc_slice * _tao_from);
    static net::etech::LAYOUT::_MapDesc_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_MapDesc_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_MapURL_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_MapURL_slice * _tao_slice);
    static net::etech::LAYOUT::_MapURL_slice * dup (
        const net::etech::LAYOUT::_MapURL_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_MapURL_slice * _tao_to,
        const net::etech::LAYOUT::_MapURL_slice * _tao_from);
    static net::etech::LAYOUT::_MapURL_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_MapURL_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_defOffColor_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_defOffColor_slice * _tao_slice);
    static net::etech::LAYOUT::_defOffColor_slice * dup (
        const net::etech::LAYOUT::_defOffColor_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_defOffColor_slice * _tao_to,
        const net::etech::LAYOUT::_defOffColor_slice * _tao_from);
    static net::etech::LAYOUT::_defOffColor_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_defOffColor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::LAYOUT::_defOffIconURL_forany
    >
  {
    static void free (
        net::etech::LAYOUT::_defOffIconURL_slice * _tao_slice);
    static net::etech::LAYOUT::_defOffIconURL_slice * dup (
        const net::etech::LAYOUT::_defOffIconURL_slice * _tao_slice);
    static void copy (
        net::etech::LAYOUT::_defOffIconURL_slice * _tao_to,
        const net::etech::LAYOUT::_defOffIconURL_slice * _tao_from);
    static net::etech::LAYOUT::_defOffIconURL_slice * alloc (void);
    static void zero (
        net::etech::LAYOUT::_defOffIconURL_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::USER_PROFILE_IMG::_profile_forany
    >
  {
    static void free (
        net::etech::USER_PROFILE_IMG::_profile_slice * _tao_slice);
    static net::etech::USER_PROFILE_IMG::_profile_slice * dup (
        const net::etech::USER_PROFILE_IMG::_profile_slice * _tao_slice);
    static void copy (
        net::etech::USER_PROFILE_IMG::_profile_slice * _tao_to,
        const net::etech::USER_PROFILE_IMG::_profile_slice * _tao_from);
    static net::etech::USER_PROFILE_IMG::_profile_slice * alloc (void);
    static void zero (
        net::etech::USER_PROFILE_IMG::_profile_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::NAZIONE::_shortDescription_forany
    >
  {
    static void free (
        net::etech::NAZIONE::_shortDescription_slice * _tao_slice);
    static net::etech::NAZIONE::_shortDescription_slice * dup (
        const net::etech::NAZIONE::_shortDescription_slice * _tao_slice);
    static void copy (
        net::etech::NAZIONE::_shortDescription_slice * _tao_to,
        const net::etech::NAZIONE::_shortDescription_slice * _tao_from);
    static net::etech::NAZIONE::_shortDescription_slice * alloc (void);
    static void zero (
        net::etech::NAZIONE::_shortDescription_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::NAZIONE::_longDescritpion_forany
    >
  {
    static void free (
        net::etech::NAZIONE::_longDescritpion_slice * _tao_slice);
    static net::etech::NAZIONE::_longDescritpion_slice * dup (
        const net::etech::NAZIONE::_longDescritpion_slice * _tao_slice);
    static void copy (
        net::etech::NAZIONE::_longDescritpion_slice * _tao_to,
        const net::etech::NAZIONE::_longDescritpion_slice * _tao_from);
    static net::etech::NAZIONE::_longDescritpion_slice * alloc (void);
    static void zero (
        net::etech::NAZIONE::_longDescritpion_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::NAZIONE::_firstIconURL_forany
    >
  {
    static void free (
        net::etech::NAZIONE::_firstIconURL_slice * _tao_slice);
    static net::etech::NAZIONE::_firstIconURL_slice * dup (
        const net::etech::NAZIONE::_firstIconURL_slice * _tao_slice);
    static void copy (
        net::etech::NAZIONE::_firstIconURL_slice * _tao_to,
        const net::etech::NAZIONE::_firstIconURL_slice * _tao_from);
    static net::etech::NAZIONE::_firstIconURL_slice * alloc (void);
    static void zero (
        net::etech::NAZIONE::_firstIconURL_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::NAZIONE::_secondIconURL_forany
    >
  {
    static void free (
        net::etech::NAZIONE::_secondIconURL_slice * _tao_slice);
    static net::etech::NAZIONE::_secondIconURL_slice * dup (
        const net::etech::NAZIONE::_secondIconURL_slice * _tao_slice);
    static void copy (
        net::etech::NAZIONE::_secondIconURL_slice * _tao_to,
        const net::etech::NAZIONE::_secondIconURL_slice * _tao_from);
    static net::etech::NAZIONE::_secondIconURL_slice * alloc (void);
    static void zero (
        net::etech::NAZIONE::_secondIconURL_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::CONTINENTE::_shortDescription_forany
    >
  {
    static void free (
        net::etech::CONTINENTE::_shortDescription_slice * _tao_slice);
    static net::etech::CONTINENTE::_shortDescription_slice * dup (
        const net::etech::CONTINENTE::_shortDescription_slice * _tao_slice);
    static void copy (
        net::etech::CONTINENTE::_shortDescription_slice * _tao_to,
        const net::etech::CONTINENTE::_shortDescription_slice * _tao_from);
    static net::etech::CONTINENTE::_shortDescription_slice * alloc (void);
    static void zero (
        net::etech::CONTINENTE::_shortDescription_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::CONTINENTE::_longDescritpion_forany
    >
  {
    static void free (
        net::etech::CONTINENTE::_longDescritpion_slice * _tao_slice);
    static net::etech::CONTINENTE::_longDescritpion_slice * dup (
        const net::etech::CONTINENTE::_longDescritpion_slice * _tao_slice);
    static void copy (
        net::etech::CONTINENTE::_longDescritpion_slice * _tao_to,
        const net::etech::CONTINENTE::_longDescritpion_slice * _tao_from);
    static net::etech::CONTINENTE::_longDescritpion_slice * alloc (void);
    static void zero (
        net::etech::CONTINENTE::_longDescritpion_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::CONTINENTE::_firstIconURL_forany
    >
  {
    static void free (
        net::etech::CONTINENTE::_firstIconURL_slice * _tao_slice);
    static net::etech::CONTINENTE::_firstIconURL_slice * dup (
        const net::etech::CONTINENTE::_firstIconURL_slice * _tao_slice);
    static void copy (
        net::etech::CONTINENTE::_firstIconURL_slice * _tao_to,
        const net::etech::CONTINENTE::_firstIconURL_slice * _tao_from);
    static net::etech::CONTINENTE::_firstIconURL_slice * alloc (void);
    static void zero (
        net::etech::CONTINENTE::_firstIconURL_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::CONTINENTE::_secondIconURL_forany
    >
  {
    static void free (
        net::etech::CONTINENTE::_secondIconURL_slice * _tao_slice);
    static net::etech::CONTINENTE::_secondIconURL_slice * dup (
        const net::etech::CONTINENTE::_secondIconURL_slice * _tao_slice);
    static void copy (
        net::etech::CONTINENTE::_secondIconURL_slice * _tao_to,
        const net::etech::CONTINENTE::_secondIconURL_slice * _tao_from);
    static net::etech::CONTINENTE::_secondIconURL_slice * alloc (void);
    static void zero (
        net::etech::CONTINENTE::_secondIconURL_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::VIEW::_shortDescription_forany
    >
  {
    static void free (
        net::etech::VIEW::_shortDescription_slice * _tao_slice);
    static net::etech::VIEW::_shortDescription_slice * dup (
        const net::etech::VIEW::_shortDescription_slice * _tao_slice);
    static void copy (
        net::etech::VIEW::_shortDescription_slice * _tao_to,
        const net::etech::VIEW::_shortDescription_slice * _tao_from);
    static net::etech::VIEW::_shortDescription_slice * alloc (void);
    static void zero (
        net::etech::VIEW::_shortDescription_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::VIEW::_longDescritpion_forany
    >
  {
    static void free (
        net::etech::VIEW::_longDescritpion_slice * _tao_slice);
    static net::etech::VIEW::_longDescritpion_slice * dup (
        const net::etech::VIEW::_longDescritpion_slice * _tao_slice);
    static void copy (
        net::etech::VIEW::_longDescritpion_slice * _tao_to,
        const net::etech::VIEW::_longDescritpion_slice * _tao_from);
    static net::etech::VIEW::_longDescritpion_slice * alloc (void);
    static void zero (
        net::etech::VIEW::_longDescritpion_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_SPOT::_AlarmSpotValue_forany
    >
  {
    static void free (
        net::etech::ALARM_SPOT::_AlarmSpotValue_slice * _tao_slice);
    static net::etech::ALARM_SPOT::_AlarmSpotValue_slice * dup (
        const net::etech::ALARM_SPOT::_AlarmSpotValue_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_SPOT::_AlarmSpotValue_slice * _tao_to,
        const net::etech::ALARM_SPOT::_AlarmSpotValue_slice * _tao_from);
    static net::etech::ALARM_SPOT::_AlarmSpotValue_slice * alloc (void);
    static void zero (
        net::etech::ALARM_SPOT::_AlarmSpotValue_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_SPOT::_shortDescription_forany
    >
  {
    static void free (
        net::etech::ALARM_SPOT::_shortDescription_slice * _tao_slice);
    static net::etech::ALARM_SPOT::_shortDescription_slice * dup (
        const net::etech::ALARM_SPOT::_shortDescription_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_SPOT::_shortDescription_slice * _tao_to,
        const net::etech::ALARM_SPOT::_shortDescription_slice * _tao_from);
    static net::etech::ALARM_SPOT::_shortDescription_slice * alloc (void);
    static void zero (
        net::etech::ALARM_SPOT::_shortDescription_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_SPOT::_longDescritpion_forany
    >
  {
    static void free (
        net::etech::ALARM_SPOT::_longDescritpion_slice * _tao_slice);
    static net::etech::ALARM_SPOT::_longDescritpion_slice * dup (
        const net::etech::ALARM_SPOT::_longDescritpion_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_SPOT::_longDescritpion_slice * _tao_to,
        const net::etech::ALARM_SPOT::_longDescritpion_slice * _tao_from);
    static net::etech::ALARM_SPOT::_longDescritpion_slice * alloc (void);
    static void zero (
        net::etech::ALARM_SPOT::_longDescritpion_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_ELEMENT::_shortDescription_forany
    >
  {
    static void free (
        net::etech::ALARM_ELEMENT::_shortDescription_slice * _tao_slice);
    static net::etech::ALARM_ELEMENT::_shortDescription_slice * dup (
        const net::etech::ALARM_ELEMENT::_shortDescription_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_ELEMENT::_shortDescription_slice * _tao_to,
        const net::etech::ALARM_ELEMENT::_shortDescription_slice * _tao_from);
    static net::etech::ALARM_ELEMENT::_shortDescription_slice * alloc (void);
    static void zero (
        net::etech::ALARM_ELEMENT::_shortDescription_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_ELEMENT::_longDescritpion_forany
    >
  {
    static void free (
        net::etech::ALARM_ELEMENT::_longDescritpion_slice * _tao_slice);
    static net::etech::ALARM_ELEMENT::_longDescritpion_slice * dup (
        const net::etech::ALARM_ELEMENT::_longDescritpion_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_ELEMENT::_longDescritpion_slice * _tao_to,
        const net::etech::ALARM_ELEMENT::_longDescritpion_slice * _tao_from);
    static net::etech::ALARM_ELEMENT::_longDescritpion_slice * alloc (void);
    static void zero (
        net::etech::ALARM_ELEMENT::_longDescritpion_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_ELEMENT::_ovrOffColor_forany
    >
  {
    static void free (
        net::etech::ALARM_ELEMENT::_ovrOffColor_slice * _tao_slice);
    static net::etech::ALARM_ELEMENT::_ovrOffColor_slice * dup (
        const net::etech::ALARM_ELEMENT::_ovrOffColor_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_ELEMENT::_ovrOffColor_slice * _tao_to,
        const net::etech::ALARM_ELEMENT::_ovrOffColor_slice * _tao_from);
    static net::etech::ALARM_ELEMENT::_ovrOffColor_slice * alloc (void);
    static void zero (
        net::etech::ALARM_ELEMENT::_ovrOffColor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_ELEMENT::_offIconURL_forany
    >
  {
    static void free (
        net::etech::ALARM_ELEMENT::_offIconURL_slice * _tao_slice);
    static net::etech::ALARM_ELEMENT::_offIconURL_slice * dup (
        const net::etech::ALARM_ELEMENT::_offIconURL_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_ELEMENT::_offIconURL_slice * _tao_to,
        const net::etech::ALARM_ELEMENT::_offIconURL_slice * _tao_from);
    static net::etech::ALARM_ELEMENT::_offIconURL_slice * alloc (void);
    static void zero (
        net::etech::ALARM_ELEMENT::_offIconURL_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_ELEMENT::_ovrOnColor_forany
    >
  {
    static void free (
        net::etech::ALARM_ELEMENT::_ovrOnColor_slice * _tao_slice);
    static net::etech::ALARM_ELEMENT::_ovrOnColor_slice * dup (
        const net::etech::ALARM_ELEMENT::_ovrOnColor_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_ELEMENT::_ovrOnColor_slice * _tao_to,
        const net::etech::ALARM_ELEMENT::_ovrOnColor_slice * _tao_from);
    static net::etech::ALARM_ELEMENT::_ovrOnColor_slice * alloc (void);
    static void zero (
        net::etech::ALARM_ELEMENT::_ovrOnColor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_ELEMENT::_onIconURL_forany
    >
  {
    static void free (
        net::etech::ALARM_ELEMENT::_onIconURL_slice * _tao_slice);
    static net::etech::ALARM_ELEMENT::_onIconURL_slice * dup (
        const net::etech::ALARM_ELEMENT::_onIconURL_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_ELEMENT::_onIconURL_slice * _tao_to,
        const net::etech::ALARM_ELEMENT::_onIconURL_slice * _tao_from);
    static net::etech::ALARM_ELEMENT::_onIconURL_slice * alloc (void);
    static void zero (
        net::etech::ALARM_ELEMENT::_onIconURL_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::MAG_CENTRALI::_nameCen_forany
    >
  {
    static void free (
        net::etech::MAG_CENTRALI::_nameCen_slice * _tao_slice);
    static net::etech::MAG_CENTRALI::_nameCen_slice * dup (
        const net::etech::MAG_CENTRALI::_nameCen_slice * _tao_slice);
    static void copy (
        net::etech::MAG_CENTRALI::_nameCen_slice * _tao_to,
        const net::etech::MAG_CENTRALI::_nameCen_slice * _tao_from);
    static net::etech::MAG_CENTRALI::_nameCen_slice * alloc (void);
    static void zero (
        net::etech::MAG_CENTRALI::_nameCen_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::MAG_CENTRALI::_descCen_forany
    >
  {
    static void free (
        net::etech::MAG_CENTRALI::_descCen_slice * _tao_slice);
    static net::etech::MAG_CENTRALI::_descCen_slice * dup (
        const net::etech::MAG_CENTRALI::_descCen_slice * _tao_slice);
    static void copy (
        net::etech::MAG_CENTRALI::_descCen_slice * _tao_to,
        const net::etech::MAG_CENTRALI::_descCen_slice * _tao_from);
    static net::etech::MAG_CENTRALI::_descCen_slice * alloc (void);
    static void zero (
        net::etech::MAG_CENTRALI::_descCen_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::S_CONFIG_ADAMS::_configName_forany
    >
  {
    static void free (
        net::etech::S_CONFIG_ADAMS::_configName_slice * _tao_slice);
    static net::etech::S_CONFIG_ADAMS::_configName_slice * dup (
        const net::etech::S_CONFIG_ADAMS::_configName_slice * _tao_slice);
    static void copy (
        net::etech::S_CONFIG_ADAMS::_configName_slice * _tao_to,
        const net::etech::S_CONFIG_ADAMS::_configName_slice * _tao_from);
    static net::etech::S_CONFIG_ADAMS::_configName_slice * alloc (void);
    static void zero (
        net::etech::S_CONFIG_ADAMS::_configName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ADAMS_PROFILE_GRANT::_profile_forany
    >
  {
    static void free (
        net::etech::ADAMS_PROFILE_GRANT::_profile_slice * _tao_slice);
    static net::etech::ADAMS_PROFILE_GRANT::_profile_slice * dup (
        const net::etech::ADAMS_PROFILE_GRANT::_profile_slice * _tao_slice);
    static void copy (
        net::etech::ADAMS_PROFILE_GRANT::_profile_slice * _tao_to,
        const net::etech::ADAMS_PROFILE_GRANT::_profile_slice * _tao_from);
    static net::etech::ADAMS_PROFILE_GRANT::_profile_slice * alloc (void);
    static void zero (
        net::etech::ADAMS_PROFILE_GRANT::_profile_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::E_MAIL::_utente_forany
    >
  {
    static void free (
        net::etech::E_MAIL::_utente_slice * _tao_slice);
    static net::etech::E_MAIL::_utente_slice * dup (
        const net::etech::E_MAIL::_utente_slice * _tao_slice);
    static void copy (
        net::etech::E_MAIL::_utente_slice * _tao_to,
        const net::etech::E_MAIL::_utente_slice * _tao_from);
    static net::etech::E_MAIL::_utente_slice * alloc (void);
    static void zero (
        net::etech::E_MAIL::_utente_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::E_MAIL::_data_email_forany
    >
  {
    static void free (
        net::etech::E_MAIL::_data_email_slice * _tao_slice);
    static net::etech::E_MAIL::_data_email_slice * dup (
        const net::etech::E_MAIL::_data_email_slice * _tao_slice);
    static void copy (
        net::etech::E_MAIL::_data_email_slice * _tao_to,
        const net::etech::E_MAIL::_data_email_slice * _tao_from);
    static net::etech::E_MAIL::_data_email_slice * alloc (void);
    static void zero (
        net::etech::E_MAIL::_data_email_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::E_MAIL::_data_delete_email_forany
    >
  {
    static void free (
        net::etech::E_MAIL::_data_delete_email_slice * _tao_slice);
    static net::etech::E_MAIL::_data_delete_email_slice * dup (
        const net::etech::E_MAIL::_data_delete_email_slice * _tao_slice);
    static void copy (
        net::etech::E_MAIL::_data_delete_email_slice * _tao_to,
        const net::etech::E_MAIL::_data_delete_email_slice * _tao_from);
    static net::etech::E_MAIL::_data_delete_email_slice * alloc (void);
    static void zero (
        net::etech::E_MAIL::_data_delete_email_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::E_MAIL::_email_to_forany
    >
  {
    static void free (
        net::etech::E_MAIL::_email_to_slice * _tao_slice);
    static net::etech::E_MAIL::_email_to_slice * dup (
        const net::etech::E_MAIL::_email_to_slice * _tao_slice);
    static void copy (
        net::etech::E_MAIL::_email_to_slice * _tao_to,
        const net::etech::E_MAIL::_email_to_slice * _tao_from);
    static net::etech::E_MAIL::_email_to_slice * alloc (void);
    static void zero (
        net::etech::E_MAIL::_email_to_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::E_MAIL::_email_cc_forany
    >
  {
    static void free (
        net::etech::E_MAIL::_email_cc_slice * _tao_slice);
    static net::etech::E_MAIL::_email_cc_slice * dup (
        const net::etech::E_MAIL::_email_cc_slice * _tao_slice);
    static void copy (
        net::etech::E_MAIL::_email_cc_slice * _tao_to,
        const net::etech::E_MAIL::_email_cc_slice * _tao_from);
    static net::etech::E_MAIL::_email_cc_slice * alloc (void);
    static void zero (
        net::etech::E_MAIL::_email_cc_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::E_MAIL::_email_from_forany
    >
  {
    static void free (
        net::etech::E_MAIL::_email_from_slice * _tao_slice);
    static net::etech::E_MAIL::_email_from_slice * dup (
        const net::etech::E_MAIL::_email_from_slice * _tao_slice);
    static void copy (
        net::etech::E_MAIL::_email_from_slice * _tao_to,
        const net::etech::E_MAIL::_email_from_slice * _tao_from);
    static net::etech::E_MAIL::_email_from_slice * alloc (void);
    static void zero (
        net::etech::E_MAIL::_email_from_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::E_MAIL::_email_subject_forany
    >
  {
    static void free (
        net::etech::E_MAIL::_email_subject_slice * _tao_slice);
    static net::etech::E_MAIL::_email_subject_slice * dup (
        const net::etech::E_MAIL::_email_subject_slice * _tao_slice);
    static void copy (
        net::etech::E_MAIL::_email_subject_slice * _tao_to,
        const net::etech::E_MAIL::_email_subject_slice * _tao_from);
    static net::etech::E_MAIL::_email_subject_slice * alloc (void);
    static void zero (
        net::etech::E_MAIL::_email_subject_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::E_MAIL::_email_attach_forany
    >
  {
    static void free (
        net::etech::E_MAIL::_email_attach_slice * _tao_slice);
    static net::etech::E_MAIL::_email_attach_slice * dup (
        const net::etech::E_MAIL::_email_attach_slice * _tao_slice);
    static void copy (
        net::etech::E_MAIL::_email_attach_slice * _tao_to,
        const net::etech::E_MAIL::_email_attach_slice * _tao_from);
    static net::etech::E_MAIL::_email_attach_slice * alloc (void);
    static void zero (
        net::etech::E_MAIL::_email_attach_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::E_MAIL::_email_msg_forany
    >
  {
    static void free (
        net::etech::E_MAIL::_email_msg_slice * _tao_slice);
    static net::etech::E_MAIL::_email_msg_slice * dup (
        const net::etech::E_MAIL::_email_msg_slice * _tao_slice);
    static void copy (
        net::etech::E_MAIL::_email_msg_slice * _tao_to,
        const net::etech::E_MAIL::_email_msg_slice * _tao_from);
    static net::etech::E_MAIL::_email_msg_slice * alloc (void);
    static void zero (
        net::etech::E_MAIL::_email_msg_slice * _tao_slice);
  };

#if !defined (_NET_ETECH_ASP_ASP_USERMANAGEMENT_SERVER__TRAITS_)
#define _NET_ETECH_ASP_ASP_USERMANAGEMENT_SERVER__TRAITS_

  template<>
  struct  Objref_Traits< ::net::etech::ASP::asp_usermanagement_server>
  {
    static ::net::etech::ASP::asp_usermanagement_server_ptr duplicate (
        ::net::etech::ASP::asp_usermanagement_server_ptr p);
    static void release (
        ::net::etech::ASP::asp_usermanagement_server_ptr p);
    static ::net::etech::ASP::asp_usermanagement_server_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::net::etech::ASP::asp_usermanagement_server_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_NET_ETECH_ASP_MDM_CONFIGURATION_SERVER__TRAITS_)
#define _NET_ETECH_ASP_MDM_CONFIGURATION_SERVER__TRAITS_

  template<>
  struct  Objref_Traits< ::net::etech::ASP::mdm_configuration_server>
  {
    static ::net::etech::ASP::mdm_configuration_server_ptr duplicate (
        ::net::etech::ASP::mdm_configuration_server_ptr p);
    static void release (
        ::net::etech::ASP::mdm_configuration_server_ptr p);
    static ::net::etech::ASP::mdm_configuration_server_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::net::etech::ASP::mdm_configuration_server_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_NET_ETECH_ASP_MONITORCONFIGURATION__TRAITS_)
#define _NET_ETECH_ASP_MONITORCONFIGURATION__TRAITS_

  template<>
  struct  Objref_Traits< ::net::etech::ASP::MONITORConfiguration>
  {
    static ::net::etech::ASP::MONITORConfiguration_ptr duplicate (
        ::net::etech::ASP::MONITORConfiguration_ptr p);
    static void release (
        ::net::etech::ASP::MONITORConfiguration_ptr p);
    static ::net::etech::ASP::MONITORConfiguration_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::net::etech::ASP::MONITORConfiguration_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_NET_ETECH_ASP_IMAGESERVERCONFIGURATION__TRAITS_)
#define _NET_ETECH_ASP_IMAGESERVERCONFIGURATION__TRAITS_

  template<>
  struct  Objref_Traits< ::net::etech::ASP::IMAGEServerConfiguration>
  {
    static ::net::etech::ASP::IMAGEServerConfiguration_ptr duplicate (
        ::net::etech::ASP::IMAGEServerConfiguration_ptr p);
    static void release (
        ::net::etech::ASP::IMAGEServerConfiguration_ptr p);
    static ::net::etech::ASP::IMAGEServerConfiguration_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::net::etech::ASP::IMAGEServerConfiguration_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_NET_ETECH_ASP_MAGSERVERCONFIGURATION__TRAITS_)
#define _NET_ETECH_ASP_MAGSERVERCONFIGURATION__TRAITS_

  template<>
  struct  Objref_Traits< ::net::etech::ASP::MAGServerConfiguration>
  {
    static ::net::etech::ASP::MAGServerConfiguration_ptr duplicate (
        ::net::etech::ASP::MAGServerConfiguration_ptr p);
    static void release (
        ::net::etech::ASP::MAGServerConfiguration_ptr p);
    static ::net::etech::ASP::MAGServerConfiguration_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::net::etech::ASP::MAGServerConfiguration_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_NET_ETECH_ASP_ASP_ENTRY__TRAITS_)
#define _NET_ETECH_ASP_ASP_ENTRY__TRAITS_

  template<>
  struct  Objref_Traits< ::net::etech::ASP::asp_entry>
  {
    static ::net::etech::ASP::asp_entry_ptr duplicate (
        ::net::etech::ASP::asp_entry_ptr p);
    static void release (
        ::net::etech::ASP::asp_entry_ptr p);
    static ::net::etech::ASP::asp_entry_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::net::etech::ASP::asp_entry_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_NET_ETECH_ASP_ASP_ENTRY_OLD__TRAITS_)
#define _NET_ETECH_ASP_ASP_ENTRY_OLD__TRAITS_

  template<>
  struct  Objref_Traits< ::net::etech::ASP::asp_entry_old>
  {
    static ::net::etech::ASP::asp_entry_old_ptr duplicate (
        ::net::etech::ASP::asp_entry_old_ptr p);
    static void release (
        ::net::etech::ASP::asp_entry_old_ptr p);
    static ::net::etech::ASP::asp_entry_old_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::net::etech::ASP::asp_entry_old_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::CONF_NODE &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::CONF_NODE &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::CONF_NODE::_nameNode_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::CONF_NODE::_nameNode_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::CONF_NODE::_descNode_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::CONF_NODE::_descNode_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::CONF_NODE::_tipoNode_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::CONF_NODE::_tipoNode_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ConfNodeSeq_H_
#define _TAO_CDR_OP_net_etech_ConfNodeSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ConfNodeSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ConfNodeSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ConfNodeSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::S_ROLE &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_ROLE &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_ROLE::_descRole_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_ROLE::_descRole_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_SRoleSeq_H_
#define _TAO_CDR_OP_net_etech_SRoleSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::SRoleSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::SRoleSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_SRoleSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::S_CLASS &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_CLASS &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_CLASS::_descClass_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_CLASS::_descClass_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_SClassSeq_H_
#define _TAO_CDR_OP_net_etech_SClassSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::SClassSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::SClassSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_SClassSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::S_FUNCTION &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_FUNCTION &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_FUNCTION::_nameFunction_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_FUNCTION::_nameFunction_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_FUNCTION::_descFunction_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_FUNCTION::_descFunction_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_FUNCTION::_version_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_FUNCTION::_version_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_FUNCTION::_releasedData_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_FUNCTION::_releasedData_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_FUNCTION::_author_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_FUNCTION::_author_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_FUNCTION::_vendor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_FUNCTION::_vendor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_SFunctionSeq_H_
#define _TAO_CDR_OP_net_etech_SFunctionSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::SFunctionSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::SFunctionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_SFunctionSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::S_LOGIN &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_LOGIN &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_LOGIN::_login_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_LOGIN::_login_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_SLoginSeq_H_
#define _TAO_CDR_OP_net_etech_SLoginSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::SLoginSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::SLoginSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_SLoginSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::S_PROFILE &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_PROFILE &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_PROFILE::_profile_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_PROFILE::_profile_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_PROFILE::_descProfile_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_PROFILE::_descProfile_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_SProfileSeq_H_
#define _TAO_CDR_OP_net_etech_SProfileSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::SProfileSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::SProfileSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_SProfileSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::S_USER &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_USER &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_USER::_login_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_USER::_login_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_USER::_password_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_USER::_password_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_USER::_nomeUtente_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_USER::_nomeUtente_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_USER::_descUser_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_USER::_descUser_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_SUserSeq_H_
#define _TAO_CDR_OP_net_etech_SUserSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::SUserSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::SUserSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_SUserSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::S_CONFIG_LIB &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_CONFIG_LIB &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::S_APP_LOG &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_APP_LOG &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_APP_LOG::_timeStamp_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_APP_LOG::_timeStamp_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_APP_LOG::_ip_server_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_APP_LOG::_ip_server_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_APP_LOG::_hostname_server_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_APP_LOG::_hostname_server_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_APP_LOG::_ip_client_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_APP_LOG::_ip_client_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_APP_LOG::_hostname_client_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_APP_LOG::_hostname_client_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_APP_LOG::_application_user_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_APP_LOG::_application_user_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_APP_LOG::_client_user_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_APP_LOG::_client_user_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_APP_LOG::_application_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_APP_LOG::_application_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_APP_LOG::_action_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_APP_LOG::_action_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_APP_LOG::_action_object_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_APP_LOG::_action_object_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_APP_LOG::_parameter_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_APP_LOG::_parameter_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_APP_LOG::_successful_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_APP_LOG::_successful_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::FUNCTION_ENABLED &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FUNCTION_ENABLED &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_FunctionEnabledSeq_H_
#define _TAO_CDR_OP_net_etech_FunctionEnabledSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::FunctionEnabledSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::FunctionEnabledSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_FunctionEnabledSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::MONITOR_USER_GRANT &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::MONITOR_USER_GRANT &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::MONITOR_USER_GRANT::_profile_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::MONITOR_USER_GRANT::_profile_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, net::etech::TimeUnits _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, net::etech::TimeUnits &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, net::etech::InputItemType _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, net::etech::InputItemType &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, net::etech::OutputType _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, net::etech::OutputType &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::InputItem &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::InputItem &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::InputItem::_inputItemName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::InputItem::_inputItemName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::InputItem::_alternativeLongName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::InputItem::_alternativeLongName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_InputItemSeq_H_
#define _TAO_CDR_OP_net_etech_InputItemSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::InputItemSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::InputItemSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_InputItemSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::Polling &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::Polling &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_PollingSeq_H_
#define _TAO_CDR_OP_net_etech_PollingSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::PollingSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::PollingSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_PollingSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::Output_Type &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::Output_Type &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_OutputTypeSeq_H_
#define _TAO_CDR_OP_net_etech_OutputTypeSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::OutputTypeSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::OutputTypeSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_OutputTypeSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::SubFuctionGUI &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SubFuctionGUI &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::SubFuctionGUI::_color_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SubFuctionGUI::_color_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ParamValue &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ParamValue &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ParamValue::_paramValueIn_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ParamValue::_paramValueIn_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ParamValue::_descValueIn_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ParamValue::_descValueIn_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ParamValueSeq_H_
#define _TAO_CDR_OP_net_etech_ParamValueSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ParamValueSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ParamValueSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ParamValueSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ParamSelected &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ParamSelected &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ParamSelectedSeq_H_
#define _TAO_CDR_OP_net_etech_ParamSelectedSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ParamSelectedSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ParamSelectedSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ParamSelectedSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::CounterGUI &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::CounterGUI &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_CounterSeq_H_
#define _TAO_CDR_OP_net_etech_CounterSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::CounterSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::CounterSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_CounterSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::FontChart &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FontChart &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FontChart::_nameFont_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FontChart::_nameFont_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FontChart::_colorFont_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FontChart::_colorFont_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_FontChartSeq_H_
#define _TAO_CDR_OP_net_etech_FontChartSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::FontChartSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::FontChartSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_FontChartSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::Chart &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::Chart &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::Chart::_chartBackgroundColor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::Chart::_chartBackgroundColor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::Chart::_chartForegroundColor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::Chart::_chartForegroundColor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::Chart::_titleFontColor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::Chart::_titleFontColor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::Chart::_legendBackgroundColor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::Chart::_legendBackgroundColor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::Chart::_legendFontColor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::Chart::_legendFontColor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ChartSeq_H_
#define _TAO_CDR_OP_net_etech_ChartSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ChartSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ChartSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ChartSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::Session &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::Session &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::Session::_login_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::Session::_login_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::Session::_descSession_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::Session::_descSession_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_SessionSeq_H_
#define _TAO_CDR_OP_net_etech_SessionSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::SessionSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::SessionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_SessionSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::FunctionDefault &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDefault &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDefault::_northCenterStr_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDefault::_northCenterStr_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDefault::_northCenterIcon_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDefault::_northCenterIcon_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDefault::_northRigthStr_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDefault::_northRigthStr_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDefault::_northFontColor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDefault::_northFontColor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDefault::_chartBackgroundColor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDefault::_chartBackgroundColor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDefault::_chartFontColor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDefault::_chartFontColor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDefault::_legendBackgroundColor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDefault::_legendBackgroundColor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDefault::_legendFontColor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDefault::_legendFontColor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDefault::_southFontColor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDefault::_southFontColor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_IdSubFunctionJoinedSeq_H_
#define _TAO_CDR_OP_net_etech_IdSubFunctionJoinedSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::IdSubFunctionJoinedSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::IdSubFunctionJoinedSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_IdSubFunctionJoinedSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::SubFunctionJoined &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SubFunctionJoined &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::SubFunctionJoined::_descrizione_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SubFunctionJoined::_descrizione_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_SubFunctionJoinedSeq_H_
#define _TAO_CDR_OP_net_etech_SubFunctionJoinedSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::SubFunctionJoinedSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::SubFunctionJoinedSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_SubFunctionJoinedSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::SubFunction &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SubFunction &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::SubFunction::_subFunctionName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SubFunction::_subFunctionName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::SubFunction::_description_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SubFunction::_description_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::SubFunction::_pollRange_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SubFunction::_pollRange_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::SubFunction::_outputBaseUnit_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SubFunction::_outputBaseUnit_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::SubFunction::_minValue_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SubFunction::_minValue_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::SubFunction::_maxValue_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SubFunction::_maxValue_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_SubFunctionSeq_H_
#define _TAO_CDR_OP_net_etech_SubFunctionSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::SubFunctionSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::SubFunctionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_SubFunctionSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::Descrittore &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::Descrittore &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::Descrittore::_descr_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::Descrittore::_descr_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_DescrittoreSeq_H_
#define _TAO_CDR_OP_net_etech_DescrittoreSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::DescrittoreSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::DescrittoreSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_DescrittoreSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DispatcherDescription &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DispatcherDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DispatcherDescription::_dispatcherName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DispatcherDescription::_dispatcherName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DispatcherDescription::_dispDescription_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DispatcherDescription::_dispDescription_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_DispatcherDescriptionSeq_H_
#define _TAO_CDR_OP_net_etech_DispatcherDescriptionSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::DispatcherDescriptionSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::DispatcherDescriptionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_DispatcherDescriptionSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::FunctionDescription &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDescription &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDescription::_pluginName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDescription::_pluginName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDescription::_pluginTag_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDescription::_pluginTag_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDescription::_dispatcherName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDescription::_dispatcherName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDescription::_logicalFunction_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDescription::_logicalFunction_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDescription::_longDescription_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDescription::_longDescription_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDescription::_version_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDescription::_version_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDescription::_releaseDate_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDescription::_releaseDate_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDescription::_vendor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDescription::_vendor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDescription::_author_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDescription::_author_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDescription::_sourceData_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDescription::_sourceData_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FunctionDescription::_sourceLocation_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDescription::_sourceLocation_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_FunctionDescriptionSeq_H_
#define _TAO_CDR_OP_net_etech_FunctionDescriptionSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::FunctionDescriptionSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::FunctionDescriptionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_FunctionDescriptionSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::FunctionDescriptionWrapp &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FunctionDescriptionWrapp &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::SYSTEM_TIME &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SYSTEM_TIME &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::InputSubFunction &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::InputSubFunction &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_InputSubFunctionSeq_H_
#define _TAO_CDR_OP_net_etech_InputSubFunctionSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::InputSubFunctionSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::InputSubFunctionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_InputSubFunctionSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::PLUGIN_CONFIG &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::PLUGIN_CONFIG &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::PLUGIN_CONFIG::_pluginName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::PLUGIN_CONFIG::_pluginName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::PLUGIN_CONFIG::_pluginTag_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::PLUGIN_CONFIG::_pluginTag_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::PLUGIN_CONFIG::_logicalFunction_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::PLUGIN_CONFIG::_logicalFunction_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::PLUGIN_CONFIG::_longDescription_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::PLUGIN_CONFIG::_longDescription_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::PLUGIN_CONFIG::_version_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::PLUGIN_CONFIG::_version_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::PLUGIN_CONFIG::_releaseDate_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::PLUGIN_CONFIG::_releaseDate_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_DESC &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DESC &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DESC::_valueHelp_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DESC::_valueHelp_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DESC::_descHelp_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DESC::_descHelp_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_DescSeq_H_
#define _TAO_CDR_OP_net_etech_DescSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::DescSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::DescSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_DescSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::HELP_LIST &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::HELP_LIST &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_HelpListSeq_H_
#define _TAO_CDR_OP_net_etech_HelpListSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::HelpListSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::HelpListSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_HelpListSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::EXTERNAL_MODULE &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::EXTERNAL_MODULE &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::EXTERNAL_MODULE::_NameModule_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::EXTERNAL_MODULE::_NameModule_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::EXTERNAL_MODULE::_Descrizione_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::EXTERNAL_MODULE::_Descrizione_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ModuleSeq_H_
#define _TAO_CDR_OP_net_etech_ModuleSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ModuleSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ModuleSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ModuleSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::SHOW_TYPE_ALARM &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SHOW_TYPE_ALARM &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ShowTypeAlarmSeq_H_
#define _TAO_CDR_OP_net_etech_ShowTypeAlarmSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ShowTypeAlarmSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ShowTypeAlarmSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ShowTypeAlarmSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ENABLE_KPI &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ENABLE_KPI &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ENABLE_KPISeq_H_
#define _TAO_CDR_OP_net_etech_ENABLE_KPISeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ENABLE_KPISeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ENABLE_KPISeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ENABLE_KPISeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::GRANT_LAYOUT &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::GRANT_LAYOUT &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::GRANT_LAYOUT::_profile_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::GRANT_LAYOUT::_profile_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::GRANT_LAYOUT::_EditOther_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::GRANT_LAYOUT::_EditOther_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::GRANT_LAYOUT::_ShowView_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::GRANT_LAYOUT::_ShowView_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::GRANT_LAYOUT::_EnableExternalModule_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::GRANT_LAYOUT::_EnableExternalModule_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_GrantLayoutSeq_H_
#define _TAO_CDR_OP_net_etech_GrantLayoutSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::GrantLayoutSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::GrantLayoutSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_GrantLayoutSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ALARM_PARAMETER &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_PARAMETER &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_PARAMETER::_ParamDesc_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_PARAMETER::_ParamDesc_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_AlarmParameterSeq_H_
#define _TAO_CDR_OP_net_etech_AlarmParameterSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::AlarmParameterSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::AlarmParameterSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_AlarmParameterSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::TYPE_ALARM &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TYPE_ALARM &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TYPE_ALARM::_AllarmTypeDesc_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TYPE_ALARM::_AllarmTypeDesc_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TYPE_ALARM::_OnColor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TYPE_ALARM::_OnColor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TYPE_ALARM::_OnIconURL_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TYPE_ALARM::_OnIconURL_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TYPE_ALARM::_OffColor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TYPE_ALARM::_OffColor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TYPE_ALARM::_OffIconURL_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TYPE_ALARM::_OffIconURL_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_AlarmSeq_H_
#define _TAO_CDR_OP_net_etech_AlarmSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::AlarmSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::AlarmSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_AlarmSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::LAYOUT &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_Name_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_Name_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_Descrizione_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_Descrizione_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_ConfigServerName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_ConfigServerName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_AllarmServerName1_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_AllarmServerName1_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_AllarmServerName2_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_AllarmServerName2_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_AllarmServerName3_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_AllarmServerName3_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_AllarmServerName4_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_AllarmServerName4_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_AllarmServerName5_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_AllarmServerName5_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_DetailServerName1_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_DetailServerName1_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_DetailServerName2_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_DetailServerName2_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_DetailServerName3_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_DetailServerName3_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_DetailServerName4_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_DetailServerName4_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_DetailServerName5_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_DetailServerName5_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_MapRepository_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_MapRepository_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_IconRepository_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_IconRepository_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_MapName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_MapName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_MapDesc_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_MapDesc_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_MapURL_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_MapURL_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_defOffColor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_defOffColor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::LAYOUT::_defOffIconURL_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LAYOUT::_defOffIconURL_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_LayoutSeq_H_
#define _TAO_CDR_OP_net_etech_LayoutSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::LayoutSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::LayoutSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_LayoutSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::LayoutWrapp &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::LayoutWrapp &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::USER_PROFILE_IMG &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::USER_PROFILE_IMG &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::USER_PROFILE_IMG::_profile_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::USER_PROFILE_IMG::_profile_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::NAZIONE &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::NAZIONE &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::NAZIONE::_shortDescription_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::NAZIONE::_shortDescription_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::NAZIONE::_longDescritpion_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::NAZIONE::_longDescritpion_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::NAZIONE::_firstIconURL_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::NAZIONE::_firstIconURL_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::NAZIONE::_secondIconURL_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::NAZIONE::_secondIconURL_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_NationSeq_H_
#define _TAO_CDR_OP_net_etech_NationSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::NationSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::NationSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_NationSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::CONTINENTE &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::CONTINENTE &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::CONTINENTE::_shortDescription_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::CONTINENTE::_shortDescription_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::CONTINENTE::_longDescritpion_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::CONTINENTE::_longDescritpion_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::CONTINENTE::_firstIconURL_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::CONTINENTE::_firstIconURL_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::CONTINENTE::_secondIconURL_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::CONTINENTE::_secondIconURL_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ContinentSeq_H_
#define _TAO_CDR_OP_net_etech_ContinentSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ContinentSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ContinentSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ContinentSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::COORDINATE &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::COORDINATE &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::VIEW &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::VIEW &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::VIEW::_shortDescription_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::VIEW::_shortDescription_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::VIEW::_longDescritpion_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::VIEW::_longDescritpion_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ViewSeq_H_
#define _TAO_CDR_OP_net_etech_ViewSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ViewSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ViewSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ViewSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ALARM_SPOT &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_SPOT &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_SPOT::_AlarmSpotValue_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_SPOT::_AlarmSpotValue_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_SPOT::_shortDescription_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_SPOT::_shortDescription_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_SPOT::_longDescritpion_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_SPOT::_longDescritpion_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_AlarmSpotSeq_H_
#define _TAO_CDR_OP_net_etech_AlarmSpotSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::AlarmSpotSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::AlarmSpotSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_AlarmSpotSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::SPOT_ELEMENTS &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SPOT_ELEMENTS &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_SpotElementSeq_H_
#define _TAO_CDR_OP_net_etech_SpotElementSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::SpotElementSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::SpotElementSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_SpotElementSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ALARM_ELEMENT &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_ELEMENT &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_ELEMENT::_shortDescription_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_ELEMENT::_shortDescription_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_ELEMENT::_longDescritpion_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_ELEMENT::_longDescritpion_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_ELEMENT::_ovrOffColor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_ELEMENT::_ovrOffColor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_ELEMENT::_offIconURL_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_ELEMENT::_offIconURL_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_ELEMENT::_ovrOnColor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_ELEMENT::_ovrOnColor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_ELEMENT::_onIconURL_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_ELEMENT::_onIconURL_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_AlarmElementSeq_H_
#define _TAO_CDR_OP_net_etech_AlarmElementSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::AlarmElementSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::AlarmElementSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_AlarmElementSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::MAG_CENTRALI &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::MAG_CENTRALI &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::MAG_CENTRALI::_nameCen_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::MAG_CENTRALI::_nameCen_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::MAG_CENTRALI::_descCen_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::MAG_CENTRALI::_descCen_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_MagCentraliSeq_H_
#define _TAO_CDR_OP_net_etech_MagCentraliSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::MagCentraliSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::MagCentraliSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_MagCentraliSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::S_CONFIG_ADAMS &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_CONFIG_ADAMS &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::S_CONFIG_ADAMS::_configName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::S_CONFIG_ADAMS::_configName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_SConfigSeq_H_
#define _TAO_CDR_OP_net_etech_SConfigSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::SConfigSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::SConfigSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_SConfigSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ADAMS_PROFILE_GRANT &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ADAMS_PROFILE_GRANT &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ADAMS_PROFILE_GRANT::_profile_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ADAMS_PROFILE_GRANT::_profile_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::E_MAIL &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::E_MAIL &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::E_MAIL::_utente_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::E_MAIL::_utente_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::E_MAIL::_data_email_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::E_MAIL::_data_email_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::E_MAIL::_data_delete_email_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::E_MAIL::_data_delete_email_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::E_MAIL::_email_to_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::E_MAIL::_email_to_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::E_MAIL::_email_cc_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::E_MAIL::_email_cc_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::E_MAIL::_email_from_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::E_MAIL::_email_from_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::E_MAIL::_email_subject_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::E_MAIL::_email_subject_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::E_MAIL::_email_attach_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::E_MAIL::_email_attach_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::E_MAIL::_email_msg_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::E_MAIL::_email_msg_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_E_MAILSeq_H_
#define _TAO_CDR_OP_net_etech_E_MAILSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::E_MAILSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::E_MAILSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_E_MAILSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ASP::asp_usermanagement_server_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ASP::asp_usermanagement_server_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ASP::mdm_configuration_server_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ASP::mdm_configuration_server_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ASP::MONITORConfiguration_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ASP::MONITORConfiguration_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ASP::IMAGEServerConfiguration_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ASP::IMAGEServerConfiguration_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ASP::MAGServerConfiguration_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ASP::MAGServerConfiguration_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ASP::asp_entry_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ASP::asp_entry_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ASP::asp_entry_old_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ASP::asp_entry_old_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "aspC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */


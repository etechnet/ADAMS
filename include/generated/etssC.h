// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2.4
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL_ETSSC_ZRNQVH_H_
#define _TAO_IDL_ETSSC_ZRNQVH_H_

#include /**/ "ace/pre.h"


#include /**/ <ace/config-all.h>

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include <tao/ORB.h>
#include <tao/SystemException.h>
#include <tao/Basic_Types.h>
#include <tao/ORB_Constants.h>
#include <tao/Object.h>
#include <tao/String_Manager_T.h>
#include <tao/Sequence_T.h>
#include <tao/Objref_VarOut_T.h>
#include <tao/Seq_Var_T.h>
#include <tao/Seq_Out_T.h>
#include <tao/VarOut_T.h>
#include <tao/Array_VarOut_T.h>
#include <tao/Arg_Traits_T.h>
#include <tao/Basic_Arguments.h>
#include <tao/Special_Basic_Arguments.h>
#include <tao/Any_Insert_Policy_T.h>
#include <tao/Basic_Argument_T.h>
#include <tao/Fixed_Size_Argument_T.h>
#include <tao/Var_Size_Argument_T.h>
#include <tao/Object_Argument_T.h>
#include <tao/Special_Basic_Arguments.h>
#include <tao/UB_String_Arguments.h>
#include <tao/Fixed_Array_Argument_T.h>
#include <tao/Var_Array_Argument_T.h>
#include /**/ <tao/Version.h>
#include /**/ <tao/Versioned_Namespace.h>

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_root/root_ch.cpp:160
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace net
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace etech
  {

    // TAO_IDL - Generated from
    // be/be_visitor_enum/enum_ch.cpp:47

    enum ticketsTypes
    {
      workingTicket,
      closedTicket
    };

    typedef ticketsTypes &ticketsTypes_out;

    // TAO_IDL - Generated from
    // be/be_visitor_enum/enum_ch.cpp:47

    enum ValuesTypes
    {
      VoidValue,
      NumericValue,
      StringValue,
      BooleanValue
    };

    typedef ValuesTypes &ValuesTypes_out;

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DETAIL_VALUES;

    typedef
      ::TAO_Fixed_Var_T<
          DETAIL_VALUES
        >
      DETAIL_VALUES_var;

    typedef
      DETAIL_VALUES &
      DETAIL_VALUES_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DETAIL_VALUES
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DETAIL_VALUES_var _var_type;
      typedef DETAIL_VALUES_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _descr[101];
      typedef ::CORBA::Char _descr_slice;
      struct _descr_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _descr,
            _descr_slice,
            _descr_tag
          >
        _descr_forany;

      static _descr_slice *
      _descr_alloc (void);

      static void
      _descr_free (
          _descr_slice *_tao_slice);
      
      static _descr_slice *
      _descr_dup (
          const _descr_slice *_tao_slice);
      
      static void
      _descr_copy (
          _descr_slice *_tao_to,
          const _descr_slice *_tao_from
        );

      _descr descr;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _fieldValue[101];
      typedef ::CORBA::Char _fieldValue_slice;
      struct _fieldValue_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _fieldValue,
            _fieldValue_slice,
            _fieldValue_tag
          >
        _fieldValue_forany;

      static _fieldValue_slice *
      _fieldValue_alloc (void);

      static void
      _fieldValue_free (
          _fieldValue_slice *_tao_slice);
      
      static _fieldValue_slice *
      _fieldValue_dup (
          const _fieldValue_slice *_tao_slice);
      
      static void
      _fieldValue_copy (
          _fieldValue_slice *_tao_to,
          const _fieldValue_slice *_tao_from
        );

      _fieldValue fieldValue;
      net::etech::ValuesTypes imgValueType;
      ::CORBA::Boolean highlight;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_DETAILVALUESSEQ_CH_)
#define _NET_ETECH_DETAILVALUESSEQ_CH_

    class DetailValuesSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          DetailValuesSeq
        >
      DetailValuesSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          DetailValuesSeq
        >
      DetailValuesSeq_out;

    class  DetailValuesSeq
      : public
          ::TAO::unbounded_value_sequence<
              DETAIL_VALUES
            >
    {
    public:
      DetailValuesSeq (void);
      DetailValuesSeq ( ::CORBA::ULong max);
      DetailValuesSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DETAIL_VALUES* buffer,
        ::CORBA::Boolean release = false);
      DetailValuesSeq (const DetailValuesSeq &);
      virtual ~DetailValuesSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DetailValuesSeq_var _var_type;
      typedef DetailValuesSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DETAIL_EVENTS;

    typedef
      ::TAO_Var_Var_T<
          DETAIL_EVENTS
        >
      DETAIL_EVENTS_var;

    typedef
      ::TAO_Out_T<
          DETAIL_EVENTS
        >
      DETAIL_EVENTS_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DETAIL_EVENTS
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DETAIL_EVENTS_var _var_type;
      typedef DETAIL_EVENTS_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _eventName[81];
      typedef ::CORBA::Char _eventName_slice;
      struct _eventName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _eventName,
            _eventName_slice,
            _eventName_tag
          >
        _eventName_forany;

      static _eventName_slice *
      _eventName_alloc (void);

      static void
      _eventName_free (
          _eventName_slice *_tao_slice);
      
      static _eventName_slice *
      _eventName_dup (
          const _eventName_slice *_tao_slice);
      
      static void
      _eventName_copy (
          _eventName_slice *_tao_to,
          const _eventName_slice *_tao_from
        );

      _eventName eventName;
      ::CORBA::Long linkRef;
      net::etech::DetailValuesSeq eventValues;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_DETAILEVENTSSEQ_CH_)
#define _NET_ETECH_DETAILEVENTSSEQ_CH_

    class DetailEventsSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          DetailEventsSeq
        >
      DetailEventsSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          DetailEventsSeq
        >
      DetailEventsSeq_out;

    class  DetailEventsSeq
      : public
          ::TAO::unbounded_value_sequence<
              DETAIL_EVENTS
            >
    {
    public:
      DetailEventsSeq (void);
      DetailEventsSeq ( ::CORBA::ULong max);
      DetailEventsSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DETAIL_EVENTS* buffer,
        ::CORBA::Boolean release = false);
      DetailEventsSeq (const DetailEventsSeq &);
      virtual ~DetailEventsSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DetailEventsSeq_var _var_type;
      typedef DetailEventsSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DETAIL_INFO;

    typedef
      ::TAO_Var_Var_T<
          DETAIL_INFO
        >
      DETAIL_INFO_var;

    typedef
      ::TAO_Out_T<
          DETAIL_INFO
        >
      DETAIL_INFO_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DETAIL_INFO
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DETAIL_INFO_var _var_type;
      typedef DETAIL_INFO_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _groupLabel[81];
      typedef ::CORBA::Char _groupLabel_slice;
      struct _groupLabel_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _groupLabel,
            _groupLabel_slice,
            _groupLabel_tag
          >
        _groupLabel_forany;

      static _groupLabel_slice *
      _groupLabel_alloc (void);

      static void
      _groupLabel_free (
          _groupLabel_slice *_tao_slice);
      
      static _groupLabel_slice *
      _groupLabel_dup (
          const _groupLabel_slice *_tao_slice);
      
      static void
      _groupLabel_copy (
          _groupLabel_slice *_tao_to,
          const _groupLabel_slice *_tao_from
        );

      _groupLabel groupLabel;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _groupIconUrl[81];
      typedef ::CORBA::Char _groupIconUrl_slice;
      struct _groupIconUrl_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _groupIconUrl,
            _groupIconUrl_slice,
            _groupIconUrl_tag
          >
        _groupIconUrl_forany;

      static _groupIconUrl_slice *
      _groupIconUrl_alloc (void);

      static void
      _groupIconUrl_free (
          _groupIconUrl_slice *_tao_slice);
      
      static _groupIconUrl_slice *
      _groupIconUrl_dup (
          const _groupIconUrl_slice *_tao_slice);
      
      static void
      _groupIconUrl_copy (
          _groupIconUrl_slice *_tao_to,
          const _groupIconUrl_slice *_tao_from
        );

      _groupIconUrl groupIconUrl;
      net::etech::DetailEventsSeq info;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_DETAILINFOSEQ_CH_)
#define _NET_ETECH_DETAILINFOSEQ_CH_

    class DetailInfoSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          DetailInfoSeq
        >
      DetailInfoSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          DetailInfoSeq
        >
      DetailInfoSeq_out;

    class  DetailInfoSeq
      : public
          ::TAO::unbounded_value_sequence<
              DETAIL_INFO
            >
    {
    public:
      DetailInfoSeq (void);
      DetailInfoSeq ( ::CORBA::ULong max);
      DetailInfoSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DETAIL_INFO* buffer,
        ::CORBA::Boolean release = false);
      DetailInfoSeq (const DetailInfoSeq &);
      virtual ~DetailInfoSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DetailInfoSeq_var _var_type;
      typedef DetailInfoSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_SLINKS_CH_)
#define _NET_ETECH_SLINKS_CH_

    class sLinks;

    typedef
      ::TAO_FixedSeq_Var_T<
          sLinks
        >
      sLinks_var;

    typedef
      ::TAO_Seq_Out_T<
          sLinks
        >
      sLinks_out;

    class  sLinks
      : public
          ::TAO::unbounded_value_sequence<
              ::CORBA::Long
            >
    {
    public:
      sLinks (void);
      sLinks ( ::CORBA::ULong max);
      sLinks (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Long* buffer,
        ::CORBA::Boolean release = false);
      sLinks (const sLinks &);
      virtual ~sLinks (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef sLinks_var _var_type;
      typedef sLinks_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_STYPEID_CH_)
#define _NET_ETECH_STYPEID_CH_

    class sTypeId;

    typedef
      ::TAO_FixedSeq_Var_T<
          sTypeId
        >
      sTypeId_var;

    typedef
      ::TAO_Seq_Out_T<
          sTypeId
        >
      sTypeId_out;

    class  sTypeId
      : public
          ::TAO::unbounded_value_sequence<
              ::CORBA::Short
            >
    {
    public:
      sTypeId (void);
      sTypeId ( ::CORBA::ULong max);
      sTypeId (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Short* buffer,
        ::CORBA::Boolean release = false);
      sTypeId (const sTypeId &);
      virtual ~sTypeId (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef sTypeId_var _var_type;
      typedef sTypeId_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DETAIL_REQUEST;

    typedef
      ::TAO_Var_Var_T<
          DETAIL_REQUEST
        >
      DETAIL_REQUEST_var;

    typedef
      ::TAO_Out_T<
          DETAIL_REQUEST
        >
      DETAIL_REQUEST_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DETAIL_REQUEST
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DETAIL_REQUEST_var _var_type;
      typedef DETAIL_REQUEST_out _out_type;
      
      ::CORBA::Short alarmFamilyId;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _elementCode[21];
      typedef ::CORBA::Char _elementCode_slice;
      struct _elementCode_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _elementCode,
            _elementCode_slice,
            _elementCode_tag
          >
        _elementCode_forany;

      static _elementCode_slice *
      _elementCode_alloc (void);

      static void
      _elementCode_free (
          _elementCode_slice *_tao_slice);
      
      static _elementCode_slice *
      _elementCode_dup (
          const _elementCode_slice *_tao_slice);
      
      static void
      _elementCode_copy (
          _elementCode_slice *_tao_to,
          const _elementCode_slice *_tao_from
        );

      _elementCode elementCode;
      net::etech::sTypeId alarmTypeId;
      net::etech::sLinks links;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_FEP_IMAGE;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_FEP_IMAGE
        >
      DATA_FEP_IMAGE_var;

    typedef
      DATA_FEP_IMAGE &
      DATA_FEP_IMAGE_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_FEP_IMAGE
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_FEP_IMAGE_var _var_type;
      typedef DATA_FEP_IMAGE_out _out_type;
      
      ::CORBA::Long IdFep;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _Description[50];
      typedef ::CORBA::Char _Description_slice;
      struct _Description_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _Description,
            _Description_slice,
            _Description_tag
          >
        _Description_forany;

      static _Description_slice *
      _Description_alloc (void);

      static void
      _Description_free (
          _Description_slice *_tao_slice);
      
      static _Description_slice *
      _Description_dup (
          const _Description_slice *_tao_slice);
      
      static void
      _Description_copy (
          _Description_slice *_tao_to,
          const _Description_slice *_tao_from
        );

      _Description Description;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_FEPIMAGESEQ_CH_)
#define _NET_ETECH_FEPIMAGESEQ_CH_

    class FepImageSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          FepImageSeq
        >
      FepImageSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          FepImageSeq
        >
      FepImageSeq_out;

    class  FepImageSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_FEP_IMAGE
            >
    {
    public:
      FepImageSeq (void);
      FepImageSeq ( ::CORBA::ULong max);
      FepImageSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_FEP_IMAGE* buffer,
        ::CORBA::Boolean release = false);
      FepImageSeq (const FepImageSeq &);
      virtual ~FepImageSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef FepImageSeq_var _var_type;
      typedef FepImageSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct EXTRA_INFO;

    typedef
      ::TAO_Fixed_Var_T<
          EXTRA_INFO
        >
      EXTRA_INFO_var;

    typedef
      EXTRA_INFO &
      EXTRA_INFO_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  EXTRA_INFO
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef EXTRA_INFO_var _var_type;
      typedef EXTRA_INFO_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _einfo[161];
      typedef ::CORBA::Char _einfo_slice;
      struct _einfo_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _einfo,
            _einfo_slice,
            _einfo_tag
          >
        _einfo_forany;

      static _einfo_slice *
      _einfo_alloc (void);

      static void
      _einfo_free (
          _einfo_slice *_tao_slice);
      
      static _einfo_slice *
      _einfo_dup (
          const _einfo_slice *_tao_slice);
      
      static void
      _einfo_copy (
          _einfo_slice *_tao_to,
          const _einfo_slice *_tao_from
        );

      _einfo einfo;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_EXTRAINFOSEQ_CH_)
#define _NET_ETECH_EXTRAINFOSEQ_CH_

    class ExtraInfoSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ExtraInfoSeq
        >
      ExtraInfoSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ExtraInfoSeq
        >
      ExtraInfoSeq_out;

    class  ExtraInfoSeq
      : public
          ::TAO::unbounded_value_sequence<
              EXTRA_INFO
            >
    {
    public:
      ExtraInfoSeq (void);
      ExtraInfoSeq ( ::CORBA::ULong max);
      ExtraInfoSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        EXTRA_INFO* buffer,
        ::CORBA::Boolean release = false);
      ExtraInfoSeq (const ExtraInfoSeq &);
      virtual ~ExtraInfoSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ExtraInfoSeq_var _var_type;
      typedef ExtraInfoSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_LINKSEQ_CH_)
#define _NET_ETECH_LINKSEQ_CH_

    class LinkSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          LinkSeq
        >
      LinkSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          LinkSeq
        >
      LinkSeq_out;

    class  LinkSeq
      : public
          ::TAO::unbounded_value_sequence<
              ::CORBA::Long
            >
    {
    public:
      LinkSeq (void);
      LinkSeq ( ::CORBA::ULong max);
      LinkSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Long* buffer,
        ::CORBA::Boolean release = false);
      LinkSeq (const LinkSeq &);
      virtual ~LinkSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef LinkSeq_var _var_type;
      typedef LinkSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ALARM_INFO;

    typedef
      ::TAO_Var_Var_T<
          ALARM_INFO
        >
      ALARM_INFO_var;

    typedef
      ::TAO_Out_T<
          ALARM_INFO
        >
      ALARM_INFO_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  ALARM_INFO
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ALARM_INFO_var _var_type;
      typedef ALARM_INFO_out _out_type;
      
      ::CORBA::Long elementType;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _elementCode[21];
      typedef ::CORBA::Char _elementCode_slice;
      struct _elementCode_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _elementCode,
            _elementCode_slice,
            _elementCode_tag
          >
        _elementCode_forany;

      static _elementCode_slice *
      _elementCode_alloc (void);

      static void
      _elementCode_free (
          _elementCode_slice *_tao_slice);
      
      static _elementCode_slice *
      _elementCode_dup (
          const _elementCode_slice *_tao_slice);
      
      static void
      _elementCode_copy (
          _elementCode_slice *_tao_to,
          const _elementCode_slice *_tao_from
        );

      _elementCode elementCode;
      ::CORBA::Long status;
      ::CORBA::Long codeTypeAlarm;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _dateTime[15];
      typedef ::CORBA::Char _dateTime_slice;
      struct _dateTime_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _dateTime,
            _dateTime_slice,
            _dateTime_tag
          >
        _dateTime_forany;

      static _dateTime_slice *
      _dateTime_alloc (void);

      static void
      _dateTime_free (
          _dateTime_slice *_tao_slice);
      
      static _dateTime_slice *
      _dateTime_dup (
          const _dateTime_slice *_tao_slice);
      
      static void
      _dateTime_copy (
          _dateTime_slice *_tao_to,
          const _dateTime_slice *_tao_from
        );

      _dateTime dateTime;
      net::etech::LinkSeq link;
      net::etech::ExtraInfoSeq extraInfo;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_ALARMINFOSEQ_CH_)
#define _NET_ETECH_ALARMINFOSEQ_CH_

    class AlarmInfoSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          AlarmInfoSeq
        >
      AlarmInfoSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          AlarmInfoSeq
        >
      AlarmInfoSeq_out;

    class  AlarmInfoSeq
      : public
          ::TAO::unbounded_value_sequence<
              ALARM_INFO
            >
    {
    public:
      AlarmInfoSeq (void);
      AlarmInfoSeq ( ::CORBA::ULong max);
      AlarmInfoSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ALARM_INFO* buffer,
        ::CORBA::Boolean release = false);
      AlarmInfoSeq (const AlarmInfoSeq &);
      virtual ~AlarmInfoSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef AlarmInfoSeq_var _var_type;
      typedef AlarmInfoSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct TTMRECORDIMAGE;

    typedef
      ::TAO_Fixed_Var_T<
          TTMRECORDIMAGE
        >
      TTMRECORDIMAGE_var;

    typedef
      TTMRECORDIMAGE &
      TTMRECORDIMAGE_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  TTMRECORDIMAGE
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef TTMRECORDIMAGE_var _var_type;
      typedef TTMRECORDIMAGE_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_flag_cart[2];
      typedef ::CORBA::Char _ttm_flag_cart_slice;
      struct _ttm_flag_cart_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_flag_cart,
            _ttm_flag_cart_slice,
            _ttm_flag_cart_tag
          >
        _ttm_flag_cart_forany;

      static _ttm_flag_cart_slice *
      _ttm_flag_cart_alloc (void);

      static void
      _ttm_flag_cart_free (
          _ttm_flag_cart_slice *_tao_slice);
      
      static _ttm_flag_cart_slice *
      _ttm_flag_cart_dup (
          const _ttm_flag_cart_slice *_tao_slice);
      
      static void
      _ttm_flag_cart_copy (
          _ttm_flag_cart_slice *_tao_to,
          const _ttm_flag_cart_slice *_tao_from
        );

      _ttm_flag_cart ttm_flag_cart;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_operator[9];
      typedef ::CORBA::Char _ttm_operator_slice;
      struct _ttm_operator_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_operator,
            _ttm_operator_slice,
            _ttm_operator_tag
          >
        _ttm_operator_forany;

      static _ttm_operator_slice *
      _ttm_operator_alloc (void);

      static void
      _ttm_operator_free (
          _ttm_operator_slice *_tao_slice);
      
      static _ttm_operator_slice *
      _ttm_operator_dup (
          const _ttm_operator_slice *_tao_slice);
      
      static void
      _ttm_operator_copy (
          _ttm_operator_slice *_tao_to,
          const _ttm_operator_slice *_tao_from
        );

      _ttm_operator ttm_operator;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_type[5];
      typedef ::CORBA::Char _ttm_type_slice;
      struct _ttm_type_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_type,
            _ttm_type_slice,
            _ttm_type_tag
          >
        _ttm_type_forany;

      static _ttm_type_slice *
      _ttm_type_alloc (void);

      static void
      _ttm_type_free (
          _ttm_type_slice *_tao_slice);
      
      static _ttm_type_slice *
      _ttm_type_dup (
          const _ttm_type_slice *_tao_slice);
      
      static void
      _ttm_type_copy (
          _ttm_type_slice *_tao_to,
          const _ttm_type_slice *_tao_from
        );

      _ttm_type ttm_type;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_traffic[11];
      typedef ::CORBA::Char _ttm_traffic_slice;
      struct _ttm_traffic_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_traffic,
            _ttm_traffic_slice,
            _ttm_traffic_tag
          >
        _ttm_traffic_forany;

      static _ttm_traffic_slice *
      _ttm_traffic_alloc (void);

      static void
      _ttm_traffic_free (
          _ttm_traffic_slice *_tao_slice);
      
      static _ttm_traffic_slice *
      _ttm_traffic_dup (
          const _ttm_traffic_slice *_tao_slice);
      
      static void
      _ttm_traffic_copy (
          _ttm_traffic_slice *_tao_to,
          const _ttm_traffic_slice *_tao_from
        );

      _ttm_traffic ttm_traffic;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_code[6];
      typedef ::CORBA::Char _ttm_code_slice;
      struct _ttm_code_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_code,
            _ttm_code_slice,
            _ttm_code_tag
          >
        _ttm_code_forany;

      static _ttm_code_slice *
      _ttm_code_alloc (void);

      static void
      _ttm_code_free (
          _ttm_code_slice *_tao_slice);
      
      static _ttm_code_slice *
      _ttm_code_dup (
          const _ttm_code_slice *_tao_slice);
      
      static void
      _ttm_code_copy (
          _ttm_code_slice *_tao_to,
          const _ttm_code_slice *_tao_from
        );

      _ttm_code ttm_code;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_flagdest[2];
      typedef ::CORBA::Char _ttm_flagdest_slice;
      struct _ttm_flagdest_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_flagdest,
            _ttm_flagdest_slice,
            _ttm_flagdest_tag
          >
        _ttm_flagdest_forany;

      static _ttm_flagdest_slice *
      _ttm_flagdest_alloc (void);

      static void
      _ttm_flagdest_free (
          _ttm_flagdest_slice *_tao_slice);
      
      static _ttm_flagdest_slice *
      _ttm_flagdest_dup (
          const _ttm_flagdest_slice *_tao_slice);
      
      static void
      _ttm_flagdest_copy (
          _ttm_flagdest_slice *_tao_to,
          const _ttm_flagdest_slice *_tao_from
        );

      _ttm_flagdest ttm_flagdest;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_ac[6];
      typedef ::CORBA::Char _ttm_ac_slice;
      struct _ttm_ac_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_ac,
            _ttm_ac_slice,
            _ttm_ac_tag
          >
        _ttm_ac_forany;

      static _ttm_ac_slice *
      _ttm_ac_alloc (void);

      static void
      _ttm_ac_free (
          _ttm_ac_slice *_tao_slice);
      
      static _ttm_ac_slice *
      _ttm_ac_dup (
          const _ttm_ac_slice *_tao_slice);
      
      static void
      _ttm_ac_copy (
          _ttm_ac_slice *_tao_to,
          const _ttm_ac_slice *_tao_from
        );

      _ttm_ac ttm_ac;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_iag[5];
      typedef ::CORBA::Char _ttm_iag_slice;
      struct _ttm_iag_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_iag,
            _ttm_iag_slice,
            _ttm_iag_tag
          >
        _ttm_iag_forany;

      static _ttm_iag_slice *
      _ttm_iag_alloc (void);

      static void
      _ttm_iag_free (
          _ttm_iag_slice *_tao_slice);
      
      static _ttm_iag_slice *
      _ttm_iag_dup (
          const _ttm_iag_slice *_tao_slice);
      
      static void
      _ttm_iag_copy (
          _ttm_iag_slice *_tao_to,
          const _ttm_iag_slice *_tao_from
        );

      _ttm_iag ttm_iag;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_node[4];
      typedef ::CORBA::Char _ttm_node_slice;
      struct _ttm_node_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_node,
            _ttm_node_slice,
            _ttm_node_tag
          >
        _ttm_node_forany;

      static _ttm_node_slice *
      _ttm_node_alloc (void);

      static void
      _ttm_node_free (
          _ttm_node_slice *_tao_slice);
      
      static _ttm_node_slice *
      _ttm_node_dup (
          const _ttm_node_slice *_tao_slice);
      
      static void
      _ttm_node_copy (
          _ttm_node_slice *_tao_to,
          const _ttm_node_slice *_tao_from
        );

      _ttm_node ttm_node;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_city[13];
      typedef ::CORBA::Char _ttm_city_slice;
      struct _ttm_city_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_city,
            _ttm_city_slice,
            _ttm_city_tag
          >
        _ttm_city_forany;

      static _ttm_city_slice *
      _ttm_city_alloc (void);

      static void
      _ttm_city_free (
          _ttm_city_slice *_tao_slice);
      
      static _ttm_city_slice *
      _ttm_city_dup (
          const _ttm_city_slice *_tao_slice);
      
      static void
      _ttm_city_copy (
          _ttm_city_slice *_tao_to,
          const _ttm_city_slice *_tao_from
        );

      _ttm_city ttm_city;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_alarmon[25];
      typedef ::CORBA::Char _ttm_alarmon_slice;
      struct _ttm_alarmon_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_alarmon,
            _ttm_alarmon_slice,
            _ttm_alarmon_tag
          >
        _ttm_alarmon_forany;

      static _ttm_alarmon_slice *
      _ttm_alarmon_alloc (void);

      static void
      _ttm_alarmon_free (
          _ttm_alarmon_slice *_tao_slice);
      
      static _ttm_alarmon_slice *
      _ttm_alarmon_dup (
          const _ttm_alarmon_slice *_tao_slice);
      
      static void
      _ttm_alarmon_copy (
          _ttm_alarmon_slice *_tao_to,
          const _ttm_alarmon_slice *_tao_from
        );

      _ttm_alarmon ttm_alarmon;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_idalarm[256];
      typedef ::CORBA::Char _ttm_idalarm_slice;
      struct _ttm_idalarm_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_idalarm,
            _ttm_idalarm_slice,
            _ttm_idalarm_tag
          >
        _ttm_idalarm_forany;

      static _ttm_idalarm_slice *
      _ttm_idalarm_alloc (void);

      static void
      _ttm_idalarm_free (
          _ttm_idalarm_slice *_tao_slice);
      
      static _ttm_idalarm_slice *
      _ttm_idalarm_dup (
          const _ttm_idalarm_slice *_tao_slice);
      
      static void
      _ttm_idalarm_copy (
          _ttm_idalarm_slice *_tao_to,
          const _ttm_idalarm_slice *_tao_from
        );

      _ttm_idalarm ttm_idalarm;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_anomaly[50][51];
      typedef ::CORBA::Char _ttm_anomaly_slice[51];
      struct _ttm_anomaly_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_anomaly,
            _ttm_anomaly_slice,
            _ttm_anomaly_tag
          >
        _ttm_anomaly_forany;

      static _ttm_anomaly_slice *
      _ttm_anomaly_alloc (void);

      static void
      _ttm_anomaly_free (
          _ttm_anomaly_slice *_tao_slice);
      
      static _ttm_anomaly_slice *
      _ttm_anomaly_dup (
          const _ttm_anomaly_slice *_tao_slice);
      
      static void
      _ttm_anomaly_copy (
          _ttm_anomaly_slice *_tao_to,
          const _ttm_anomaly_slice *_tao_from
        );

      _ttm_anomaly ttm_anomaly;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_origin[51];
      typedef ::CORBA::Char _ttm_origin_slice;
      struct _ttm_origin_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_origin,
            _ttm_origin_slice,
            _ttm_origin_tag
          >
        _ttm_origin_forany;

      static _ttm_origin_slice *
      _ttm_origin_alloc (void);

      static void
      _ttm_origin_free (
          _ttm_origin_slice *_tao_slice);
      
      static _ttm_origin_slice *
      _ttm_origin_dup (
          const _ttm_origin_slice *_tao_slice);
      
      static void
      _ttm_origin_copy (
          _ttm_origin_slice *_tao_to,
          const _ttm_origin_slice *_tao_from
        );

      _ttm_origin ttm_origin;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_anomaly_c[50][11];
      typedef ::CORBA::Char _ttm_anomaly_c_slice[11];
      struct _ttm_anomaly_c_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_anomaly_c,
            _ttm_anomaly_c_slice,
            _ttm_anomaly_c_tag
          >
        _ttm_anomaly_c_forany;

      static _ttm_anomaly_c_slice *
      _ttm_anomaly_c_alloc (void);

      static void
      _ttm_anomaly_c_free (
          _ttm_anomaly_c_slice *_tao_slice);
      
      static _ttm_anomaly_c_slice *
      _ttm_anomaly_c_dup (
          const _ttm_anomaly_c_slice *_tao_slice);
      
      static void
      _ttm_anomaly_c_copy (
          _ttm_anomaly_c_slice *_tao_to,
          const _ttm_anomaly_c_slice *_tao_from
        );

      _ttm_anomaly_c ttm_anomaly_c;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_origin_c[11];
      typedef ::CORBA::Char _ttm_origin_c_slice;
      struct _ttm_origin_c_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_origin_c,
            _ttm_origin_c_slice,
            _ttm_origin_c_tag
          >
        _ttm_origin_c_forany;

      static _ttm_origin_c_slice *
      _ttm_origin_c_alloc (void);

      static void
      _ttm_origin_c_free (
          _ttm_origin_c_slice *_tao_slice);
      
      static _ttm_origin_c_slice *
      _ttm_origin_c_dup (
          const _ttm_origin_c_slice *_tao_slice);
      
      static void
      _ttm_origin_c_copy (
          _ttm_origin_c_slice *_tao_to,
          const _ttm_origin_c_slice *_tao_from
        );

      _ttm_origin_c ttm_origin_c;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_ticketdate[25];
      typedef ::CORBA::Char _ttm_ticketdate_slice;
      struct _ttm_ticketdate_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_ticketdate,
            _ttm_ticketdate_slice,
            _ttm_ticketdate_tag
          >
        _ttm_ticketdate_forany;

      static _ttm_ticketdate_slice *
      _ttm_ticketdate_alloc (void);

      static void
      _ttm_ticketdate_free (
          _ttm_ticketdate_slice *_tao_slice);
      
      static _ttm_ticketdate_slice *
      _ttm_ticketdate_dup (
          const _ttm_ticketdate_slice *_tao_slice);
      
      static void
      _ttm_ticketdate_copy (
          _ttm_ticketdate_slice *_tao_to,
          const _ttm_ticketdate_slice *_tao_from
        );

      _ttm_ticketdate ttm_ticketdate;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttm_flaggen[2];
      typedef ::CORBA::Char _ttm_flaggen_slice;
      struct _ttm_flaggen_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttm_flaggen,
            _ttm_flaggen_slice,
            _ttm_flaggen_tag
          >
        _ttm_flaggen_forany;

      static _ttm_flaggen_slice *
      _ttm_flaggen_alloc (void);

      static void
      _ttm_flaggen_free (
          _ttm_flaggen_slice *_tao_slice);
      
      static _ttm_flaggen_slice *
      _ttm_flaggen_dup (
          const _ttm_flaggen_slice *_tao_slice);
      
      static void
      _ttm_flaggen_copy (
          _ttm_flaggen_slice *_tao_to,
          const _ttm_flaggen_slice *_tao_from
        );

      _ttm_flaggen ttm_flaggen;
      ::CORBA::Long linkRef;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct TTMSELECT;

    typedef
      ::TAO_Fixed_Var_T<
          TTMSELECT
        >
      TTMSELECT_var;

    typedef
      TTMSELECT &
      TTMSELECT_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  TTMSELECT
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef TTMSELECT_var _var_type;
      typedef TTMSELECT_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ttmDesc[129];
      typedef ::CORBA::Char _ttmDesc_slice;
      struct _ttmDesc_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ttmDesc,
            _ttmDesc_slice,
            _ttmDesc_tag
          >
        _ttmDesc_forany;

      static _ttmDesc_slice *
      _ttmDesc_alloc (void);

      static void
      _ttmDesc_free (
          _ttmDesc_slice *_tao_slice);
      
      static _ttmDesc_slice *
      _ttmDesc_dup (
          const _ttmDesc_slice *_tao_slice);
      
      static void
      _ttmDesc_copy (
          _ttmDesc_slice *_tao_to,
          const _ttmDesc_slice *_tao_from
        );

      _ttmDesc ttmDesc;
      net::etech::TTMRECORDIMAGE ttmRecord;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_TTMSELECTSEQ_CH_)
#define _NET_ETECH_TTMSELECTSEQ_CH_

    class TtmSelectSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          TtmSelectSeq
        >
      TtmSelectSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          TtmSelectSeq
        >
      TtmSelectSeq_out;

    class  TtmSelectSeq
      : public
          ::TAO::unbounded_value_sequence<
              TTMSELECT
            >
    {
    public:
      TtmSelectSeq (void);
      TtmSelectSeq ( ::CORBA::ULong max);
      TtmSelectSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        TTMSELECT* buffer,
        ::CORBA::Boolean release = false);
      TtmSelectSeq (const TtmSelectSeq &);
      virtual ~TtmSelectSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef TtmSelectSeq_var _var_type;
      typedef TtmSelectSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct USERLOGIN;

    typedef
      ::TAO_Var_Var_T<
          USERLOGIN
        >
      USERLOGIN_var;

    typedef
      ::TAO_Out_T<
          USERLOGIN
        >
      USERLOGIN_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  USERLOGIN
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef USERLOGIN_var _var_type;
      typedef USERLOGIN_out _out_type;
      
      ::TAO::String_Manager login;
      ::TAO::String_Manager password;
      ::CORBA::Short ticketType;
      ::CORBA::Long elementType;
      ::TAO::String_Manager elementCode;
      ::CORBA::Long linkRef;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_DR;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_DR
        >
      DATA_DR_var;

    typedef
      DATA_DR &
      DATA_DR_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_DR
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_DR_var _var_type;
      typedef DATA_DR_out _out_type;
      
      ::CORBA::Long position;
      ::CORBA::Long fieldtype;
      ::CORBA::Long offset;
      ::CORBA::Long size;
      ::CORBA::Long type_size;
      ::CORBA::Boolean is_array;
      ::CORBA::Long array_size;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _description[100];
      typedef ::CORBA::Char _description_slice;
      struct _description_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _description,
            _description_slice,
            _description_tag
          >
        _description_forany;

      static _description_slice *
      _description_alloc (void);

      static void
      _description_free (
          _description_slice *_tao_slice);
      
      static _description_slice *
      _description_dup (
          const _description_slice *_tao_slice);
      
      static void
      _description_copy (
          _description_slice *_tao_to,
          const _description_slice *_tao_from
        );

      _description description;
      ::CORBA::Boolean isIndex;
      ::CORBA::Boolean indexByPlugin;
      ::CORBA::Long indexBlockSize;
      ::CORBA::Long indexRealTimeBlockSize;
      ::CORBA::Long startSize;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _indexSuffix[10];
      typedef ::CORBA::Char _indexSuffix_slice;
      struct _indexSuffix_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _indexSuffix,
            _indexSuffix_slice,
            _indexSuffix_tag
          >
        _indexSuffix_forany;

      static _indexSuffix_slice *
      _indexSuffix_alloc (void);

      static void
      _indexSuffix_free (
          _indexSuffix_slice *_tao_slice);
      
      static _indexSuffix_slice *
      _indexSuffix_dup (
          const _indexSuffix_slice *_tao_slice);
      
      static void
      _indexSuffix_copy (
          _indexSuffix_slice *_tao_to,
          const _indexSuffix_slice *_tao_from
        );

      _indexSuffix indexSuffix;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _startTime[9];
      typedef ::CORBA::Char _startTime_slice;
      struct _startTime_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _startTime,
            _startTime_slice,
            _startTime_tag
          >
        _startTime_forany;

      static _startTime_slice *
      _startTime_alloc (void);

      static void
      _startTime_free (
          _startTime_slice *_tao_slice);
      
      static _startTime_slice *
      _startTime_dup (
          const _startTime_slice *_tao_slice);
      
      static void
      _startTime_copy (
          _startTime_slice *_tao_to,
          const _startTime_slice *_tao_from
        );

      _startTime startTime;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _endTime[9];
      typedef ::CORBA::Char _endTime_slice;
      struct _endTime_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _endTime,
            _endTime_slice,
            _endTime_tag
          >
        _endTime_forany;

      static _endTime_slice *
      _endTime_alloc (void);

      static void
      _endTime_free (
          _endTime_slice *_tao_slice);
      
      static _endTime_slice *
      _endTime_dup (
          const _endTime_slice *_tao_slice);
      
      static void
      _endTime_copy (
          _endTime_slice *_tao_to,
          const _endTime_slice *_tao_from
        );

      _endTime endTime;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct GLOBALOPT;

    typedef
      ::TAO_Fixed_Var_T<
          GLOBALOPT
        >
      GLOBALOPT_var;

    typedef
      GLOBALOPT &
      GLOBALOPT_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  GLOBALOPT
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef GLOBALOPT_var _var_type;
      typedef GLOBALOPT_out _out_type;
      
      ::CORBA::Boolean drUsePlugin;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _drPluginName[256];
      typedef ::CORBA::Char _drPluginName_slice;
      struct _drPluginName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _drPluginName,
            _drPluginName_slice,
            _drPluginName_tag
          >
        _drPluginName_forany;

      static _drPluginName_slice *
      _drPluginName_alloc (void);

      static void
      _drPluginName_free (
          _drPluginName_slice *_tao_slice);
      
      static _drPluginName_slice *
      _drPluginName_dup (
          const _drPluginName_slice *_tao_slice);
      
      static void
      _drPluginName_copy (
          _drPluginName_slice *_tao_to,
          const _drPluginName_slice *_tao_from
        );

      _drPluginName drPluginName;
      ::CORBA::Boolean drUsePath;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _drPathName[1536];
      typedef ::CORBA::Char _drPathName_slice;
      struct _drPathName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _drPathName,
            _drPathName_slice,
            _drPathName_tag
          >
        _drPathName_forany;

      static _drPathName_slice *
      _drPathName_alloc (void);

      static void
      _drPathName_free (
          _drPathName_slice *_tao_slice);
      
      static _drPathName_slice *
      _drPathName_dup (
          const _drPathName_slice *_tao_slice);
      
      static void
      _drPathName_copy (
          _drPathName_slice *_tao_to,
          const _drPathName_slice *_tao_from
        );

      _drPathName drPathName;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _glbDefaultPluginPath[160];
      typedef ::CORBA::Char _glbDefaultPluginPath_slice;
      struct _glbDefaultPluginPath_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _glbDefaultPluginPath,
            _glbDefaultPluginPath_slice,
            _glbDefaultPluginPath_tag
          >
        _glbDefaultPluginPath_forany;

      static _glbDefaultPluginPath_slice *
      _glbDefaultPluginPath_alloc (void);

      static void
      _glbDefaultPluginPath_free (
          _glbDefaultPluginPath_slice *_tao_slice);
      
      static _glbDefaultPluginPath_slice *
      _glbDefaultPluginPath_dup (
          const _glbDefaultPluginPath_slice *_tao_slice);
      
      static void
      _glbDefaultPluginPath_copy (
          _glbDefaultPluginPath_slice *_tao_to,
          const _glbDefaultPluginPath_slice *_tao_from
        );

      _glbDefaultPluginPath glbDefaultPluginPath;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _glbAlias[160];
      typedef ::CORBA::Char _glbAlias_slice;
      struct _glbAlias_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _glbAlias,
            _glbAlias_slice,
            _glbAlias_tag
          >
        _glbAlias_forany;

      static _glbAlias_slice *
      _glbAlias_alloc (void);

      static void
      _glbAlias_free (
          _glbAlias_slice *_tao_slice);
      
      static _glbAlias_slice *
      _glbAlias_dup (
          const _glbAlias_slice *_tao_slice);
      
      static void
      _glbAlias_copy (
          _glbAlias_slice *_tao_to,
          const _glbAlias_slice *_tao_from
        );

      _glbAlias glbAlias;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _glbAuthor[160];
      typedef ::CORBA::Char _glbAuthor_slice;
      struct _glbAuthor_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _glbAuthor,
            _glbAuthor_slice,
            _glbAuthor_tag
          >
        _glbAuthor_forany;

      static _glbAuthor_slice *
      _glbAuthor_alloc (void);

      static void
      _glbAuthor_free (
          _glbAuthor_slice *_tao_slice);
      
      static _glbAuthor_slice *
      _glbAuthor_dup (
          const _glbAuthor_slice *_tao_slice);
      
      static void
      _glbAuthor_copy (
          _glbAuthor_slice *_tao_to,
          const _glbAuthor_slice *_tao_from
        );

      _glbAuthor glbAuthor;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _glbLastModified[160];
      typedef ::CORBA::Char _glbLastModified_slice;
      struct _glbLastModified_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _glbLastModified,
            _glbLastModified_slice,
            _glbLastModified_tag
          >
        _glbLastModified_forany;

      static _glbLastModified_slice *
      _glbLastModified_alloc (void);

      static void
      _glbLastModified_free (
          _glbLastModified_slice *_tao_slice);
      
      static _glbLastModified_slice *
      _glbLastModified_dup (
          const _glbLastModified_slice *_tao_slice);
      
      static void
      _glbLastModified_copy (
          _glbLastModified_slice *_tao_to,
          const _glbLastModified_slice *_tao_from
        );

      _glbLastModified glbLastModified;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _indexFileName[160];
      typedef ::CORBA::Char _indexFileName_slice;
      struct _indexFileName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _indexFileName,
            _indexFileName_slice,
            _indexFileName_tag
          >
        _indexFileName_forany;

      static _indexFileName_slice *
      _indexFileName_alloc (void);

      static void
      _indexFileName_free (
          _indexFileName_slice *_tao_slice);
      
      static _indexFileName_slice *
      _indexFileName_dup (
          const _indexFileName_slice *_tao_slice);
      
      static void
      _indexFileName_copy (
          _indexFileName_slice *_tao_to,
          const _indexFileName_slice *_tao_from
        );

      _indexFileName indexFileName;
      ::CORBA::Boolean alarmManagement;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_RELATIONS;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_RELATIONS
        >
      DATA_RELATIONS_var;

    typedef
      DATA_RELATIONS &
      DATA_RELATIONS_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_RELATIONS
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_RELATIONS_var _var_type;
      typedef DATA_RELATIONS_out _out_type;
      
      ::CORBA::Long idRelation;
      ::CORBA::Long idParentRelation;
      ::CORBA::Long idFirstElement;
      ::CORBA::Long idSecondElement;
      ::CORBA::Long admittedDirections;
      ::CORBA::Boolean admitHexValues;
      ::CORBA::Boolean admitNetworkAnalisys;
      ::CORBA::Boolean ghostRelation;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _nextLevelRelations[150];
      typedef ::CORBA::Long _nextLevelRelations_slice;
      struct _nextLevelRelations_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _nextLevelRelations,
            _nextLevelRelations_slice,
            _nextLevelRelations_tag
          >
        _nextLevelRelations_forany;

      static _nextLevelRelations_slice *
      _nextLevelRelations_alloc (void);

      static void
      _nextLevelRelations_free (
          _nextLevelRelations_slice *_tao_slice);
      
      static _nextLevelRelations_slice *
      _nextLevelRelations_dup (
          const _nextLevelRelations_slice *_tao_slice);
      
      static void
      _nextLevelRelations_copy (
          _nextLevelRelations_slice *_tao_to,
          const _nextLevelRelations_slice *_tao_from
        );

      _nextLevelRelations nextLevelRelations;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _restrictions[150];
      typedef ::CORBA::Long _restrictions_slice;
      struct _restrictions_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _restrictions,
            _restrictions_slice,
            _restrictions_tag
          >
        _restrictions_forany;

      static _restrictions_slice *
      _restrictions_alloc (void);

      static void
      _restrictions_free (
          _restrictions_slice *_tao_slice);
      
      static _restrictions_slice *
      _restrictions_dup (
          const _restrictions_slice *_tao_slice);
      
      static void
      _restrictions_copy (
          _restrictions_slice *_tao_to,
          const _restrictions_slice *_tao_from
        );

      _restrictions restrictions;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _tiedRestrictions[150];
      typedef ::CORBA::Long _tiedRestrictions_slice;
      struct _tiedRestrictions_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _tiedRestrictions,
            _tiedRestrictions_slice,
            _tiedRestrictions_tag
          >
        _tiedRestrictions_forany;

      static _tiedRestrictions_slice *
      _tiedRestrictions_alloc (void);

      static void
      _tiedRestrictions_free (
          _tiedRestrictions_slice *_tao_slice);
      
      static _tiedRestrictions_slice *
      _tiedRestrictions_dup (
          const _tiedRestrictions_slice *_tao_slice);
      
      static void
      _tiedRestrictions_copy (
          _tiedRestrictions_slice *_tao_to,
          const _tiedRestrictions_slice *_tao_from
        );

      _tiedRestrictions tiedRestrictions;
      ::CORBA::Boolean freeFormat;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_DATAELEMENT;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_DATAELEMENT
        >
      DATA_DATAELEMENT_var;

    typedef
      DATA_DATAELEMENT &
      DATA_DATAELEMENT_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_DATAELEMENT
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_DATAELEMENT_var _var_type;
      typedef DATA_DATAELEMENT_out _out_type;
      
      ::CORBA::Long idElement;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _shortDescription[30];
      typedef ::CORBA::Char _shortDescription_slice;
      struct _shortDescription_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _shortDescription,
            _shortDescription_slice,
            _shortDescription_tag
          >
        _shortDescription_forany;

      static _shortDescription_slice *
      _shortDescription_alloc (void);

      static void
      _shortDescription_free (
          _shortDescription_slice *_tao_slice);
      
      static _shortDescription_slice *
      _shortDescription_dup (
          const _shortDescription_slice *_tao_slice);
      
      static void
      _shortDescription_copy (
          _shortDescription_slice *_tao_to,
          const _shortDescription_slice *_tao_from
        );

      _shortDescription shortDescription;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _longDescription[160];
      typedef ::CORBA::Char _longDescription_slice;
      struct _longDescription_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _longDescription,
            _longDescription_slice,
            _longDescription_tag
          >
        _longDescription_forany;

      static _longDescription_slice *
      _longDescription_alloc (void);

      static void
      _longDescription_free (
          _longDescription_slice *_tao_slice);
      
      static _longDescription_slice *
      _longDescription_dup (
          const _longDescription_slice *_tao_slice);
      
      static void
      _longDescription_copy (
          _longDescription_slice *_tao_to,
          const _longDescription_slice *_tao_from
        );

      _longDescription longDescription;
      ::CORBA::Long guiObject;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _pixmapFileName[128];
      typedef ::CORBA::Char _pixmapFileName_slice;
      struct _pixmapFileName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _pixmapFileName,
            _pixmapFileName_slice,
            _pixmapFileName_tag
          >
        _pixmapFileName_forany;

      static _pixmapFileName_slice *
      _pixmapFileName_alloc (void);

      static void
      _pixmapFileName_free (
          _pixmapFileName_slice *_tao_slice);
      
      static _pixmapFileName_slice *
      _pixmapFileName_dup (
          const _pixmapFileName_slice *_tao_slice);
      
      static void
      _pixmapFileName_copy (
          _pixmapFileName_slice *_tao_to,
          const _pixmapFileName_slice *_tao_from
        );

      _pixmapFileName pixmapFileName;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _valueRange[20];
      typedef ::CORBA::Char _valueRange_slice;
      struct _valueRange_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _valueRange,
            _valueRange_slice,
            _valueRange_tag
          >
        _valueRange_forany;

      static _valueRange_slice *
      _valueRange_alloc (void);

      static void
      _valueRange_free (
          _valueRange_slice *_tao_slice);
      
      static _valueRange_slice *
      _valueRange_dup (
          const _valueRange_slice *_tao_slice);
      
      static void
      _valueRange_copy (
          _valueRange_slice *_tao_to,
          const _valueRange_slice *_tao_from
        );

      _valueRange valueRange;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Double _valueList[80];
      typedef ::CORBA::Double _valueList_slice;
      struct _valueList_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _valueList,
            _valueList_slice,
            _valueList_tag
          >
        _valueList_forany;

      static _valueList_slice *
      _valueList_alloc (void);

      static void
      _valueList_free (
          _valueList_slice *_tao_slice);
      
      static _valueList_slice *
      _valueList_dup (
          const _valueList_slice *_tao_slice);
      
      static void
      _valueList_copy (
          _valueList_slice *_tao_to,
          const _valueList_slice *_tao_from
        );

      _valueList valueList;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _valueListLabel[80][60];
      typedef ::CORBA::Char _valueListLabel_slice[60];
      struct _valueListLabel_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _valueListLabel,
            _valueListLabel_slice,
            _valueListLabel_tag
          >
        _valueListLabel_forany;

      static _valueListLabel_slice *
      _valueListLabel_alloc (void);

      static void
      _valueListLabel_free (
          _valueListLabel_slice *_tao_slice);
      
      static _valueListLabel_slice *
      _valueListLabel_dup (
          const _valueListLabel_slice *_tao_slice);
      
      static void
      _valueListLabel_copy (
          _valueListLabel_slice *_tao_to,
          const _valueListLabel_slice *_tao_from
        );

      _valueListLabel valueListLabel;
      ::CORBA::Double defaultValue;
      ::CORBA::Boolean acceptHex;
      ::CORBA::Long priority;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _aggregateRestrictions[20];
      typedef ::CORBA::Long _aggregateRestrictions_slice;
      struct _aggregateRestrictions_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _aggregateRestrictions,
            _aggregateRestrictions_slice,
            _aggregateRestrictions_tag
          >
        _aggregateRestrictions_forany;

      static _aggregateRestrictions_slice *
      _aggregateRestrictions_alloc (void);

      static void
      _aggregateRestrictions_free (
          _aggregateRestrictions_slice *_tao_slice);
      
      static _aggregateRestrictions_slice *
      _aggregateRestrictions_dup (
          const _aggregateRestrictions_slice *_tao_slice);
      
      static void
      _aggregateRestrictions_copy (
          _aggregateRestrictions_slice *_tao_to,
          const _aggregateRestrictions_slice *_tao_from
        );

      _aggregateRestrictions aggregateRestrictions;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _exceptions[20];
      typedef ::CORBA::Long _exceptions_slice;
      struct _exceptions_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _exceptions,
            _exceptions_slice,
            _exceptions_tag
          >
        _exceptions_forany;

      static _exceptions_slice *
      _exceptions_alloc (void);

      static void
      _exceptions_free (
          _exceptions_slice *_tao_slice);
      
      static _exceptions_slice *
      _exceptions_dup (
          const _exceptions_slice *_tao_slice);
      
      static void
      _exceptions_copy (
          _exceptions_slice *_tao_to,
          const _exceptions_slice *_tao_from
        );

      _exceptions exceptions;
      ::CORBA::Long idDRLink;
      ::CORBA::Long elementType;
      ::CORBA::Long compareSelection;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _Suffix[10];
      typedef ::CORBA::Char _Suffix_slice;
      struct _Suffix_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _Suffix,
            _Suffix_slice,
            _Suffix_tag
          >
        _Suffix_forany;

      static _Suffix_slice *
      _Suffix_alloc (void);

      static void
      _Suffix_free (
          _Suffix_slice *_tao_slice);
      
      static _Suffix_slice *
      _Suffix_dup (
          const _Suffix_slice *_tao_slice);
      
      static void
      _Suffix_copy (
          _Suffix_slice *_tao_to,
          const _Suffix_slice *_tao_from
        );

      _Suffix Suffix;
      ::CORBA::Long LengthInRelation;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _valueShifter[20][24];
      typedef ::CORBA::Char _valueShifter_slice[24];
      struct _valueShifter_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _valueShifter,
            _valueShifter_slice,
            _valueShifter_tag
          >
        _valueShifter_forany;

      static _valueShifter_slice *
      _valueShifter_alloc (void);

      static void
      _valueShifter_free (
          _valueShifter_slice *_tao_slice);
      
      static _valueShifter_slice *
      _valueShifter_dup (
          const _valueShifter_slice *_tao_slice);
      
      static void
      _valueShifter_copy (
          _valueShifter_slice *_tao_to,
          const _valueShifter_slice *_tao_from
        );

      _valueShifter valueShifter;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _scripts[6];
      typedef ::CORBA::Long _scripts_slice;
      struct _scripts_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _scripts,
            _scripts_slice,
            _scripts_tag
          >
        _scripts_forany;

      static _scripts_slice *
      _scripts_alloc (void);

      static void
      _scripts_free (
          _scripts_slice *_tao_slice);
      
      static _scripts_slice *
      _scripts_dup (
          const _scripts_slice *_tao_slice);
      
      static void
      _scripts_copy (
          _scripts_slice *_tao_to,
          const _scripts_slice *_tao_from
        );

      _scripts scripts;
      ::CORBA::Long idPlugin;
      ::CORBA::Long idPluginGUI;
      ::CORBA::Boolean repeatKey;
      ::CORBA::Boolean ffEnabled;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct REST_INFO;

    typedef
      ::TAO_Fixed_Var_T<
          REST_INFO
        >
      REST_INFO_var;

    typedef
      REST_INFO &
      REST_INFO_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  REST_INFO
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef REST_INFO_var _var_type;
      typedef REST_INFO_out _out_type;
      
      ::CORBA::Long Level;
      ::CORBA::Long Element;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _Value[105];
      typedef ::CORBA::Long _Value_slice;
      struct _Value_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _Value,
            _Value_slice,
            _Value_tag
          >
        _Value_forany;

      static _Value_slice *
      _Value_alloc (void);

      static void
      _Value_free (
          _Value_slice *_tao_slice);
      
      static _Value_slice *
      _Value_dup (
          const _Value_slice *_tao_slice);
      
      static void
      _Value_copy (
          _Value_slice *_tao_to,
          const _Value_slice *_tao_from
        );

      _Value Value;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _AsciiValue[105][26];
      typedef ::CORBA::Char _AsciiValue_slice[26];
      struct _AsciiValue_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _AsciiValue,
            _AsciiValue_slice,
            _AsciiValue_tag
          >
        _AsciiValue_forany;

      static _AsciiValue_slice *
      _AsciiValue_alloc (void);

      static void
      _AsciiValue_free (
          _AsciiValue_slice *_tao_slice);
      
      static _AsciiValue_slice *
      _AsciiValue_dup (
          const _AsciiValue_slice *_tao_slice);
      
      static void
      _AsciiValue_copy (
          _AsciiValue_slice *_tao_to,
          const _AsciiValue_slice *_tao_from
        );

      _AsciiValue AsciiValue;
      ::CORBA::Long Operator;
      ::CORBA::Long Priority;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_FEP;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_FEP
        >
      DATA_FEP_var;

    typedef
      DATA_FEP &
      DATA_FEP_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_FEP
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_FEP_var _var_type;
      typedef DATA_FEP_out _out_type;
      
      ::CORBA::Long IdFep;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _Description[30];
      typedef ::CORBA::Char _Description_slice;
      struct _Description_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _Description,
            _Description_slice,
            _Description_tag
          >
        _Description_forany;

      static _Description_slice *
      _Description_alloc (void);

      static void
      _Description_free (
          _Description_slice *_tao_slice);
      
      static _Description_slice *
      _Description_dup (
          const _Description_slice *_tao_slice);
      
      static void
      _Description_copy (
          _Description_slice *_tao_to,
          const _Description_slice *_tao_from
        );

      _Description Description;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_ANALYSISTYPE;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_ANALYSISTYPE
        >
      DATA_ANALYSISTYPE_var;

    typedef
      DATA_ANALYSISTYPE &
      DATA_ANALYSISTYPE_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_ANALYSISTYPE
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_ANALYSISTYPE_var _var_type;
      typedef DATA_ANALYSISTYPE_out _out_type;
      
      ::CORBA::Long idAnalysis;
      ::CORBA::Boolean FlagArchiveData;
      ::CORBA::Boolean FlagCentrale;
      ::CORBA::Boolean FlagDate;
      ::CORBA::Boolean FlagOutputType;
      ::CORBA::Boolean FlagTimeRes;
      ::CORBA::Boolean FlagTrafficType;
      ::CORBA::Boolean FlagSort;
      ::CORBA::Boolean FlagCumulativeData;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _LongDescription[160];
      typedef ::CORBA::Char _LongDescription_slice;
      struct _LongDescription_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _LongDescription,
            _LongDescription_slice,
            _LongDescription_tag
          >
        _LongDescription_forany;

      static _LongDescription_slice *
      _LongDescription_alloc (void);

      static void
      _LongDescription_free (
          _LongDescription_slice *_tao_slice);
      
      static _LongDescription_slice *
      _LongDescription_dup (
          const _LongDescription_slice *_tao_slice);
      
      static void
      _LongDescription_copy (
          _LongDescription_slice *_tao_to,
          const _LongDescription_slice *_tao_from
        );

      _LongDescription LongDescription;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _ShortDescription[30];
      typedef ::CORBA::Char _ShortDescription_slice;
      struct _ShortDescription_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ShortDescription,
            _ShortDescription_slice,
            _ShortDescription_tag
          >
        _ShortDescription_forany;

      static _ShortDescription_slice *
      _ShortDescription_alloc (void);

      static void
      _ShortDescription_free (
          _ShortDescription_slice *_tao_slice);
      
      static _ShortDescription_slice *
      _ShortDescription_dup (
          const _ShortDescription_slice *_tao_slice);
      
      static void
      _ShortDescription_copy (
          _ShortDescription_slice *_tao_to,
          const _ShortDescription_slice *_tao_from
        );

      _ShortDescription ShortDescription;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _relations[400];
      typedef ::CORBA::Long _relations_slice;
      struct _relations_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _relations,
            _relations_slice,
            _relations_tag
          >
        _relations_forany;

      static _relations_slice *
      _relations_alloc (void);

      static void
      _relations_free (
          _relations_slice *_tao_slice);
      
      static _relations_slice *
      _relations_dup (
          const _relations_slice *_tao_slice);
      
      static void
      _relations_copy (
          _relations_slice *_tao_to,
          const _relations_slice *_tao_from
        );

      _relations relations;
      ::CORBA::Long countersKitId;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _reportsId[15];
      typedef ::CORBA::Long _reportsId_slice;
      struct _reportsId_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _reportsId,
            _reportsId_slice,
            _reportsId_tag
          >
        _reportsId_forany;

      static _reportsId_slice *
      _reportsId_alloc (void);

      static void
      _reportsId_free (
          _reportsId_slice *_tao_slice);
      
      static _reportsId_slice *
      _reportsId_dup (
          const _reportsId_slice *_tao_slice);
      
      static void
      _reportsId_copy (
          _reportsId_slice *_tao_to,
          const _reportsId_slice *_tao_from
        );

      _reportsId reportsId;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_EXCEPTIONS;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_EXCEPTIONS
        >
      DATA_EXCEPTIONS_var;

    typedef
      DATA_EXCEPTIONS &
      DATA_EXCEPTIONS_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_EXCEPTIONS
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_EXCEPTIONS_var _var_type;
      typedef DATA_EXCEPTIONS_out _out_type;
      
      ::CORBA::Long idException;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _tag[30];
      typedef ::CORBA::Char _tag_slice;
      struct _tag_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _tag,
            _tag_slice,
            _tag_tag
          >
        _tag_forany;

      static _tag_slice *
      _tag_alloc (void);

      static void
      _tag_free (
          _tag_slice *_tao_slice);
      
      static _tag_slice *
      _tag_dup (
          const _tag_slice *_tao_slice);
      
      static void
      _tag_copy (
          _tag_slice *_tao_to,
          const _tag_slice *_tao_from
        );

      _tag tag;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _description[160];
      typedef ::CORBA::Char _description_slice;
      struct _description_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _description,
            _description_slice,
            _description_tag
          >
        _description_forany;

      static _description_slice *
      _description_alloc (void);

      static void
      _description_free (
          _description_slice *_tao_slice);
      
      static _description_slice *
      _description_dup (
          const _description_slice *_tao_slice);
      
      static void
      _description_copy (
          _description_slice *_tao_to,
          const _description_slice *_tao_from
        );

      _description description;
      ::CORBA::Long idTriggerRestriction;
      ::CORBA::Long triggeredStatus;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _triggeredValue[26];
      typedef ::CORBA::Char _triggeredValue_slice;
      struct _triggeredValue_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _triggeredValue,
            _triggeredValue_slice,
            _triggeredValue_tag
          >
        _triggeredValue_forany;

      static _triggeredValue_slice *
      _triggeredValue_alloc (void);

      static void
      _triggeredValue_free (
          _triggeredValue_slice *_tao_slice);
      
      static _triggeredValue_slice *
      _triggeredValue_dup (
          const _triggeredValue_slice *_tao_slice);
      
      static void
      _triggeredValue_copy (
          _triggeredValue_slice *_tao_to,
          const _triggeredValue_slice *_tao_from
        );

      _triggeredValue triggeredValue;
      ::CORBA::Long action;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _targetValue[26];
      typedef ::CORBA::Char _targetValue_slice;
      struct _targetValue_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _targetValue,
            _targetValue_slice,
            _targetValue_tag
          >
        _targetValue_forany;

      static _targetValue_slice *
      _targetValue_alloc (void);

      static void
      _targetValue_free (
          _targetValue_slice *_tao_slice);
      
      static _targetValue_slice *
      _targetValue_dup (
          const _targetValue_slice *_tao_slice);
      
      static void
      _targetValue_copy (
          _targetValue_slice *_tao_to,
          const _targetValue_slice *_tao_from
        );

      _targetValue targetValue;
      ::CORBA::Long idAggregateException;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATE_INFO;

    typedef
      ::TAO_Fixed_Var_T<
          DATE_INFO
        >
      DATE_INFO_var;

    typedef
      DATE_INFO &
      DATE_INFO_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATE_INFO
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATE_INFO_var _var_type;
      typedef DATE_INFO_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _dateString[9];
      typedef ::CORBA::Char _dateString_slice;
      struct _dateString_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _dateString,
            _dateString_slice,
            _dateString_tag
          >
        _dateString_forany;

      static _dateString_slice *
      _dateString_alloc (void);

      static void
      _dateString_free (
          _dateString_slice *_tao_slice);
      
      static _dateString_slice *
      _dateString_dup (
          const _dateString_slice *_tao_slice);
      
      static void
      _dateString_copy (
          _dateString_slice *_tao_to,
          const _dateString_slice *_tao_from
        );

      _dateString dateString;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_RELSEQ_CH_)
#define _NET_ETECH_RELSEQ_CH_

    class RELSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          RELSeq
        >
      RELSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          RELSeq
        >
      RELSeq_out;

    class  RELSeq
      : public
          ::TAO::unbounded_value_sequence<
              REST_INFO
            >
    {
    public:
      RELSeq (void);
      RELSeq ( ::CORBA::ULong max);
      RELSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        REST_INFO* buffer,
        ::CORBA::Boolean release = false);
      RELSeq (const RELSeq &);
      virtual ~RELSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef RELSeq_var _var_type;
      typedef RELSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_DATESEQ_CH_)
#define _NET_ETECH_DATESEQ_CH_

    class DateSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          DateSeq
        >
      DateSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          DateSeq
        >
      DateSeq_out;

    class  DateSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATE_INFO
            >
    {
    public:
      DateSeq (void);
      DateSeq ( ::CORBA::ULong max);
      DateSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATE_INFO* buffer,
        ::CORBA::Boolean release = false);
      DateSeq (const DateSeq &);
      virtual ~DateSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DateSeq_var _var_type;
      typedef DateSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_HELP;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_HELP
        >
      DATA_HELP_var;

    typedef
      DATA_HELP &
      DATA_HELP_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_HELP
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_HELP_var _var_type;
      typedef DATA_HELP_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _key[26];
      typedef ::CORBA::Char _key_slice;
      struct _key_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _key,
            _key_slice,
            _key_tag
          >
        _key_forany;

      static _key_slice *
      _key_alloc (void);

      static void
      _key_free (
          _key_slice *_tao_slice);
      
      static _key_slice *
      _key_dup (
          const _key_slice *_tao_slice);
      
      static void
      _key_copy (
          _key_slice *_tao_to,
          const _key_slice *_tao_from
        );

      _key key;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _data[100];
      typedef ::CORBA::Char _data_slice;
      struct _data_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _data,
            _data_slice,
            _data_tag
          >
        _data_forany;

      static _data_slice *
      _data_alloc (void);

      static void
      _data_free (
          _data_slice *_tao_slice);
      
      static _data_slice *
      _data_dup (
          const _data_slice *_tao_slice);
      
      static void
      _data_copy (
          _data_slice *_tao_to,
          const _data_slice *_tao_from
        );

      _data data;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_HELPERSEQ_CH_)
#define _NET_ETECH_HELPERSEQ_CH_

    class HelperSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          HelperSeq
        >
      HelperSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          HelperSeq
        >
      HelperSeq_out;

    class  HelperSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_HELP
            >
    {
    public:
      HelperSeq (void);
      HelperSeq ( ::CORBA::ULong max);
      HelperSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_HELP* buffer,
        ::CORBA::Boolean release = false);
      HelperSeq (const HelperSeq &);
      virtual ~HelperSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef HelperSeq_var _var_type;
      typedef HelperSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct STRUCT_JOB;

    typedef
      ::TAO_Fixed_Var_T<
          STRUCT_JOB
        >
      STRUCT_JOB_var;

    typedef
      STRUCT_JOB &
      STRUCT_JOB_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  STRUCT_JOB
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef STRUCT_JOB_var _var_type;
      typedef STRUCT_JOB_out _out_type;
      
      ::CORBA::Short new_job;
      ::CORBA::Short job_id;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _user_str[11];
      typedef ::CORBA::Char _user_str_slice;
      struct _user_str_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _user_str,
            _user_str_slice,
            _user_str_tag
          >
        _user_str_forany;

      static _user_str_slice *
      _user_str_alloc (void);

      static void
      _user_str_free (
          _user_str_slice *_tao_slice);
      
      static _user_str_slice *
      _user_str_dup (
          const _user_str_slice *_tao_slice);
      
      static void
      _user_str_copy (
          _user_str_slice *_tao_to,
          const _user_str_slice *_tao_from
        );

      _user_str user_str;
      ::CORBA::Long user_id;
      ::CORBA::Long data_start;
      ::CORBA::Long data_end;
      ::CORBA::Short hour;
      ::CORBA::Long modality;
      ::CORBA::Long qnt;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _dest_fep[20];
      typedef ::CORBA::Char _dest_fep_slice;
      struct _dest_fep_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _dest_fep,
            _dest_fep_slice,
            _dest_fep_tag
          >
        _dest_fep_forany;

      static _dest_fep_slice *
      _dest_fep_alloc (void);

      static void
      _dest_fep_free (
          _dest_fep_slice *_tao_slice);
      
      static _dest_fep_slice *
      _dest_fep_dup (
          const _dest_fep_slice *_tao_slice);
      
      static void
      _dest_fep_copy (
          _dest_fep_slice *_tao_to,
          const _dest_fep_slice *_tao_from
        );

      _dest_fep dest_fep;
      ::CORBA::Long last_day;
      ::CORBA::Long last_month;
      ::CORBA::Short last_quarter;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _dest_dir[256];
      typedef ::CORBA::Char _dest_dir_slice;
      struct _dest_dir_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _dest_dir,
            _dest_dir_slice,
            _dest_dir_tag
          >
        _dest_dir_forany;

      static _dest_dir_slice *
      _dest_dir_alloc (void);

      static void
      _dest_dir_free (
          _dest_dir_slice *_tao_slice);
      
      static _dest_dir_slice *
      _dest_dir_dup (
          const _dest_dir_slice *_tao_slice);
      
      static void
      _dest_dir_copy (
          _dest_dir_slice *_tao_to,
          const _dest_dir_slice *_tao_from
        );

      _dest_dir dest_dir;
      ::CORBA::Short locked;
      ::CORBA::Short period;
      ::CORBA::Short start_hour;
      ::CORBA::Short end_hour;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _description[61];
      typedef ::CORBA::Char _description_slice;
      struct _description_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _description,
            _description_slice,
            _description_tag
          >
        _description_forany;

      static _description_slice *
      _description_alloc (void);

      static void
      _description_free (
          _description_slice *_tao_slice);
      
      static _description_slice *
      _description_dup (
          const _description_slice *_tao_slice);
      
      static void
      _description_copy (
          _description_slice *_tao_to,
          const _description_slice *_tao_from
        );

      _description description;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_JOBSEQ_CH_)
#define _NET_ETECH_JOBSEQ_CH_

    class JOBSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          JOBSeq
        >
      JOBSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          JOBSeq
        >
      JOBSeq_out;

    class  JOBSeq
      : public
          ::TAO::unbounded_value_sequence<
              STRUCT_JOB
            >
    {
    public:
      JOBSeq (void);
      JOBSeq ( ::CORBA::ULong max);
      JOBSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        STRUCT_JOB* buffer,
        ::CORBA::Boolean release = false);
      JOBSeq (const JOBSeq &);
      virtual ~JOBSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef JOBSeq_var _var_type;
      typedef JOBSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct STRUCT_USER;

    typedef
      ::TAO_Fixed_Var_T<
          STRUCT_USER
        >
      STRUCT_USER_var;

    typedef
      STRUCT_USER &
      STRUCT_USER_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  STRUCT_USER
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef STRUCT_USER_var _var_type;
      typedef STRUCT_USER_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _user[11];
      typedef ::CORBA::Char _user_slice;
      struct _user_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _user,
            _user_slice,
            _user_tag
          >
        _user_forany;

      static _user_slice *
      _user_alloc (void);

      static void
      _user_free (
          _user_slice *_tao_slice);
      
      static _user_slice *
      _user_dup (
          const _user_slice *_tao_slice);
      
      static void
      _user_copy (
          _user_slice *_tao_to,
          const _user_slice *_tao_from
        );

      _user user;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _password[11];
      typedef ::CORBA::Char _password_slice;
      struct _password_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _password,
            _password_slice,
            _password_tag
          >
        _password_forany;

      static _password_slice *
      _password_alloc (void);

      static void
      _password_free (
          _password_slice *_tao_slice);
      
      static _password_slice *
      _password_dup (
          const _password_slice *_tao_slice);
      
      static void
      _password_copy (
          _password_slice *_tao_to,
          const _password_slice *_tao_from
        );

      _password password;
      ::CORBA::Long job;
      ::CORBA::Long frequence;
      ::CORBA::Long iID_User;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_JOBUSERSEQ_CH_)
#define _NET_ETECH_JOBUSERSEQ_CH_

    class JobUserSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          JobUserSeq
        >
      JobUserSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          JobUserSeq
        >
      JobUserSeq_out;

    class  JobUserSeq
      : public
          ::TAO::unbounded_value_sequence<
              STRUCT_USER
            >
    {
    public:
      JobUserSeq (void);
      JobUserSeq ( ::CORBA::ULong max);
      JobUserSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        STRUCT_USER* buffer,
        ::CORBA::Boolean release = false);
      JobUserSeq (const JobUserSeq &);
      virtual ~JobUserSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef JobUserSeq_var _var_type;
      typedef JobUserSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct COUNTER_KIT;

    typedef
      ::TAO_Fixed_Var_T<
          COUNTER_KIT
        >
      COUNTER_KIT_var;

    typedef
      COUNTER_KIT &
      COUNTER_KIT_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  COUNTER_KIT
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef COUNTER_KIT_var _var_type;
      typedef COUNTER_KIT_out _out_type;
      
      ::CORBA::Short triggerField;
      ::CORBA::Long triggerValue;
      ::CORBA::Short counterIndex;
      ::CORBA::Short counterType;
      ::CORBA::Short percentOf;
      ::CORBA::Short triggerCounter;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _tag[20];
      typedef ::CORBA::Char _tag_slice;
      struct _tag_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _tag,
            _tag_slice,
            _tag_tag
          >
        _tag_forany;

      static _tag_slice *
      _tag_alloc (void);

      static void
      _tag_free (
          _tag_slice *_tao_slice);
      
      static _tag_slice *
      _tag_dup (
          const _tag_slice *_tao_slice);
      
      static void
      _tag_copy (
          _tag_slice *_tao_to,
          const _tag_slice *_tao_from
        );

      _tag tag;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _description[160];
      typedef ::CORBA::Char _description_slice;
      struct _description_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _description,
            _description_slice,
            _description_tag
          >
        _description_forany;

      static _description_slice *
      _description_alloc (void);

      static void
      _description_free (
          _description_slice *_tao_slice);
      
      static _description_slice *
      _description_dup (
          const _description_slice *_tao_slice);
      
      static void
      _description_copy (
          _description_slice *_tao_to,
          const _description_slice *_tao_from
        );

      _description description;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_COUNTERKITSEQ_CH_)
#define _NET_ETECH_COUNTERKITSEQ_CH_

    class CounterKitSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          CounterKitSeq
        >
      CounterKitSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          CounterKitSeq
        >
      CounterKitSeq_out;

    class  CounterKitSeq
      : public
          ::TAO::unbounded_value_sequence<
              COUNTER_KIT
            >
    {
    public:
      CounterKitSeq (void);
      CounterKitSeq ( ::CORBA::ULong max);
      CounterKitSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        COUNTER_KIT* buffer,
        ::CORBA::Boolean release = false);
      CounterKitSeq (const CounterKitSeq &);
      virtual ~CounterKitSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef CounterKitSeq_var _var_type;
      typedef CounterKitSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct COUNTERS;

    typedef
      ::TAO_Var_Var_T<
          COUNTERS
        >
      COUNTERS_var;

    typedef
      ::TAO_Out_T<
          COUNTERS
        >
      COUNTERS_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  COUNTERS
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef COUNTERS_var _var_type;
      typedef COUNTERS_out _out_type;
      
      ::CORBA::Long idCounter;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _tag[30];
      typedef ::CORBA::Char _tag_slice;
      struct _tag_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _tag,
            _tag_slice,
            _tag_tag
          >
        _tag_forany;

      static _tag_slice *
      _tag_alloc (void);

      static void
      _tag_free (
          _tag_slice *_tao_slice);
      
      static _tag_slice *
      _tag_dup (
          const _tag_slice *_tao_slice);
      
      static void
      _tag_copy (
          _tag_slice *_tao_to,
          const _tag_slice *_tao_from
        );

      _tag tag;
      ::CORBA::Boolean usePlugin;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _pluginName[256];
      typedef ::CORBA::Char _pluginName_slice;
      struct _pluginName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _pluginName,
            _pluginName_slice,
            _pluginName_tag
          >
        _pluginName_forany;

      static _pluginName_slice *
      _pluginName_alloc (void);

      static void
      _pluginName_free (
          _pluginName_slice *_tao_slice);
      
      static _pluginName_slice *
      _pluginName_dup (
          const _pluginName_slice *_tao_slice);
      
      static void
      _pluginName_copy (
          _pluginName_slice *_tao_to,
          const _pluginName_slice *_tao_from
        );

      _pluginName pluginName;
      ::CORBA::Boolean usePath;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _pathName[1536];
      typedef ::CORBA::Char _pathName_slice;
      struct _pathName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _pathName,
            _pathName_slice,
            _pathName_tag
          >
        _pathName_forany;

      static _pathName_slice *
      _pathName_alloc (void);

      static void
      _pathName_free (
          _pathName_slice *_tao_slice);
      
      static _pathName_slice *
      _pathName_dup (
          const _pathName_slice *_tao_slice);
      
      static void
      _pathName_copy (
          _pathName_slice *_tao_to,
          const _pathName_slice *_tao_from
        );

      _pathName pathName;
      net::etech::CounterKitSeq counterKit;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_COUNTERSSEQ_CH_)
#define _NET_ETECH_COUNTERSSEQ_CH_

    class CountersSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          CountersSeq
        >
      CountersSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          CountersSeq
        >
      CountersSeq_out;

    class  CountersSeq
      : public
          ::TAO::unbounded_value_sequence<
              COUNTERS
            >
    {
    public:
      CountersSeq (void);
      CountersSeq ( ::CORBA::ULong max);
      CountersSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        COUNTERS* buffer,
        ::CORBA::Boolean release = false);
      CountersSeq (const CountersSeq &);
      virtual ~CountersSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef CountersSeq_var _var_type;
      typedef CountersSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_PLUGINREGISTRY;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_PLUGINREGISTRY
        >
      DATA_PLUGINREGISTRY_var;

    typedef
      DATA_PLUGINREGISTRY &
      DATA_PLUGINREGISTRY_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_PLUGINREGISTRY
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_PLUGINREGISTRY_var _var_type;
      typedef DATA_PLUGINREGISTRY_out _out_type;
      
      ::CORBA::Long idPlugin;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _tag[30];
      typedef ::CORBA::Char _tag_slice;
      struct _tag_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _tag,
            _tag_slice,
            _tag_tag
          >
        _tag_forany;

      static _tag_slice *
      _tag_alloc (void);

      static void
      _tag_free (
          _tag_slice *_tao_slice);
      
      static _tag_slice *
      _tag_dup (
          const _tag_slice *_tao_slice);
      
      static void
      _tag_copy (
          _tag_slice *_tao_to,
          const _tag_slice *_tao_from
        );

      _tag tag;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _pluginName[256];
      typedef ::CORBA::Char _pluginName_slice;
      struct _pluginName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _pluginName,
            _pluginName_slice,
            _pluginName_tag
          >
        _pluginName_forany;

      static _pluginName_slice *
      _pluginName_alloc (void);

      static void
      _pluginName_free (
          _pluginName_slice *_tao_slice);
      
      static _pluginName_slice *
      _pluginName_dup (
          const _pluginName_slice *_tao_slice);
      
      static void
      _pluginName_copy (
          _pluginName_slice *_tao_to,
          const _pluginName_slice *_tao_from
        );

      _pluginName pluginName;
      ::CORBA::Long usage;
      ::CORBA::Boolean enabled;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_PLUGINREGISTRYSEQ_CH_)
#define _NET_ETECH_PLUGINREGISTRYSEQ_CH_

    class PluginRegistrySeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          PluginRegistrySeq
        >
      PluginRegistrySeq_var;

    typedef
      ::TAO_Seq_Out_T<
          PluginRegistrySeq
        >
      PluginRegistrySeq_out;

    class  PluginRegistrySeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_PLUGINREGISTRY
            >
    {
    public:
      PluginRegistrySeq (void);
      PluginRegistrySeq ( ::CORBA::ULong max);
      PluginRegistrySeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_PLUGINREGISTRY* buffer,
        ::CORBA::Boolean release = false);
      PluginRegistrySeq (const PluginRegistrySeq &);
      virtual ~PluginRegistrySeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef PluginRegistrySeq_var _var_type;
      typedef PluginRegistrySeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_SCRIPT_VARLIST;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_SCRIPT_VARLIST
        >
      DATA_SCRIPT_VARLIST_var;

    typedef
      DATA_SCRIPT_VARLIST &
      DATA_SCRIPT_VARLIST_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_SCRIPT_VARLIST
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_SCRIPT_VARLIST_var _var_type;
      typedef DATA_SCRIPT_VARLIST_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _d[30];
      typedef ::CORBA::Char _d_slice;
      struct _d_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _d,
            _d_slice,
            _d_tag
          >
        _d_forany;

      static _d_slice *
      _d_alloc (void);

      static void
      _d_free (
          _d_slice *_tao_slice);
      
      static _d_slice *
      _d_dup (
          const _d_slice *_tao_slice);
      
      static void
      _d_copy (
          _d_slice *_tao_to,
          const _d_slice *_tao_from
        );

      _d d;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_VARIABLESSEQ_CH_)
#define _NET_ETECH_VARIABLESSEQ_CH_

    class VariablesSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          VariablesSeq
        >
      VariablesSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          VariablesSeq
        >
      VariablesSeq_out;

    class  VariablesSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_SCRIPT_VARLIST
            >
    {
    public:
      VariablesSeq (void);
      VariablesSeq ( ::CORBA::ULong max);
      VariablesSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_SCRIPT_VARLIST* buffer,
        ::CORBA::Boolean release = false);
      VariablesSeq (const VariablesSeq &);
      virtual ~VariablesSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef VariablesSeq_var _var_type;
      typedef VariablesSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_SCRIPT_TEXT;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_SCRIPT_TEXT
        >
      DATA_SCRIPT_TEXT_var;

    typedef
      DATA_SCRIPT_TEXT &
      DATA_SCRIPT_TEXT_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_SCRIPT_TEXT
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_SCRIPT_TEXT_var _var_type;
      typedef DATA_SCRIPT_TEXT_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _d[160];
      typedef ::CORBA::Char _d_slice;
      struct _d_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _d,
            _d_slice,
            _d_tag
          >
        _d_forany;

      static _d_slice *
      _d_alloc (void);

      static void
      _d_free (
          _d_slice *_tao_slice);
      
      static _d_slice *
      _d_dup (
          const _d_slice *_tao_slice);
      
      static void
      _d_copy (
          _d_slice *_tao_to,
          const _d_slice *_tao_from
        );

      _d d;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_SCRIPTTEXTSEQ_CH_)
#define _NET_ETECH_SCRIPTTEXTSEQ_CH_

    class ScriptTextSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ScriptTextSeq
        >
      ScriptTextSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ScriptTextSeq
        >
      ScriptTextSeq_out;

    class  ScriptTextSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_SCRIPT_TEXT
            >
    {
    public:
      ScriptTextSeq (void);
      ScriptTextSeq ( ::CORBA::ULong max);
      ScriptTextSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_SCRIPT_TEXT* buffer,
        ::CORBA::Boolean release = false);
      ScriptTextSeq (const ScriptTextSeq &);
      virtual ~ScriptTextSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ScriptTextSeq_var _var_type;
      typedef ScriptTextSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_SCRIPT;

    typedef
      ::TAO_Var_Var_T<
          DATA_SCRIPT
        >
      DATA_SCRIPT_var;

    typedef
      ::TAO_Out_T<
          DATA_SCRIPT
        >
      DATA_SCRIPT_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_SCRIPT
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_SCRIPT_var _var_type;
      typedef DATA_SCRIPT_out _out_type;
      
      ::CORBA::Long idScript;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _tag[30];
      typedef ::CORBA::Char _tag_slice;
      struct _tag_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _tag,
            _tag_slice,
            _tag_tag
          >
        _tag_forany;

      static _tag_slice *
      _tag_alloc (void);

      static void
      _tag_free (
          _tag_slice *_tao_slice);
      
      static _tag_slice *
      _tag_dup (
          const _tag_slice *_tao_slice);
      
      static void
      _tag_copy (
          _tag_slice *_tao_to,
          const _tag_slice *_tao_from
        );

      _tag tag;
      ::CORBA::Long dataOrigin;
      net::etech::VariablesSeq variables;
      net::etech::ScriptTextSeq scriptText;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _resultVariableName[30];
      typedef ::CORBA::Char _resultVariableName_slice;
      struct _resultVariableName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _resultVariableName,
            _resultVariableName_slice,
            _resultVariableName_tag
          >
        _resultVariableName_forany;

      static _resultVariableName_slice *
      _resultVariableName_alloc (void);

      static void
      _resultVariableName_free (
          _resultVariableName_slice *_tao_slice);
      
      static _resultVariableName_slice *
      _resultVariableName_dup (
          const _resultVariableName_slice *_tao_slice);
      
      static void
      _resultVariableName_copy (
          _resultVariableName_slice *_tao_to,
          const _resultVariableName_slice *_tao_from
        );

      _resultVariableName resultVariableName;
      ::CORBA::Long resultType;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_SCRIPTSEQ_CH_)
#define _NET_ETECH_SCRIPTSEQ_CH_

    class ScriptSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          ScriptSeq
        >
      ScriptSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ScriptSeq
        >
      ScriptSeq_out;

    class  ScriptSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_SCRIPT
            >
    {
    public:
      ScriptSeq (void);
      ScriptSeq ( ::CORBA::ULong max);
      ScriptSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_SCRIPT* buffer,
        ::CORBA::Boolean release = false);
      ScriptSeq (const ScriptSeq &);
      virtual ~ScriptSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ScriptSeq_var _var_type;
      typedef ScriptSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_RS_HTML;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_RS_HTML
        >
      DATA_RS_HTML_var;

    typedef
      DATA_RS_HTML &
      DATA_RS_HTML_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_RS_HTML
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_RS_HTML_var _var_type;
      typedef DATA_RS_HTML_out _out_type;
      
      ::CORBA::Long vSize;
      ::CORBA::Long hSize;
      ::CORBA::Long vAlign;
      ::CORBA::Long hAlign;
      ::CORBA::Boolean wrap;
      ::CORBA::Long foreground_r;
      ::CORBA::Long foreground_g;
      ::CORBA::Long foreground_b;
      ::CORBA::Long background_r;
      ::CORBA::Long background_g;
      ::CORBA::Long background_b;
      ::CORBA::Long style;
      ::CORBA::Long fontSize;
      ::CORBA::Boolean bold;
      ::CORBA::Boolean italic;
      ::CORBA::Boolean underline;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_RS_OBJECT;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_RS_OBJECT
        >
      DATA_RS_OBJECT_var;

    typedef
      DATA_RS_OBJECT &
      DATA_RS_OBJECT_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_RS_OBJECT
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_RS_OBJECT_var _var_type;
      typedef DATA_RS_OBJECT_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _tag[30];
      typedef ::CORBA::Char _tag_slice;
      struct _tag_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _tag,
            _tag_slice,
            _tag_tag
          >
        _tag_forany;

      static _tag_slice *
      _tag_alloc (void);

      static void
      _tag_free (
          _tag_slice *_tao_slice);
      
      static _tag_slice *
      _tag_dup (
          const _tag_slice *_tao_slice);
      
      static void
      _tag_copy (
          _tag_slice *_tao_to,
          const _tag_slice *_tao_from
        );

      _tag tag;
      ::CORBA::Boolean hasBorder;
      ::CORBA::Long excelCSV;
      ::CORBA::Boolean simpleBody;
      ::CORBA::Long idAnalisys;
      ::CORBA::Boolean usePlugin;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _pluginName[81];
      typedef ::CORBA::Char _pluginName_slice;
      struct _pluginName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _pluginName,
            _pluginName_slice,
            _pluginName_tag
          >
        _pluginName_forany;

      static _pluginName_slice *
      _pluginName_alloc (void);

      static void
      _pluginName_free (
          _pluginName_slice *_tao_slice);
      
      static _pluginName_slice *
      _pluginName_dup (
          const _pluginName_slice *_tao_slice);
      
      static void
      _pluginName_copy (
          _pluginName_slice *_tao_to,
          const _pluginName_slice *_tao_from
        );

      _pluginName pluginName;
      ::CORBA::Long defaultForeground_r;
      ::CORBA::Long defaultForeground_g;
      ::CORBA::Long defaultForeground_b;
      ::CORBA::Long defaultBackground_r;
      ::CORBA::Long defaultBackground_g;
      ::CORBA::Long defaultBackground_b;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_RS_HEADER;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_RS_HEADER
        >
      DATA_RS_HEADER_var;

    typedef
      DATA_RS_HEADER &
      DATA_RS_HEADER_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_RS_HEADER
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_RS_HEADER_var _var_type;
      typedef DATA_RS_HEADER_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _userLabel[41];
      typedef ::CORBA::Char _userLabel_slice;
      struct _userLabel_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _userLabel,
            _userLabel_slice,
            _userLabel_tag
          >
        _userLabel_forany;

      static _userLabel_slice *
      _userLabel_alloc (void);

      static void
      _userLabel_free (
          _userLabel_slice *_tao_slice);
      
      static _userLabel_slice *
      _userLabel_dup (
          const _userLabel_slice *_tao_slice);
      
      static void
      _userLabel_copy (
          _userLabel_slice *_tao_to,
          const _userLabel_slice *_tao_from
        );

      _userLabel userLabel;
      ::CORBA::Long value;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _userValue[81];
      typedef ::CORBA::Char _userValue_slice;
      struct _userValue_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _userValue,
            _userValue_slice,
            _userValue_tag
          >
        _userValue_forany;

      static _userValue_slice *
      _userValue_alloc (void);

      static void
      _userValue_free (
          _userValue_slice *_tao_slice);
      
      static _userValue_slice *
      _userValue_dup (
          const _userValue_slice *_tao_slice);
      
      static void
      _userValue_copy (
          _userValue_slice *_tao_to,
          const _userValue_slice *_tao_from
        );

      _userValue userValue;
      ::CORBA::Boolean isUrl;
      ::CORBA::Long line;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_RS_BODY;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_RS_BODY
        >
      DATA_RS_BODY_var;

    typedef
      DATA_RS_BODY &
      DATA_RS_BODY_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_RS_BODY
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_RS_BODY_var _var_type;
      typedef DATA_RS_BODY_out _out_type;
      
      ::CORBA::Long source;
      ::CORBA::Long idKey;
      ::CORBA::Long idCounter;
      ::CORBA::Long idScript;
      ::CORBA::Long idPlugin;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _userValue[81];
      typedef ::CORBA::Char _userValue_slice;
      struct _userValue_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _userValue,
            _userValue_slice,
            _userValue_tag
          >
        _userValue_forany;

      static _userValue_slice *
      _userValue_alloc (void);

      static void
      _userValue_free (
          _userValue_slice *_tao_slice);
      
      static _userValue_slice *
      _userValue_dup (
          const _userValue_slice *_tao_slice);
      
      static void
      _userValue_copy (
          _userValue_slice *_tao_to,
          const _userValue_slice *_tao_from
        );

      _userValue userValue;
      ::CORBA::Boolean isUrl;
      ::CORBA::Boolean noTotals;
      ::CORBA::Boolean repeatKey;
      ::CORBA::Long decimals;
      ::CORBA::Long line;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_RS_TOTALIZER;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_RS_TOTALIZER
        >
      DATA_RS_TOTALIZER_var;

    typedef
      DATA_RS_TOTALIZER &
      DATA_RS_TOTALIZER_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_RS_TOTALIZER
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_RS_TOTALIZER_var _var_type;
      typedef DATA_RS_TOTALIZER_out _out_type;
      
      ::CORBA::Long trigger;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _label[41];
      typedef ::CORBA::Char _label_slice;
      struct _label_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _label,
            _label_slice,
            _label_tag
          >
        _label_forany;

      static _label_slice *
      _label_alloc (void);

      static void
      _label_free (
          _label_slice *_tao_slice);
      
      static _label_slice *
      _label_dup (
          const _label_slice *_tao_slice);
      
      static void
      _label_copy (
          _label_slice *_tao_to,
          const _label_slice *_tao_from
        );

      _label label;
      ::CORBA::Boolean redrawHeader;
      ::CORBA::Boolean border;
      ::CORBA::Long line;
      ::CORBA::Boolean useScript;
      ::CORBA::Long idScript;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_RS_FOOTER;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_RS_FOOTER
        >
      DATA_RS_FOOTER_var;

    typedef
      DATA_RS_FOOTER &
      DATA_RS_FOOTER_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_RS_FOOTER
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_RS_FOOTER_var _var_type;
      typedef DATA_RS_FOOTER_out _out_type;
      
      ::CORBA::Long source;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _label[41];
      typedef ::CORBA::Char _label_slice;
      struct _label_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _label,
            _label_slice,
            _label_tag
          >
        _label_forany;

      static _label_slice *
      _label_alloc (void);

      static void
      _label_free (
          _label_slice *_tao_slice);
      
      static _label_slice *
      _label_dup (
          const _label_slice *_tao_slice);
      
      static void
      _label_copy (
          _label_slice *_tao_to,
          const _label_slice *_tao_from
        );

      _label label;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _userValue[81];
      typedef ::CORBA::Char _userValue_slice;
      struct _userValue_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _userValue,
            _userValue_slice,
            _userValue_tag
          >
        _userValue_forany;

      static _userValue_slice *
      _userValue_alloc (void);

      static void
      _userValue_free (
          _userValue_slice *_tao_slice);
      
      static _userValue_slice *
      _userValue_dup (
          const _userValue_slice *_tao_slice);
      
      static void
      _userValue_copy (
          _userValue_slice *_tao_to,
          const _userValue_slice *_tao_from
        );

      _userValue userValue;
      ::CORBA::Boolean isUrl;
      ::CORBA::Long line;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_RS_COMMON;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_RS_COMMON
        >
      DATA_RS_COMMON_var;

    typedef
      DATA_RS_COMMON &
      DATA_RS_COMMON_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_RS_COMMON
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_RS_COMMON_var _var_type;
      typedef DATA_RS_COMMON_out _out_type;
      
      ::CORBA::Long idObject;
      ::CORBA::Long idReportSchema;
      ::CORBA::Long type;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _tag[41];
      typedef ::CORBA::Char _tag_slice;
      struct _tag_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _tag,
            _tag_slice,
            _tag_tag
          >
        _tag_forany;

      static _tag_slice *
      _tag_alloc (void);

      static void
      _tag_free (
          _tag_slice *_tao_slice);
      
      static _tag_slice *
      _tag_dup (
          const _tag_slice *_tao_slice);
      
      static void
      _tag_copy (
          _tag_slice *_tao_to,
          const _tag_slice *_tao_from
        );

      _tag tag;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_RSO_OBJECT;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_RSO_OBJECT
        >
      DATA_RSO_OBJECT_var;

    typedef
      DATA_RSO_OBJECT &
      DATA_RSO_OBJECT_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_RSO_OBJECT
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_RSO_OBJECT_var _var_type;
      typedef DATA_RSO_OBJECT_out _out_type;
      
      net::etech::DATA_RS_COMMON c;
      net::etech::DATA_RS_HTML html;
      net::etech::DATA_RS_OBJECT u;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_REPORTOBJECTSEQ_CH_)
#define _NET_ETECH_REPORTOBJECTSEQ_CH_

    class ReportObjectSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ReportObjectSeq
        >
      ReportObjectSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ReportObjectSeq
        >
      ReportObjectSeq_out;

    class  ReportObjectSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_RSO_OBJECT
            >
    {
    public:
      ReportObjectSeq (void);
      ReportObjectSeq ( ::CORBA::ULong max);
      ReportObjectSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_RSO_OBJECT* buffer,
        ::CORBA::Boolean release = false);
      ReportObjectSeq (const ReportObjectSeq &);
      virtual ~ReportObjectSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ReportObjectSeq_var _var_type;
      typedef ReportObjectSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_RSO_HEADER;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_RSO_HEADER
        >
      DATA_RSO_HEADER_var;

    typedef
      DATA_RSO_HEADER &
      DATA_RSO_HEADER_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_RSO_HEADER
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_RSO_HEADER_var _var_type;
      typedef DATA_RSO_HEADER_out _out_type;
      
      net::etech::DATA_RS_COMMON c;
      net::etech::DATA_RS_HTML html;
      net::etech::DATA_RS_HEADER u;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_REPORTHEADERSEQ_CH_)
#define _NET_ETECH_REPORTHEADERSEQ_CH_

    class ReportHeaderSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ReportHeaderSeq
        >
      ReportHeaderSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ReportHeaderSeq
        >
      ReportHeaderSeq_out;

    class  ReportHeaderSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_RSO_HEADER
            >
    {
    public:
      ReportHeaderSeq (void);
      ReportHeaderSeq ( ::CORBA::ULong max);
      ReportHeaderSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_RSO_HEADER* buffer,
        ::CORBA::Boolean release = false);
      ReportHeaderSeq (const ReportHeaderSeq &);
      virtual ~ReportHeaderSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ReportHeaderSeq_var _var_type;
      typedef ReportHeaderSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_RSO_BODY;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_RSO_BODY
        >
      DATA_RSO_BODY_var;

    typedef
      DATA_RSO_BODY &
      DATA_RSO_BODY_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_RSO_BODY
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_RSO_BODY_var _var_type;
      typedef DATA_RSO_BODY_out _out_type;
      
      net::etech::DATA_RS_COMMON c;
      net::etech::DATA_RS_HTML html;
      net::etech::DATA_RS_BODY u;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_REPORTBODYSEQ_CH_)
#define _NET_ETECH_REPORTBODYSEQ_CH_

    class ReportBodySeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ReportBodySeq
        >
      ReportBodySeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ReportBodySeq
        >
      ReportBodySeq_out;

    class  ReportBodySeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_RSO_BODY
            >
    {
    public:
      ReportBodySeq (void);
      ReportBodySeq ( ::CORBA::ULong max);
      ReportBodySeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_RSO_BODY* buffer,
        ::CORBA::Boolean release = false);
      ReportBodySeq (const ReportBodySeq &);
      virtual ~ReportBodySeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ReportBodySeq_var _var_type;
      typedef ReportBodySeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_RSO_TOTALIZER;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_RSO_TOTALIZER
        >
      DATA_RSO_TOTALIZER_var;

    typedef
      DATA_RSO_TOTALIZER &
      DATA_RSO_TOTALIZER_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_RSO_TOTALIZER
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_RSO_TOTALIZER_var _var_type;
      typedef DATA_RSO_TOTALIZER_out _out_type;
      
      net::etech::DATA_RS_COMMON c;
      net::etech::DATA_RS_HTML html;
      net::etech::DATA_RS_TOTALIZER u;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_REPORTTOTALIZERSEQ_CH_)
#define _NET_ETECH_REPORTTOTALIZERSEQ_CH_

    class ReportTotalizerSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ReportTotalizerSeq
        >
      ReportTotalizerSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ReportTotalizerSeq
        >
      ReportTotalizerSeq_out;

    class  ReportTotalizerSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_RSO_TOTALIZER
            >
    {
    public:
      ReportTotalizerSeq (void);
      ReportTotalizerSeq ( ::CORBA::ULong max);
      ReportTotalizerSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_RSO_TOTALIZER* buffer,
        ::CORBA::Boolean release = false);
      ReportTotalizerSeq (const ReportTotalizerSeq &);
      virtual ~ReportTotalizerSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ReportTotalizerSeq_var _var_type;
      typedef ReportTotalizerSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_RSO_FOOTER;

    typedef
      ::TAO_Fixed_Var_T<
          DATA_RSO_FOOTER
        >
      DATA_RSO_FOOTER_var;

    typedef
      DATA_RSO_FOOTER &
      DATA_RSO_FOOTER_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_RSO_FOOTER
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_RSO_FOOTER_var _var_type;
      typedef DATA_RSO_FOOTER_out _out_type;
      
      net::etech::DATA_RS_COMMON c;
      net::etech::DATA_RS_HTML html;
      net::etech::DATA_RS_FOOTER u;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_REPORTFOOTERSEQ_CH_)
#define _NET_ETECH_REPORTFOOTERSEQ_CH_

    class ReportFooterSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ReportFooterSeq
        >
      ReportFooterSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ReportFooterSeq
        >
      ReportFooterSeq_out;

    class  ReportFooterSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_RSO_FOOTER
            >
    {
    public:
      ReportFooterSeq (void);
      ReportFooterSeq ( ::CORBA::ULong max);
      ReportFooterSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_RSO_FOOTER* buffer,
        ::CORBA::Boolean release = false);
      ReportFooterSeq (const ReportFooterSeq &);
      virtual ~ReportFooterSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ReportFooterSeq_var _var_type;
      typedef ReportFooterSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DATA_REPORTSCHEMA;

    typedef
      ::TAO_Var_Var_T<
          DATA_REPORTSCHEMA
        >
      DATA_REPORTSCHEMA_var;

    typedef
      ::TAO_Out_T<
          DATA_REPORTSCHEMA
        >
      DATA_REPORTSCHEMA_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DATA_REPORTSCHEMA
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DATA_REPORTSCHEMA_var _var_type;
      typedef DATA_REPORTSCHEMA_out _out_type;
      
      ::CORBA::Long idReportSchema;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _tag[30];
      typedef ::CORBA::Char _tag_slice;
      struct _tag_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _tag,
            _tag_slice,
            _tag_tag
          >
        _tag_forany;

      static _tag_slice *
      _tag_alloc (void);

      static void
      _tag_free (
          _tag_slice *_tao_slice);
      
      static _tag_slice *
      _tag_dup (
          const _tag_slice *_tao_slice);
      
      static void
      _tag_copy (
          _tag_slice *_tao_to,
          const _tag_slice *_tao_from
        );

      _tag tag;
      net::etech::DATA_RSO_OBJECT objO;
      net::etech::ReportHeaderSeq hdrV;
      net::etech::ReportBodySeq bdyV;
      net::etech::ReportTotalizerSeq totV;
      net::etech::ReportFooterSeq fooV;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_REPORTSCHEMASEQ_CH_)
#define _NET_ETECH_REPORTSCHEMASEQ_CH_

    class ReportSchemaSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          ReportSchemaSeq
        >
      ReportSchemaSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ReportSchemaSeq
        >
      ReportSchemaSeq_out;

    class  ReportSchemaSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_REPORTSCHEMA
            >
    {
    public:
      ReportSchemaSeq (void);
      ReportSchemaSeq ( ::CORBA::ULong max);
      ReportSchemaSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_REPORTSCHEMA* buffer,
        ::CORBA::Boolean release = false);
      ReportSchemaSeq (const ReportSchemaSeq &);
      virtual ~ReportSchemaSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ReportSchemaSeq_var _var_type;
      typedef ReportSchemaSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_LONGSEQ_CH_)
#define _NET_ETECH_LONGSEQ_CH_

    class LongSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          LongSeq
        >
      LongSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          LongSeq
        >
      LongSeq_out;

    class  LongSeq
      : public
          ::TAO::unbounded_value_sequence<
              ::CORBA::Long
            >
    {
    public:
      LongSeq (void);
      LongSeq ( ::CORBA::ULong max);
      LongSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Long* buffer,
        ::CORBA::Boolean release = false);
      LongSeq (const LongSeq &);
      virtual ~LongSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef LongSeq_var _var_type;
      typedef LongSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct STRUCT_PARAMS;

    typedef
      ::TAO_Var_Var_T<
          STRUCT_PARAMS
        >
      STRUCT_PARAMS_var;

    typedef
      ::TAO_Out_T<
          STRUCT_PARAMS
        >
      STRUCT_PARAMS_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  STRUCT_PARAMS
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef STRUCT_PARAMS_var _var_type;
      typedef STRUCT_PARAMS_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _Name[160];
      typedef ::CORBA::Char _Name_slice;
      struct _Name_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _Name,
            _Name_slice,
            _Name_tag
          >
        _Name_forany;

      static _Name_slice *
      _Name_alloc (void);

      static void
      _Name_free (
          _Name_slice *_tao_slice);
      
      static _Name_slice *
      _Name_dup (
          const _Name_slice *_tao_slice);
      
      static void
      _Name_copy (
          _Name_slice *_tao_to,
          const _Name_slice *_tao_from
        );

      _Name Name;
      ::CORBA::Long AnalysisType;
      ::CORBA::Long NetworkRealTime;
      ::CORBA::Long DataType;
      ::CORBA::Long OutputType;
      net::etech::DateSeq ElaborationData;
      net::etech::LongSeq Fep;
      ::CORBA::Long Relation;
      ::CORBA::Long RelationDirection;
      net::etech::RELSeq Filters;
      ::CORBA::Boolean OppositeRestriction;
      ::CORBA::Boolean FlagSort;
      ::CORBA::Long ElementToSort;
      ::CORBA::Boolean Ascendent;
      ::CORBA::Boolean Reserved;
      ::CORBA::Boolean SingleRelation;
      ::CORBA::Boolean IsPercent;
      ::CORBA::Long HexValue;
      ::CORBA::Boolean isScheduled;
      ::CORBA::Long idUser;
      ::CORBA::Long idJob;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _Description[61];
      typedef ::CORBA::Char _Description_slice;
      struct _Description_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _Description,
            _Description_slice,
            _Description_tag
          >
        _Description_forany;

      static _Description_slice *
      _Description_alloc (void);

      static void
      _Description_free (
          _Description_slice *_tao_slice);
      
      static _Description_slice *
      _Description_dup (
          const _Description_slice *_tao_slice);
      
      static void
      _Description_copy (
          _Description_slice *_tao_to,
          const _Description_slice *_tao_from
        );

      _Description Description;
      ::CORBA::Long idReportSchema;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _user[32];
      typedef ::CORBA::Char _user_slice;
      struct _user_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _user,
            _user_slice,
            _user_tag
          >
        _user_forany;

      static _user_slice *
      _user_alloc (void);

      static void
      _user_free (
          _user_slice *_tao_slice);
      
      static _user_slice *
      _user_dup (
          const _user_slice *_tao_slice);
      
      static void
      _user_copy (
          _user_slice *_tao_to,
          const _user_slice *_tao_from
        );

      _user user;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _user_ip[16];
      typedef ::CORBA::Char _user_ip_slice;
      struct _user_ip_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _user_ip,
            _user_ip_slice,
            _user_ip_tag
          >
        _user_ip_forany;

      static _user_ip_slice *
      _user_ip_alloc (void);

      static void
      _user_ip_free (
          _user_ip_slice *_tao_slice);
      
      static _user_ip_slice *
      _user_ip_dup (
          const _user_ip_slice *_tao_slice);
      
      static void
      _user_ip_copy (
          _user_ip_slice *_tao_to,
          const _user_ip_slice *_tao_from
        );

      _user_ip user_ip;
      ::CORBA::Boolean freeFormat;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _ffRelation[10];
      typedef ::CORBA::Long _ffRelation_slice;
      struct _ffRelation_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _ffRelation,
            _ffRelation_slice,
            _ffRelation_tag
          >
        _ffRelation_forany;

      static _ffRelation_slice *
      _ffRelation_alloc (void);

      static void
      _ffRelation_free (
          _ffRelation_slice *_tao_slice);
      
      static _ffRelation_slice *
      _ffRelation_dup (
          const _ffRelation_slice *_tao_slice);
      
      static void
      _ffRelation_copy (
          _ffRelation_slice *_tao_to,
          const _ffRelation_slice *_tao_from
        );

      _ffRelation ffRelation;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_DRSEQ_CH_)
#define _NET_ETECH_DRSEQ_CH_

    class DRSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          DRSeq
        >
      DRSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          DRSeq
        >
      DRSeq_out;

    class  DRSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_DR
            >
    {
    public:
      DRSeq (void);
      DRSeq ( ::CORBA::ULong max);
      DRSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_DR* buffer,
        ::CORBA::Boolean release = false);
      DRSeq (const DRSeq &);
      virtual ~DRSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DRSeq_var _var_type;
      typedef DRSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_RELATIONSEQ_CH_)
#define _NET_ETECH_RELATIONSEQ_CH_

    class RelationSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          RelationSeq
        >
      RelationSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          RelationSeq
        >
      RelationSeq_out;

    class  RelationSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_RELATIONS
            >
    {
    public:
      RelationSeq (void);
      RelationSeq ( ::CORBA::ULong max);
      RelationSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_RELATIONS* buffer,
        ::CORBA::Boolean release = false);
      RelationSeq (const RelationSeq &);
      virtual ~RelationSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef RelationSeq_var _var_type;
      typedef RelationSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_ELEMENTSEQ_CH_)
#define _NET_ETECH_ELEMENTSEQ_CH_

    class ElementSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ElementSeq
        >
      ElementSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ElementSeq
        >
      ElementSeq_out;

    class  ElementSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_DATAELEMENT
            >
    {
    public:
      ElementSeq (void);
      ElementSeq ( ::CORBA::ULong max);
      ElementSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_DATAELEMENT* buffer,
        ::CORBA::Boolean release = false);
      ElementSeq (const ElementSeq &);
      virtual ~ElementSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ElementSeq_var _var_type;
      typedef ElementSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_FEPSEQ_CH_)
#define _NET_ETECH_FEPSEQ_CH_

    class FEPSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          FEPSeq
        >
      FEPSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          FEPSeq
        >
      FEPSeq_out;

    class  FEPSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_FEP
            >
    {
    public:
      FEPSeq (void);
      FEPSeq ( ::CORBA::ULong max);
      FEPSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_FEP* buffer,
        ::CORBA::Boolean release = false);
      FEPSeq (const FEPSeq &);
      virtual ~FEPSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef FEPSeq_var _var_type;
      typedef FEPSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_ANALISYSSEQ_CH_)
#define _NET_ETECH_ANALISYSSEQ_CH_

    class AnalisysSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          AnalisysSeq
        >
      AnalisysSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          AnalisysSeq
        >
      AnalisysSeq_out;

    class  AnalisysSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_ANALYSISTYPE
            >
    {
    public:
      AnalisysSeq (void);
      AnalisysSeq ( ::CORBA::ULong max);
      AnalisysSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_ANALYSISTYPE* buffer,
        ::CORBA::Boolean release = false);
      AnalisysSeq (const AnalisysSeq &);
      virtual ~AnalisysSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef AnalisysSeq_var _var_type;
      typedef AnalisysSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_EXCEPTIONSEQ_CH_)
#define _NET_ETECH_EXCEPTIONSEQ_CH_

    class ExceptionSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ExceptionSeq
        >
      ExceptionSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ExceptionSeq
        >
      ExceptionSeq_out;

    class  ExceptionSeq
      : public
          ::TAO::unbounded_value_sequence<
              DATA_EXCEPTIONS
            >
    {
    public:
      ExceptionSeq (void);
      ExceptionSeq ( ::CORBA::ULong max);
      ExceptionSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DATA_EXCEPTIONS* buffer,
        ::CORBA::Boolean release = false);
      ExceptionSeq (const ExceptionSeq &);
      virtual ~ExceptionSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ExceptionSeq_var _var_type;
      typedef ExceptionSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    class TypeValore;

    typedef
      ::TAO_Fixed_Var_T<
          TypeValore
        >
      TypeValore_var;

    typedef
      TypeValore &
      TypeValore_out;

    class  TypeValore
    {
    public:
      TypeValore (void);
      TypeValore (const TypeValore &);
      ~TypeValore (void);

      TypeValore &operator= (const TypeValore &);

      // TAO_IDL - Generated from
      // be/be_visitor_union/discriminant_ch.cpp:103

      void _d ( ::CORBA::Short);
      ::CORBA::Short _d (void) const;

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef TypeValore_var _var_type;
      typedef TypeValore_out _out_type;

      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/public_ch.cpp:452

      void UnsignedInteger ( ::CORBA::ULongLong);
      ::CORBA::ULongLong UnsignedInteger (void) const;

      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/public_ch.cpp:452

      void Integer ( ::CORBA::LongLong);
      ::CORBA::LongLong Integer (void) const;

      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/public_ch.cpp:452

      void Decimal ( ::CORBA::Double);
      ::CORBA::Double Decimal (void) const;

      // TAO_IDL - Generated from
      // be/be_visitor_union/union_ch.cpp:124

      void _default (void);
    private:
      ::CORBA::Short disc_;

      union
      {
        // TAO_IDL - Generated from
        // be/be_visitor_union_branch/private_ch.cpp:380
        ::CORBA::ULongLong UnsignedInteger_;
        // TAO_IDL - Generated from
        // be/be_visitor_union_branch/private_ch.cpp:380
        ::CORBA::LongLong Integer_;
        // TAO_IDL - Generated from
        // be/be_visitor_union_branch/private_ch.cpp:380
        ::CORBA::Double Decimal_;
      } u_;

      /// TAO extension - frees any allocated storage.
      void _reset (void);
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct PARAM;

    typedef
      ::TAO_Fixed_Var_T<
          PARAM
        >
      PARAM_var;

    typedef
      PARAM &
      PARAM_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  PARAM
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef PARAM_var _var_type;
      typedef PARAM_out _out_type;
      
      ::CORBA::Long IDNodo;
      ::CORBA::Long Type;
      ::CORBA::Boolean isPercent;
      

      net::etech::TypeValore Value;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_PARAMETER_CH_)
#define _NET_ETECH_PARAMETER_CH_

    class Parameter;

    typedef
      ::TAO_FixedSeq_Var_T<
          Parameter
        >
      Parameter_var;

    typedef
      ::TAO_Seq_Out_T<
          Parameter
        >
      Parameter_out;

    class  Parameter
      : public
          ::TAO::unbounded_value_sequence<
              PARAM
            >
    {
    public:
      Parameter (void);
      Parameter ( ::CORBA::ULong max);
      Parameter (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        PARAM* buffer,
        ::CORBA::Boolean release = false);
      Parameter (const Parameter &);
      virtual ~Parameter (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef Parameter_var _var_type;
      typedef Parameter_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_USERPOOLSEQ_CH_)
#define _NET_ETECH_USERPOOLSEQ_CH_

    class UserPoolSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          UserPoolSeq
        >
      UserPoolSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          UserPoolSeq
        >
      UserPoolSeq_out;

    class  UserPoolSeq
      : public
          ::TAO::unbounded_value_sequence<
              ::CORBA::Octet
            >
    {
    public:
      UserPoolSeq (void);
      UserPoolSeq ( ::CORBA::ULong max);
      UserPoolSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Octet* buffer,
        ::CORBA::Boolean release = false);
      UserPoolSeq (const UserPoolSeq &);
      virtual ~UserPoolSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef UserPoolSeq_var _var_type;
      typedef UserPoolSeq_out _out_type;

      

#if (TAO_NO_COPY_OCTET_SEQUENCES == 1)
      UserPoolSeq (
          ::CORBA::ULong length,
          const ACE_Message_Block* mb
        )
        : ::TAO::unbounded_value_sequence< ::CORBA::Octet> (length, mb) {}
#endif /* TAO_NO_COPY_OCTET_SEQUENCE == 1 */
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_PARAMETERKEYS_CH_)
#define _NET_ETECH_PARAMETERKEYS_CH_

    class ParameterKeys;

    typedef
      ::TAO_VarSeq_Var_T<
          ParameterKeys
        >
      ParameterKeys_var;

    typedef
      ::TAO_Seq_Out_T<
          ParameterKeys
        >
      ParameterKeys_out;

    class  ParameterKeys
      : public
          ::TAO::unbounded_basic_string_sequence<char>
    {
    public:
      ParameterKeys (void);
      ParameterKeys ( ::CORBA::ULong max);
      ParameterKeys (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Char ** buffer,
        ::CORBA::Boolean release = false);
      ParameterKeys (const ParameterKeys &);
      virtual ~ParameterKeys (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ParameterKeys_var _var_type;
      typedef ParameterKeys_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_IDLISTSEQ_CH_)
#define _NET_ETECH_IDLISTSEQ_CH_

    class IDListSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          IDListSeq
        >
      IDListSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          IDListSeq
        >
      IDListSeq_out;

    class  IDListSeq
      : public
          ::TAO::unbounded_basic_string_sequence<char>
    {
    public:
      IDListSeq (void);
      IDListSeq ( ::CORBA::ULong max);
      IDListSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Char ** buffer,
        ::CORBA::Boolean release = false);
      IDListSeq (const IDListSeq &);
      virtual ~IDListSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef IDListSeq_var _var_type;
      typedef IDListSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct FEP_NODE;

    typedef
      ::TAO_Var_Var_T<
          FEP_NODE
        >
      FEP_NODE_var;

    typedef
      ::TAO_Out_T<
          FEP_NODE
        >
      FEP_NODE_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  FEP_NODE
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef FEP_NODE_var _var_type;
      typedef FEP_NODE_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _Key[400];
      typedef ::CORBA::Char _Key_slice;
      struct _Key_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _Key,
            _Key_slice,
            _Key_tag
          >
        _Key_forany;

      static _Key_slice *
      _Key_alloc (void);

      static void
      _Key_free (
          _Key_slice *_tao_slice);
      
      static _Key_slice *
      _Key_dup (
          const _Key_slice *_tao_slice);
      
      static void
      _Key_copy (
          _Key_slice *_tao_to,
          const _Key_slice *_tao_from
        );

      _Key Key;
      net::etech::Parameter ParamSeq;
      net::etech::UserPoolSeq userPool;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_BTREESEQ_CH_)
#define _NET_ETECH_BTREESEQ_CH_

    class BtreeSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          BtreeSeq
        >
      BtreeSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          BtreeSeq
        >
      BtreeSeq_out;

    class  BtreeSeq
      : public
          ::TAO::unbounded_value_sequence<
              FEP_NODE
            >
    {
    public:
      BtreeSeq (void);
      BtreeSeq ( ::CORBA::ULong max);
      BtreeSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        FEP_NODE* buffer,
        ::CORBA::Boolean release = false);
      BtreeSeq (const BtreeSeq &);
      virtual ~BtreeSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef BtreeSeq_var _var_type;
      typedef BtreeSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:373

    typedef ::CORBA::ULong BtreeID;
    typedef ::CORBA::ULong_out BtreeID_out;

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct PIVOTDATANODE;

    typedef
      ::TAO_Var_Var_T<
          PIVOTDATANODE
        >
      PIVOTDATANODE_var;

    typedef
      ::TAO_Out_T<
          PIVOTDATANODE
        >
      PIVOTDATANODE_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  PIVOTDATANODE
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef PIVOTDATANODE_var _var_type;
      typedef PIVOTDATANODE_out _out_type;
      
      net::etech::ParameterKeys pkeySeq;
      net::etech::Parameter ParamSeq;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_PIVOTDATANODESEQ_CH_)
#define _NET_ETECH_PIVOTDATANODESEQ_CH_

    class PivotDataNodeSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          PivotDataNodeSeq
        >
      PivotDataNodeSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          PivotDataNodeSeq
        >
      PivotDataNodeSeq_out;

    class  PivotDataNodeSeq
      : public
          ::TAO::unbounded_value_sequence<
              PIVOTDATANODE
            >
    {
    public:
      PivotDataNodeSeq (void);
      PivotDataNodeSeq ( ::CORBA::ULong max);
      PivotDataNodeSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        PIVOTDATANODE* buffer,
        ::CORBA::Boolean release = false);
      PivotDataNodeSeq (const PivotDataNodeSeq &);
      virtual ~PivotDataNodeSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef PivotDataNodeSeq_var _var_type;
      typedef PivotDataNodeSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct PIVOTREQ;

    typedef
      ::TAO_Var_Var_T<
          PIVOTREQ
        >
      PIVOTREQ_var;

    typedef
      ::TAO_Out_T<
          PIVOTREQ
        >
      PIVOTREQ_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  PIVOTREQ
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef PIVOTREQ_var _var_type;
      typedef PIVOTREQ_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Boolean _enabledKeys[10];
      typedef ::CORBA::Boolean _enabledKeys_slice;
      struct _enabledKeys_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _enabledKeys,
            _enabledKeys_slice,
            _enabledKeys_tag
          >
        _enabledKeys_forany;

      static _enabledKeys_slice *
      _enabledKeys_alloc (void);

      static void
      _enabledKeys_free (
          _enabledKeys_slice *_tao_slice);
      
      static _enabledKeys_slice *
      _enabledKeys_dup (
          const _enabledKeys_slice *_tao_slice);
      
      static void
      _enabledKeys_copy (
          _enabledKeys_slice *_tao_to,
          const _enabledKeys_slice *_tao_from
        );

      _enabledKeys enabledKeys;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _enabledColumns[60];
      typedef ::CORBA::Long _enabledColumns_slice;
      struct _enabledColumns_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _enabledColumns,
            _enabledColumns_slice,
            _enabledColumns_tag
          >
        _enabledColumns_forany;

      static _enabledColumns_slice *
      _enabledColumns_alloc (void);

      static void
      _enabledColumns_free (
          _enabledColumns_slice *_tao_slice);
      
      static _enabledColumns_slice *
      _enabledColumns_dup (
          const _enabledColumns_slice *_tao_slice);
      
      static void
      _enabledColumns_copy (
          _enabledColumns_slice *_tao_to,
          const _enabledColumns_slice *_tao_from
        );

      _enabledColumns enabledColumns;
      ::CORBA::Long sortColumn;
      ::CORBA::Boolean descending;
      ::TAO::String_Manager focusOn;
      ::CORBA::Long last_row;
      ::TAO::String_Manager last_key;
      ::CORBA::Long elementToSort;
      ::CORBA::Boolean percent;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct INVOKE_STATUS;

    typedef
      ::TAO_Fixed_Var_T<
          INVOKE_STATUS
        >
      INVOKE_STATUS_var;

    typedef
      INVOKE_STATUS &
      INVOKE_STATUS_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  INVOKE_STATUS
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef INVOKE_STATUS_var _var_type;
      typedef INVOKE_STATUS_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _percent[10];
      typedef ::CORBA::Long _percent_slice;
      struct _percent_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _percent,
            _percent_slice,
            _percent_tag
          >
        _percent_forany;

      static _percent_slice *
      _percent_alloc (void);

      static void
      _percent_free (
          _percent_slice *_tao_slice);
      
      static _percent_slice *
      _percent_dup (
          const _percent_slice *_tao_slice);
      
      static void
      _percent_copy (
          _percent_slice *_tao_to,
          const _percent_slice *_tao_from
        );

      _percent percent;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _desc[10][20];
      typedef ::CORBA::Char _desc_slice[20];
      struct _desc_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _desc,
            _desc_slice,
            _desc_tag
          >
        _desc_forany;

      static _desc_slice *
      _desc_alloc (void);

      static void
      _desc_free (
          _desc_slice *_tao_slice);
      
      static _desc_slice *
      _desc_dup (
          const _desc_slice *_tao_slice);
      
      static void
      _desc_copy (
          _desc_slice *_tao_to,
          const _desc_slice *_tao_from
        );

      _desc desc;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _url[10][512];
      typedef ::CORBA::Char _url_slice[512];
      struct _url_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _url,
            _url_slice,
            _url_tag
          >
        _url_forany;

      static _url_slice *
      _url_alloc (void);

      static void
      _url_free (
          _url_slice *_tao_slice);
      
      static _url_slice *
      _url_dup (
          const _url_slice *_tao_slice);
      
      static void
      _url_copy (
          _url_slice *_tao_to,
          const _url_slice *_tao_from
        );

      _url url;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct DIR_ENTRY;

    typedef
      ::TAO_Fixed_Var_T<
          DIR_ENTRY
        >
      DIR_ENTRY_var;

    typedef
      DIR_ENTRY &
      DIR_ENTRY_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  DIR_ENTRY
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DIR_ENTRY_var _var_type;
      typedef DIR_ENTRY_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _name[257];
      typedef ::CORBA::Char _name_slice;
      struct _name_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _name,
            _name_slice,
            _name_tag
          >
        _name_forany;

      static _name_slice *
      _name_alloc (void);

      static void
      _name_free (
          _name_slice *_tao_slice);
      
      static _name_slice *
      _name_dup (
          const _name_slice *_tao_slice);
      
      static void
      _name_copy (
          _name_slice *_tao_to,
          const _name_slice *_tao_from
        );

      _name name;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _date[15];
      typedef ::CORBA::Char _date_slice;
      struct _date_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _date,
            _date_slice,
            _date_tag
          >
        _date_forany;

      static _date_slice *
      _date_alloc (void);

      static void
      _date_free (
          _date_slice *_tao_slice);
      
      static _date_slice *
      _date_dup (
          const _date_slice *_tao_slice);
      
      static void
      _date_copy (
          _date_slice *_tao_to,
          const _date_slice *_tao_from
        );

      _date date;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_DIRENTRYSEQ_CH_)
#define _NET_ETECH_DIRENTRYSEQ_CH_

    class DirEntrySeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          DirEntrySeq
        >
      DirEntrySeq_var;

    typedef
      ::TAO_Seq_Out_T<
          DirEntrySeq
        >
      DirEntrySeq_out;

    class  DirEntrySeq
      : public
          ::TAO::unbounded_value_sequence<
              DIR_ENTRY
            >
    {
    public:
      DirEntrySeq (void);
      DirEntrySeq ( ::CORBA::ULong max);
      DirEntrySeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        DIR_ENTRY* buffer,
        ::CORBA::Boolean release = false);
      DirEntrySeq (const DirEntrySeq &);
      virtual ~DirEntrySeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DirEntrySeq_var _var_type;
      typedef DirEntrySeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ADAMS_USER;

    typedef
      ::TAO_Fixed_Var_T<
          ADAMS_USER
        >
      ADAMS_USER_var;

    typedef
      ADAMS_USER &
      ADAMS_USER_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  ADAMS_USER
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ADAMS_USER_var _var_type;
      typedef ADAMS_USER_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _login[32];
      typedef ::CORBA::Char _login_slice;
      struct _login_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _login,
            _login_slice,
            _login_tag
          >
        _login_forany;

      static _login_slice *
      _login_alloc (void);

      static void
      _login_free (
          _login_slice *_tao_slice);
      
      static _login_slice *
      _login_dup (
          const _login_slice *_tao_slice);
      
      static void
      _login_copy (
          _login_slice *_tao_to,
          const _login_slice *_tao_from
        );

      _login login;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _passwd[80];
      typedef ::CORBA::Char _passwd_slice;
      struct _passwd_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _passwd,
            _passwd_slice,
            _passwd_tag
          >
        _passwd_forany;

      static _passwd_slice *
      _passwd_alloc (void);

      static void
      _passwd_free (
          _passwd_slice *_tao_slice);
      
      static _passwd_slice *
      _passwd_dup (
          const _passwd_slice *_tao_slice);
      
      static void
      _passwd_copy (
          _passwd_slice *_tao_to,
          const _passwd_slice *_tao_from
        );

      _passwd passwd;
      ::CORBA::Boolean userAdmin;
      ::CORBA::Boolean configAdmin;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _enabledConfigurations[20][160];
      typedef ::CORBA::Char _enabledConfigurations_slice[160];
      struct _enabledConfigurations_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _enabledConfigurations,
            _enabledConfigurations_slice,
            _enabledConfigurations_tag
          >
        _enabledConfigurations_forany;

      static _enabledConfigurations_slice *
      _enabledConfigurations_alloc (void);

      static void
      _enabledConfigurations_free (
          _enabledConfigurations_slice *_tao_slice);
      
      static _enabledConfigurations_slice *
      _enabledConfigurations_dup (
          const _enabledConfigurations_slice *_tao_slice);
      
      static void
      _enabledConfigurations_copy (
          _enabledConfigurations_slice *_tao_to,
          const _enabledConfigurations_slice *_tao_from
        );

      _enabledConfigurations enabledConfigurations;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_ADAMSUSERSEQ_CH_)
#define _NET_ETECH_ADAMSUSERSEQ_CH_

    class AdamsUserSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          AdamsUserSeq
        >
      AdamsUserSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          AdamsUserSeq
        >
      AdamsUserSeq_out;

    class  AdamsUserSeq
      : public
          ::TAO::unbounded_value_sequence<
              ADAMS_USER
            >
    {
    public:
      AdamsUserSeq (void);
      AdamsUserSeq ( ::CORBA::ULong max);
      AdamsUserSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ADAMS_USER* buffer,
        ::CORBA::Boolean release = false);
      AdamsUserSeq (const AdamsUserSeq &);
      virtual ~AdamsUserSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef AdamsUserSeq_var _var_type;
      typedef AdamsUserSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ALARM_RELATION;

    typedef
      ::TAO_Fixed_Var_T<
          ALARM_RELATION
        >
      ALARM_RELATION_var;

    typedef
      ALARM_RELATION &
      ALARM_RELATION_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  ALARM_RELATION
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ALARM_RELATION_var _var_type;
      typedef ALARM_RELATION_out _out_type;
      
      ::CORBA::Long idAlarmRelation;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _description[160];
      typedef ::CORBA::Char _description_slice;
      struct _description_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _description,
            _description_slice,
            _description_tag
          >
        _description_forany;

      static _description_slice *
      _description_alloc (void);

      static void
      _description_free (
          _description_slice *_tao_slice);
      
      static _description_slice *
      _description_dup (
          const _description_slice *_tao_slice);
      
      static void
      _description_copy (
          _description_slice *_tao_to,
          const _description_slice *_tao_from
        );

      _description description;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _relationElements[10];
      typedef ::CORBA::Long _relationElements_slice;
      struct _relationElements_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _relationElements,
            _relationElements_slice,
            _relationElements_tag
          >
        _relationElements_forany;

      static _relationElements_slice *
      _relationElements_alloc (void);

      static void
      _relationElements_free (
          _relationElements_slice *_tao_slice);
      
      static _relationElements_slice *
      _relationElements_dup (
          const _relationElements_slice *_tao_slice);
      
      static void
      _relationElements_copy (
          _relationElements_slice *_tao_to,
          const _relationElements_slice *_tao_from
        );

      _relationElements relationElements;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _relationElementsEnabled[10];
      typedef ::CORBA::Long _relationElementsEnabled_slice;
      struct _relationElementsEnabled_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _relationElementsEnabled,
            _relationElementsEnabled_slice,
            _relationElementsEnabled_tag
          >
        _relationElementsEnabled_forany;

      static _relationElementsEnabled_slice *
      _relationElementsEnabled_alloc (void);

      static void
      _relationElementsEnabled_free (
          _relationElementsEnabled_slice *_tao_slice);
      
      static _relationElementsEnabled_slice *
      _relationElementsEnabled_dup (
          const _relationElementsEnabled_slice *_tao_slice);
      
      static void
      _relationElementsEnabled_copy (
          _relationElementsEnabled_slice *_tao_to,
          const _relationElementsEnabled_slice *_tao_from
        );

      _relationElementsEnabled relationElementsEnabled;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _alarmHandlers[20];
      typedef ::CORBA::Long _alarmHandlers_slice;
      struct _alarmHandlers_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _alarmHandlers,
            _alarmHandlers_slice,
            _alarmHandlers_tag
          >
        _alarmHandlers_forany;

      static _alarmHandlers_slice *
      _alarmHandlers_alloc (void);

      static void
      _alarmHandlers_free (
          _alarmHandlers_slice *_tao_slice);
      
      static _alarmHandlers_slice *
      _alarmHandlers_dup (
          const _alarmHandlers_slice *_tao_slice);
      
      static void
      _alarmHandlers_copy (
          _alarmHandlers_slice *_tao_to,
          const _alarmHandlers_slice *_tao_from
        );

      _alarmHandlers alarmHandlers;
      ::CORBA::Long timeFractionElementId;
      ::CORBA::Long familyId;
      ::CORBA::Long countersKitId;
      ::CORBA::Long idConditionScript;
      ::CORBA::Long idConditionPlugin;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ALARM_GENERATOR;

    typedef
      ::TAO_Fixed_Var_T<
          ALARM_GENERATOR
        >
      ALARM_GENERATOR_var;

    typedef
      ALARM_GENERATOR &
      ALARM_GENERATOR_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  ALARM_GENERATOR
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ALARM_GENERATOR_var _var_type;
      typedef ALARM_GENERATOR_out _out_type;
      
      ::CORBA::Long idAlarmGenerator;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _shortDescription[30];
      typedef ::CORBA::Char _shortDescription_slice;
      struct _shortDescription_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _shortDescription,
            _shortDescription_slice,
            _shortDescription_tag
          >
        _shortDescription_forany;

      static _shortDescription_slice *
      _shortDescription_alloc (void);

      static void
      _shortDescription_free (
          _shortDescription_slice *_tao_slice);
      
      static _shortDescription_slice *
      _shortDescription_dup (
          const _shortDescription_slice *_tao_slice);
      
      static void
      _shortDescription_copy (
          _shortDescription_slice *_tao_to,
          const _shortDescription_slice *_tao_from
        );

      _shortDescription shortDescription;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _longDescription[160];
      typedef ::CORBA::Char _longDescription_slice;
      struct _longDescription_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _longDescription,
            _longDescription_slice,
            _longDescription_tag
          >
        _longDescription_forany;

      static _longDescription_slice *
      _longDescription_alloc (void);

      static void
      _longDescription_free (
          _longDescription_slice *_tao_slice);
      
      static _longDescription_slice *
      _longDescription_dup (
          const _longDescription_slice *_tao_slice);
      
      static void
      _longDescription_copy (
          _longDescription_slice *_tao_to,
          const _longDescription_slice *_tao_from
        );

      _longDescription longDescription;
      ::CORBA::Long idPlugin;
      ::CORBA::Boolean thresholdManagement;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _idThresholdGenerator[10];
      typedef ::CORBA::Long _idThresholdGenerator_slice;
      struct _idThresholdGenerator_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _idThresholdGenerator,
            _idThresholdGenerator_slice,
            _idThresholdGenerator_tag
          >
        _idThresholdGenerator_forany;

      static _idThresholdGenerator_slice *
      _idThresholdGenerator_alloc (void);

      static void
      _idThresholdGenerator_free (
          _idThresholdGenerator_slice *_tao_slice);
      
      static _idThresholdGenerator_slice *
      _idThresholdGenerator_dup (
          const _idThresholdGenerator_slice *_tao_slice);
      
      static void
      _idThresholdGenerator_copy (
          _idThresholdGenerator_slice *_tao_to,
          const _idThresholdGenerator_slice *_tao_from
        );

      _idThresholdGenerator idThresholdGenerator;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct THRESHOLD_GENERATOR;

    typedef
      ::TAO_Fixed_Var_T<
          THRESHOLD_GENERATOR
        >
      THRESHOLD_GENERATOR_var;

    typedef
      THRESHOLD_GENERATOR &
      THRESHOLD_GENERATOR_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  THRESHOLD_GENERATOR
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef THRESHOLD_GENERATOR_var _var_type;
      typedef THRESHOLD_GENERATOR_out _out_type;
      
      ::CORBA::Long idThresholdGenerator;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _description[160];
      typedef ::CORBA::Char _description_slice;
      struct _description_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _description,
            _description_slice,
            _description_tag
          >
        _description_forany;

      static _description_slice *
      _description_alloc (void);

      static void
      _description_free (
          _description_slice *_tao_slice);
      
      static _description_slice *
      _description_dup (
          const _description_slice *_tao_slice);
      
      static void
      _description_copy (
          _description_slice *_tao_to,
          const _description_slice *_tao_from
        );

      _description description;
      ::CORBA::Long typeThreshold;
      ::CORBA::Boolean enableHolydayThreshold;
      ::CORBA::Long idPlugin;
      ::CORBA::Long thresholdPersistence;
      ::CORBA::Long hoursAggregate;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ALARM_PARAMS;

    typedef
      ::TAO_Fixed_Var_T<
          ALARM_PARAMS
        >
      ALARM_PARAMS_var;

    typedef
      ALARM_PARAMS &
      ALARM_PARAMS_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  ALARM_PARAMS
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ALARM_PARAMS_var _var_type;
      typedef ALARM_PARAMS_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Long _relationList[100];
      typedef ::CORBA::Long _relationList_slice;
      struct _relationList_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _relationList,
            _relationList_slice,
            _relationList_tag
          >
        _relationList_forany;

      static _relationList_slice *
      _relationList_alloc (void);

      static void
      _relationList_free (
          _relationList_slice *_tao_slice);
      
      static _relationList_slice *
      _relationList_dup (
          const _relationList_slice *_tao_slice);
      
      static void
      _relationList_copy (
          _relationList_slice *_tao_to,
          const _relationList_slice *_tao_from
        );

      _relationList relationList;
      ::CORBA::Long masterServerID;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_ALARMRELATIONSEQ_CH_)
#define _NET_ETECH_ALARMRELATIONSEQ_CH_

    class AlarmRelationSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          AlarmRelationSeq
        >
      AlarmRelationSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          AlarmRelationSeq
        >
      AlarmRelationSeq_out;

    class  AlarmRelationSeq
      : public
          ::TAO::unbounded_value_sequence<
              ALARM_RELATION
            >
    {
    public:
      AlarmRelationSeq (void);
      AlarmRelationSeq ( ::CORBA::ULong max);
      AlarmRelationSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ALARM_RELATION* buffer,
        ::CORBA::Boolean release = false);
      AlarmRelationSeq (const AlarmRelationSeq &);
      virtual ~AlarmRelationSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef AlarmRelationSeq_var _var_type;
      typedef AlarmRelationSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_ALARMGENERATORSEQ_CH_)
#define _NET_ETECH_ALARMGENERATORSEQ_CH_

    class AlarmGeneratorSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          AlarmGeneratorSeq
        >
      AlarmGeneratorSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          AlarmGeneratorSeq
        >
      AlarmGeneratorSeq_out;

    class  AlarmGeneratorSeq
      : public
          ::TAO::unbounded_value_sequence<
              ALARM_GENERATOR
            >
    {
    public:
      AlarmGeneratorSeq (void);
      AlarmGeneratorSeq ( ::CORBA::ULong max);
      AlarmGeneratorSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ALARM_GENERATOR* buffer,
        ::CORBA::Boolean release = false);
      AlarmGeneratorSeq (const AlarmGeneratorSeq &);
      virtual ~AlarmGeneratorSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef AlarmGeneratorSeq_var _var_type;
      typedef AlarmGeneratorSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_THRESHOLDGENERATORSEQ_CH_)
#define _NET_ETECH_THRESHOLDGENERATORSEQ_CH_

    class ThresholdGeneratorSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ThresholdGeneratorSeq
        >
      ThresholdGeneratorSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ThresholdGeneratorSeq
        >
      ThresholdGeneratorSeq_out;

    class  ThresholdGeneratorSeq
      : public
          ::TAO::unbounded_value_sequence<
              THRESHOLD_GENERATOR
            >
    {
    public:
      ThresholdGeneratorSeq (void);
      ThresholdGeneratorSeq ( ::CORBA::ULong max);
      ThresholdGeneratorSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        THRESHOLD_GENERATOR* buffer,
        ::CORBA::Boolean release = false);
      ThresholdGeneratorSeq (const ThresholdGeneratorSeq &);
      virtual ~ThresholdGeneratorSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ThresholdGeneratorSeq_var _var_type;
      typedef ThresholdGeneratorSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ADAMS_COMPLETE_CONFIG;

    typedef
      ::TAO_Var_Var_T<
          ADAMS_COMPLETE_CONFIG
        >
      ADAMS_COMPLETE_CONFIG_var;

    typedef
      ::TAO_Out_T<
          ADAMS_COMPLETE_CONFIG
        >
      ADAMS_COMPLETE_CONFIG_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  ADAMS_COMPLETE_CONFIG
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ADAMS_COMPLETE_CONFIG_var _var_type;
      typedef ADAMS_COMPLETE_CONFIG_out _out_type;
      
      net::etech::AdamsUserSeq userSequence;
      net::etech::GLOBALOPT globalOptions;
      net::etech::DRSeq drSequence;
      net::etech::ElementSeq elementSequence;
      net::etech::RelationSeq relationSequence;
      net::etech::ExceptionSeq exceptionSequence;
      net::etech::AnalisysSeq analisysSequence;
      net::etech::CountersSeq counterSequence;
      net::etech::PluginRegistrySeq pluginRegistrySequence;
      net::etech::ScriptSeq scriptSequence;
      net::etech::ReportSchemaSeq reportSequence;
      net::etech::ThresholdGeneratorSeq thresholdGeneratorSequence;
      net::etech::AlarmGeneratorSeq alarmGeneratorSequence;
      net::etech::AlarmRelationSeq alarmRelationSequence;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct SCRIPT_VALIDATE;

    typedef
      ::TAO_Fixed_Var_T<
          SCRIPT_VALIDATE
        >
      SCRIPT_VALIDATE_var;

    typedef
      SCRIPT_VALIDATE &
      SCRIPT_VALIDATE_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  SCRIPT_VALIDATE
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SCRIPT_VALIDATE_var _var_type;
      typedef SCRIPT_VALIDATE_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _variables[20][30];
      typedef ::CORBA::Char _variables_slice[30];
      struct _variables_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _variables,
            _variables_slice,
            _variables_tag
          >
        _variables_forany;

      static _variables_slice *
      _variables_alloc (void);

      static void
      _variables_free (
          _variables_slice *_tao_slice);
      
      static _variables_slice *
      _variables_dup (
          const _variables_slice *_tao_slice);
      
      static void
      _variables_copy (
          _variables_slice *_tao_to,
          const _variables_slice *_tao_from
        );

      _variables variables;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _variablesText[3200];
      typedef ::CORBA::Char _variablesText_slice;
      struct _variablesText_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _variablesText,
            _variablesText_slice,
            _variablesText_tag
          >
        _variablesText_forany;

      static _variablesText_slice *
      _variablesText_alloc (void);

      static void
      _variablesText_free (
          _variablesText_slice *_tao_slice);
      
      static _variablesText_slice *
      _variablesText_dup (
          const _variablesText_slice *_tao_slice);
      
      static void
      _variablesText_copy (
          _variablesText_slice *_tao_to,
          const _variablesText_slice *_tao_from
        );

      _variablesText variablesText;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _scriptText[3200];
      typedef ::CORBA::Char _scriptText_slice;
      struct _scriptText_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _scriptText,
            _scriptText_slice,
            _scriptText_tag
          >
        _scriptText_forany;

      static _scriptText_slice *
      _scriptText_alloc (void);

      static void
      _scriptText_free (
          _scriptText_slice *_tao_slice);
      
      static _scriptText_slice *
      _scriptText_dup (
          const _scriptText_slice *_tao_slice);
      
      static void
      _scriptText_copy (
          _scriptText_slice *_tao_to,
          const _scriptText_slice *_tao_from
        );

      _scriptText scriptText;
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _resultVariableName[30];
      typedef ::CORBA::Char _resultVariableName_slice;
      struct _resultVariableName_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _resultVariableName,
            _resultVariableName_slice,
            _resultVariableName_tag
          >
        _resultVariableName_forany;

      static _resultVariableName_slice *
      _resultVariableName_alloc (void);

      static void
      _resultVariableName_free (
          _resultVariableName_slice *_tao_slice);
      
      static _resultVariableName_slice *
      _resultVariableName_dup (
          const _resultVariableName_slice *_tao_slice);
      
      static void
      _resultVariableName_copy (
          _resultVariableName_slice *_tao_to,
          const _resultVariableName_slice *_tao_from
        );

      _resultVariableName resultVariableName;
      ::CORBA::Long resultType;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ERROR_TEXT;

    typedef
      ::TAO_Fixed_Var_T<
          ERROR_TEXT
        >
      ERROR_TEXT_var;

    typedef
      ERROR_TEXT &
      ERROR_TEXT_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  ERROR_TEXT
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ERROR_TEXT_var _var_type;
      typedef ERROR_TEXT_out _out_type;
      
      

      // TAO_IDL - Generated from
      // be/be_visitor_array/array_ch.cpp:54

      typedef ::CORBA::Char _text[1024];
      typedef ::CORBA::Char _text_slice;
      struct _text_tag {};
      

      typedef
        TAO_Array_Forany_T<
            _text,
            _text_slice,
            _text_tag
          >
        _text_forany;

      static _text_slice *
      _text_alloc (void);

      static void
      _text_free (
          _text_slice *_tao_slice);
      
      static _text_slice *
      _text_dup (
          const _text_slice *_tao_slice);
      
      static void
      _text_copy (
          _text_slice *_tao_to,
          const _text_slice *_tao_from
        );

      _text text;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct EXPORT_COL;

    typedef
      ::TAO_Var_Var_T<
          EXPORT_COL
        >
      EXPORT_COL_var;

    typedef
      ::TAO_Out_T<
          EXPORT_COL
        >
      EXPORT_COL_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  EXPORT_COL
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef EXPORT_COL_var _var_type;
      typedef EXPORT_COL_out _out_type;
      
      ::CORBA::Long typeCol;
      ::TAO::String_Manager valueCol;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_EXPORTCOLSEQ_CH_)
#define _NET_ETECH_EXPORTCOLSEQ_CH_

    class ExportColSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          ExportColSeq
        >
      ExportColSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ExportColSeq
        >
      ExportColSeq_out;

    class  ExportColSeq
      : public
          ::TAO::unbounded_value_sequence<
              EXPORT_COL
            >
    {
    public:
      ExportColSeq (void);
      ExportColSeq ( ::CORBA::ULong max);
      ExportColSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        EXPORT_COL* buffer,
        ::CORBA::Boolean release = false);
      ExportColSeq (const ExportColSeq &);
      virtual ~ExportColSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ExportColSeq_var _var_type;
      typedef ExportColSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct EXPORT_ROW;

    typedef
      ::TAO_Var_Var_T<
          EXPORT_ROW
        >
      EXPORT_ROW_var;

    typedef
      ::TAO_Out_T<
          EXPORT_ROW
        >
      EXPORT_ROW_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  EXPORT_ROW
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef EXPORT_ROW_var _var_type;
      typedef EXPORT_ROW_out _out_type;
      
      net::etech::ExportColSeq exportCol;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_NET_ETECH_EXPORTDATASEQ_CH_)
#define _NET_ETECH_EXPORTDATASEQ_CH_

    class ExportDataSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          ExportDataSeq
        >
      ExportDataSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ExportDataSeq
        >
      ExportDataSeq_out;

    class  ExportDataSeq
      : public
          ::TAO::unbounded_value_sequence<
              EXPORT_ROW
            >
    {
    public:
      ExportDataSeq (void);
      ExportDataSeq ( ::CORBA::ULong max);
      ExportDataSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        EXPORT_ROW* buffer,
        ::CORBA::Boolean release = false);
      ExportDataSeq (const ExportDataSeq &);
      virtual ~ExportDataSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ExportDataSeq_var _var_type;
      typedef ExportDataSeq_out _out_type;
    };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module net::etech

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module net

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace net
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace etech
  {

    // TAO_IDL - Generated from
    // be/be_visitor_module/module_ch.cpp:38

    namespace ETSS
    {

      // TAO_IDL - Generated from
      // be/be_interface.cpp:751

#if !defined (_NET_ETECH_ETSS_ETSS_SERVER_TRAPPER_SERVER__VAR_OUT_CH_)
#define _NET_ETECH_ETSS_ETSS_SERVER_TRAPPER_SERVER__VAR_OUT_CH_

      class etss_server_trapper_server;
      typedef etss_server_trapper_server *etss_server_trapper_server_ptr;

      typedef
        TAO_Objref_Var_T<
            etss_server_trapper_server
          >
        etss_server_trapper_server_var;
      
      typedef
        TAO_Objref_Out_T<
            etss_server_trapper_server
          >
        etss_server_trapper_server_out;

#endif /* end #if !defined */

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:43

      class  etss_server_trapper_server
        : public virtual ::CORBA::Object
      {
      public:
        friend class TAO::Narrow_Utils<etss_server_trapper_server>;

        // TAO_IDL - Generated from
        // be/be_type.cpp:307

        typedef etss_server_trapper_server_ptr _ptr_type;
        typedef etss_server_trapper_server_var _var_type;
        typedef etss_server_trapper_server_out _out_type;

        // The static operations.
        static etss_server_trapper_server_ptr _duplicate (etss_server_trapper_server_ptr obj);

        static void _tao_release (etss_server_trapper_server_ptr obj);

        static etss_server_trapper_server_ptr _narrow (::CORBA::Object_ptr obj);
        static etss_server_trapper_server_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
        static etss_server_trapper_server_ptr _nil (void);

        virtual void wakeup (
          void);

        virtual void shutDown (
          void);

        virtual ::CORBA::Long checkPid (
          void);

        virtual ::CORBA::Boolean getNodes (
          ::net::etech::FepImageSeq_out nodes);

        // TAO_IDL - Generated from
        // be/be_visitor_interface/interface_ch.cpp:140

        virtual ::CORBA::Boolean _is_a (const char *type_id);
        virtual const char* _interface_repository_id (void) const;
        virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
      
      protected:
        // Concrete interface only.
        etss_server_trapper_server (void);

        // Concrete non-local interface only.
        etss_server_trapper_server (
            ::IOP::IOR *ior,
            TAO_ORB_Core *orb_core);
        
        // Non-local interface only.
        etss_server_trapper_server (
            TAO_Stub *objref,
            ::CORBA::Boolean _tao_collocated = false,
            TAO_Abstract_ServantBase *servant = 0,
            TAO_ORB_Core *orb_core = 0);

        virtual ~etss_server_trapper_server (void);
      
      private:
        // Private and unimplemented for concrete interfaces.
        etss_server_trapper_server (const etss_server_trapper_server &);

        void operator= (const etss_server_trapper_server &);
      };

      // TAO_IDL - Generated from
      // be/be_interface.cpp:751

#if !defined (_NET_ETECH_ETSS_ETSS_SERVER_SERVER__VAR_OUT_CH_)
#define _NET_ETECH_ETSS_ETSS_SERVER_SERVER__VAR_OUT_CH_

      class etss_server_server;
      typedef etss_server_server *etss_server_server_ptr;

      typedef
        TAO_Objref_Var_T<
            etss_server_server
          >
        etss_server_server_var;
      
      typedef
        TAO_Objref_Out_T<
            etss_server_server
          >
        etss_server_server_out;

#endif /* end #if !defined */

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:43

      class  etss_server_server
        : public virtual ::CORBA::Object
      {
      public:
        friend class TAO::Narrow_Utils<etss_server_server>;

        // TAO_IDL - Generated from
        // be/be_type.cpp:307

        typedef etss_server_server_ptr _ptr_type;
        typedef etss_server_server_var _var_type;
        typedef etss_server_server_out _out_type;

        // The static operations.
        static etss_server_server_ptr _duplicate (etss_server_server_ptr obj);

        static void _tao_release (etss_server_server_ptr obj);

        static etss_server_server_ptr _narrow (::CORBA::Object_ptr obj);
        static etss_server_server_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
        static etss_server_server_ptr _nil (void);

        virtual void shutDown (
          void);

        virtual ::CORBA::Boolean alarmStatusRefresh (
          ::net::etech::AlarmInfoSeq_out alarmInfo,
          const ::net::etech::ALARM_PARAMS & relation_list);

        virtual ::CORBA::Boolean globalAlarmStatus (
          ::net::etech::AlarmInfoSeq_out alarmInfo);

        virtual ::CORBA::Boolean setBooking (
          ::CORBA::Long elementType,
          const char * elementCode,
          ::CORBA::Boolean bookStatus);

        virtual ::CORBA::Boolean setTicketed (
          ::CORBA::Long elementType,
          const char * elementCode,
          const ::net::etech::TTMRECORDIMAGE & ttmr,
          ::CORBA::Long anom_index);

        virtual ::CORBA::Boolean authTTM (
          const ::net::etech::USERLOGIN & user,
          ::net::etech::TtmSelectSeq_out ttms);

        virtual ::CORBA::Boolean alarmDetailRequest (
          const ::net::etech::DETAIL_REQUEST & request,
          ::net::etech::DetailInfoSeq_out details);

        virtual ::CORBA::Boolean getNodes (
          ::net::etech::FepImageSeq_out nodes);

        // TAO_IDL - Generated from
        // be/be_visitor_interface/interface_ch.cpp:140

        virtual ::CORBA::Boolean _is_a (const char *type_id);
        virtual const char* _interface_repository_id (void) const;
        virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
      
      protected:
        // Concrete interface only.
        etss_server_server (void);

        // Concrete non-local interface only.
        etss_server_server (
            ::IOP::IOR *ior,
            TAO_ORB_Core *orb_core);
        
        // Non-local interface only.
        etss_server_server (
            TAO_Stub *objref,
            ::CORBA::Boolean _tao_collocated = false,
            TAO_Abstract_ServantBase *servant = 0,
            TAO_ORB_Core *orb_core = 0);

        virtual ~etss_server_server (void);
      
      private:
        // Private and unimplemented for concrete interfaces.
        etss_server_server (const etss_server_server &);

        void operator= (const etss_server_server &);
      };

      // TAO_IDL - Generated from
      // be/be_interface.cpp:751

#if !defined (_NET_ETECH_ETSS_ETSS_AGENT_SERVER__VAR_OUT_CH_)
#define _NET_ETECH_ETSS_ETSS_AGENT_SERVER__VAR_OUT_CH_

      class etss_agent_server;
      typedef etss_agent_server *etss_agent_server_ptr;

      typedef
        TAO_Objref_Var_T<
            etss_agent_server
          >
        etss_agent_server_var;
      
      typedef
        TAO_Objref_Out_T<
            etss_agent_server
          >
        etss_agent_server_out;

#endif /* end #if !defined */

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:43

      class  etss_agent_server
        : public virtual ::CORBA::Object
      {
      public:
        friend class TAO::Narrow_Utils<etss_agent_server>;

        // TAO_IDL - Generated from
        // be/be_type.cpp:307

        typedef etss_agent_server_ptr _ptr_type;
        typedef etss_agent_server_var _var_type;
        typedef etss_agent_server_out _out_type;

        // The static operations.
        static etss_agent_server_ptr _duplicate (etss_agent_server_ptr obj);

        static void _tao_release (etss_agent_server_ptr obj);

        static etss_agent_server_ptr _narrow (::CORBA::Object_ptr obj);
        static etss_agent_server_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
        static etss_agent_server_ptr _nil (void);

        virtual ::CORBA::Boolean runDataServer (
          const ::net::etech::ADAMS_COMPLETE_CONFIG & Conf,
          const ::net::etech::ALARM_PARAMS & alarm_agent_params);

        virtual ::CORBA::Long getProgressPercentage (
          ::net::etech::BtreeID_out Btree_id,
          ::net::etech::BtreeSeq_out BtreeData);

        virtual void resetReader (
          void);

        virtual void shutDown (
          void);

        // TAO_IDL - Generated from
        // be/be_visitor_interface/interface_ch.cpp:140

        virtual ::CORBA::Boolean _is_a (const char *type_id);
        virtual const char* _interface_repository_id (void) const;
        virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
      
      protected:
        // Concrete interface only.
        etss_agent_server (void);

        // Concrete non-local interface only.
        etss_agent_server (
            ::IOP::IOR *ior,
            TAO_ORB_Core *orb_core);
        
        // Non-local interface only.
        etss_agent_server (
            TAO_Stub *objref,
            ::CORBA::Boolean _tao_collocated = false,
            TAO_Abstract_ServantBase *servant = 0,
            TAO_ORB_Core *orb_core = 0);

        virtual ~etss_agent_server (void);
      
      private:
        // Private and unimplemented for concrete interfaces.
        etss_agent_server (const etss_agent_server &);

        void operator= (const etss_agent_server &);
      };

      // TAO_IDL - Generated from
      // be/be_interface.cpp:751

#if !defined (_NET_ETECH_ETSS_ETSS_SERVER_THRESHOLD_SERVER__VAR_OUT_CH_)
#define _NET_ETECH_ETSS_ETSS_SERVER_THRESHOLD_SERVER__VAR_OUT_CH_

      class etss_server_threshold_server;
      typedef etss_server_threshold_server *etss_server_threshold_server_ptr;

      typedef
        TAO_Objref_Var_T<
            etss_server_threshold_server
          >
        etss_server_threshold_server_var;
      
      typedef
        TAO_Objref_Out_T<
            etss_server_threshold_server
          >
        etss_server_threshold_server_out;

#endif /* end #if !defined */

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:43

      class  etss_server_threshold_server
        : public virtual ::CORBA::Object
      {
      public:
        friend class TAO::Narrow_Utils<etss_server_threshold_server>;

        // TAO_IDL - Generated from
        // be/be_type.cpp:307

        typedef etss_server_threshold_server_ptr _ptr_type;
        typedef etss_server_threshold_server_var _var_type;
        typedef etss_server_threshold_server_out _out_type;

        // The static operations.
        static etss_server_threshold_server_ptr _duplicate (etss_server_threshold_server_ptr obj);

        static void _tao_release (etss_server_threshold_server_ptr obj);

        static etss_server_threshold_server_ptr _narrow (::CORBA::Object_ptr obj);
        static etss_server_threshold_server_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
        static etss_server_threshold_server_ptr _nil (void);

        virtual void wakeup (
          void);

        virtual void shutDown (
          void);

        // TAO_IDL - Generated from
        // be/be_visitor_interface/interface_ch.cpp:140

        virtual ::CORBA::Boolean _is_a (const char *type_id);
        virtual const char* _interface_repository_id (void) const;
        virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
      
      protected:
        // Concrete interface only.
        etss_server_threshold_server (void);

        // Concrete non-local interface only.
        etss_server_threshold_server (
            ::IOP::IOR *ior,
            TAO_ORB_Core *orb_core);
        
        // Non-local interface only.
        etss_server_threshold_server (
            TAO_Stub *objref,
            ::CORBA::Boolean _tao_collocated = false,
            TAO_Abstract_ServantBase *servant = 0,
            TAO_ORB_Core *orb_core = 0);

        virtual ~etss_server_threshold_server (void);
      
      private:
        // Private and unimplemented for concrete interfaces.
        etss_server_threshold_server (const etss_server_threshold_server &);

        void operator= (const etss_server_threshold_server &);
      };

      // TAO_IDL - Generated from
      // be/be_interface.cpp:751

#if !defined (_NET_ETECH_ETSS_ETSS_AGENT_THRESHOLD_SERVER__VAR_OUT_CH_)
#define _NET_ETECH_ETSS_ETSS_AGENT_THRESHOLD_SERVER__VAR_OUT_CH_

      class etss_agent_threshold_server;
      typedef etss_agent_threshold_server *etss_agent_threshold_server_ptr;

      typedef
        TAO_Objref_Var_T<
            etss_agent_threshold_server
          >
        etss_agent_threshold_server_var;
      
      typedef
        TAO_Objref_Out_T<
            etss_agent_threshold_server
          >
        etss_agent_threshold_server_out;

#endif /* end #if !defined */

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:43

      class  etss_agent_threshold_server
        : public virtual ::CORBA::Object
      {
      public:
        friend class TAO::Narrow_Utils<etss_agent_threshold_server>;

        // TAO_IDL - Generated from
        // be/be_type.cpp:307

        typedef etss_agent_threshold_server_ptr _ptr_type;
        typedef etss_agent_threshold_server_var _var_type;
        typedef etss_agent_threshold_server_out _out_type;

        // The static operations.
        static etss_agent_threshold_server_ptr _duplicate (etss_agent_threshold_server_ptr obj);

        static void _tao_release (etss_agent_threshold_server_ptr obj);

        static etss_agent_threshold_server_ptr _narrow (::CORBA::Object_ptr obj);
        static etss_agent_threshold_server_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
        static etss_agent_threshold_server_ptr _nil (void);

        virtual ::CORBA::Boolean runDataServer (
          const ::net::etech::ADAMS_COMPLETE_CONFIG & Conf,
          const ::net::etech::ALARM_PARAMS & alarm_agent_params);

        virtual ::CORBA::Long getProgressPercentage (
          ::net::etech::BtreeID_out Btree_id,
          ::net::etech::BtreeSeq_out BtreeData);

        virtual void resetReader (
          void);

        virtual void shutDown (
          void);

        // TAO_IDL - Generated from
        // be/be_visitor_interface/interface_ch.cpp:140

        virtual ::CORBA::Boolean _is_a (const char *type_id);
        virtual const char* _interface_repository_id (void) const;
        virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
      
      protected:
        // Concrete interface only.
        etss_agent_threshold_server (void);

        // Concrete non-local interface only.
        etss_agent_threshold_server (
            ::IOP::IOR *ior,
            TAO_ORB_Core *orb_core);
        
        // Non-local interface only.
        etss_agent_threshold_server (
            TAO_Stub *objref,
            ::CORBA::Boolean _tao_collocated = false,
            TAO_Abstract_ServantBase *servant = 0,
            TAO_ORB_Core *orb_core = 0);

        virtual ~etss_agent_threshold_server (void);
      
      private:
        // Private and unimplemented for concrete interfaces.
        etss_agent_threshold_server (const etss_agent_threshold_server &);

        void operator= (const etss_agent_threshold_server &);
      };
    
    // TAO_IDL - Generated from
    // be/be_visitor_module/module_ch.cpp:67
    
    } // module net::etech::ETSS
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module net::etech

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module net

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:904

  template<>
  class Arg_Traits< ::net::etech::ticketsTypes>
    : public
        Basic_Arg_Traits_T<
            ::net::etech::ticketsTypes,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:904

  template<>
  class Arg_Traits< ::net::etech::ValuesTypes>
    : public
        Basic_Arg_Traits_T<
            ::net::etech::ValuesTypes,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DETAIL_VALUES>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DETAIL_VALUES,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::DetailValuesSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::DetailValuesSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DETAIL_EVENTS>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::DETAIL_EVENTS,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::DetailEventsSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::DetailEventsSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DETAIL_INFO>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::DETAIL_INFO,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::DetailInfoSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::DetailInfoSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::sLinks>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::sLinks,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::sTypeId>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::sTypeId,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DETAIL_REQUEST>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::DETAIL_REQUEST,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_FEP_IMAGE>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_FEP_IMAGE,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::FepImageSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::FepImageSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::EXTRA_INFO>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::EXTRA_INFO,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ExtraInfoSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ExtraInfoSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::LinkSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::LinkSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::ALARM_INFO>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ALARM_INFO,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::AlarmInfoSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::AlarmInfoSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::TTMRECORDIMAGE>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::TTMRECORDIMAGE,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::TTMSELECT>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::TTMSELECT,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::TtmSelectSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::TtmSelectSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::USERLOGIN>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::USERLOGIN,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_DR>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_DR,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::GLOBALOPT>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::GLOBALOPT,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_RELATIONS>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_RELATIONS,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_DATAELEMENT>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_DATAELEMENT,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::REST_INFO>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::REST_INFO,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_FEP>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_FEP,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_ANALYSISTYPE>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_ANALYSISTYPE,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_EXCEPTIONS>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_EXCEPTIONS,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATE_INFO>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATE_INFO,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::RELSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::RELSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::DateSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::DateSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_HELP>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_HELP,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::HelperSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::HelperSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::STRUCT_JOB>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::STRUCT_JOB,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::JOBSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::JOBSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::STRUCT_USER>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::STRUCT_USER,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::JobUserSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::JobUserSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::COUNTER_KIT>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::COUNTER_KIT,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::CounterKitSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::CounterKitSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::COUNTERS>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::COUNTERS,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::CountersSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::CountersSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_PLUGINREGISTRY>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_PLUGINREGISTRY,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::PluginRegistrySeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::PluginRegistrySeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_SCRIPT_VARLIST>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_SCRIPT_VARLIST,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::VariablesSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::VariablesSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_SCRIPT_TEXT>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_SCRIPT_TEXT,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ScriptTextSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ScriptTextSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_SCRIPT>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::DATA_SCRIPT,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ScriptSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ScriptSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_RS_HTML>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_RS_HTML,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_RS_OBJECT>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_RS_OBJECT,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_RS_HEADER>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_RS_HEADER,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_RS_BODY>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_RS_BODY,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_RS_TOTALIZER>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_RS_TOTALIZER,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_RS_FOOTER>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_RS_FOOTER,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_RS_COMMON>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_RS_COMMON,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_RSO_OBJECT>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_RSO_OBJECT,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ReportObjectSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ReportObjectSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_RSO_HEADER>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_RSO_HEADER,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ReportHeaderSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ReportHeaderSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_RSO_BODY>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_RSO_BODY,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ReportBodySeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ReportBodySeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_RSO_TOTALIZER>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_RSO_TOTALIZER,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ReportTotalizerSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ReportTotalizerSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_RSO_FOOTER>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DATA_RSO_FOOTER,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ReportFooterSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ReportFooterSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DATA_REPORTSCHEMA>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::DATA_REPORTSCHEMA,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ReportSchemaSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ReportSchemaSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::LongSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::LongSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::STRUCT_PARAMS>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::STRUCT_PARAMS,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::DRSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::DRSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::RelationSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::RelationSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ElementSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ElementSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::FEPSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::FEPSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::AnalisysSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::AnalisysSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ExceptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ExceptionSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:1058

  template<>
  class Arg_Traits< ::net::etech::TypeValore>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::TypeValore,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::PARAM>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::PARAM,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::Parameter>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::Parameter,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::UserPoolSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::UserPoolSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ParameterKeys>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ParameterKeys,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::IDListSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::IDListSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::FEP_NODE>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::FEP_NODE,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::BtreeSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::BtreeSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::PIVOTDATANODE>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::PIVOTDATANODE,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::PivotDataNodeSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::PivotDataNodeSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::PIVOTREQ>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::PIVOTREQ,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::INVOKE_STATUS>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::INVOKE_STATUS,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::DIR_ENTRY>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::DIR_ENTRY,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::DirEntrySeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::DirEntrySeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::ADAMS_USER>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::ADAMS_USER,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::AdamsUserSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::AdamsUserSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::ALARM_RELATION>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::ALARM_RELATION,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::ALARM_GENERATOR>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::ALARM_GENERATOR,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::THRESHOLD_GENERATOR>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::THRESHOLD_GENERATOR,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::ALARM_PARAMS>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::ALARM_PARAMS,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::AlarmRelationSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::AlarmRelationSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::AlarmGeneratorSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::AlarmGeneratorSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ThresholdGeneratorSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ThresholdGeneratorSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::ADAMS_COMPLETE_CONFIG>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ADAMS_COMPLETE_CONFIG,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::SCRIPT_VALIDATE>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::SCRIPT_VALIDATE,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::ERROR_TEXT>
    : public
        Fixed_Size_Arg_Traits_T<
            ::net::etech::ERROR_TEXT,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::EXPORT_COL>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::EXPORT_COL,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ExportColSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ExportColSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::net::etech::EXPORT_ROW>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::EXPORT_ROW,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::net::etech::ExportDataSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::net::etech::ExportDataSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_ETSS_ETSS_SERVER_TRAPPER_SERVER__ARG_TRAITS_)
#define _NET_ETECH_ETSS_ETSS_SERVER_TRAPPER_SERVER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::net::etech::ETSS::etss_server_trapper_server>
    : public
        Object_Arg_Traits_T<
            ::net::etech::ETSS::etss_server_trapper_server_ptr,
            ::net::etech::ETSS::etss_server_trapper_server_var,
            ::net::etech::ETSS::etss_server_trapper_server_out,
            TAO::Objref_Traits<net::etech::ETSS::etss_server_trapper_server>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_ETSS_ETSS_SERVER_SERVER__ARG_TRAITS_)
#define _NET_ETECH_ETSS_ETSS_SERVER_SERVER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::net::etech::ETSS::etss_server_server>
    : public
        Object_Arg_Traits_T<
            ::net::etech::ETSS::etss_server_server_ptr,
            ::net::etech::ETSS::etss_server_server_var,
            ::net::etech::ETSS::etss_server_server_out,
            TAO::Objref_Traits<net::etech::ETSS::etss_server_server>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_ETSS_ETSS_AGENT_SERVER__ARG_TRAITS_)
#define _NET_ETECH_ETSS_ETSS_AGENT_SERVER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::net::etech::ETSS::etss_agent_server>
    : public
        Object_Arg_Traits_T<
            ::net::etech::ETSS::etss_agent_server_ptr,
            ::net::etech::ETSS::etss_agent_server_var,
            ::net::etech::ETSS::etss_agent_server_out,
            TAO::Objref_Traits<net::etech::ETSS::etss_agent_server>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_ETSS_ETSS_SERVER_THRESHOLD_SERVER__ARG_TRAITS_)
#define _NET_ETECH_ETSS_ETSS_SERVER_THRESHOLD_SERVER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::net::etech::ETSS::etss_server_threshold_server>
    : public
        Object_Arg_Traits_T<
            ::net::etech::ETSS::etss_server_threshold_server_ptr,
            ::net::etech::ETSS::etss_server_threshold_server_var,
            ::net::etech::ETSS::etss_server_threshold_server_out,
            TAO::Objref_Traits<net::etech::ETSS::etss_server_threshold_server>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_ETSS_ETSS_AGENT_THRESHOLD_SERVER__ARG_TRAITS_)
#define _NET_ETECH_ETSS_ETSS_AGENT_THRESHOLD_SERVER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::net::etech::ETSS::etss_agent_threshold_server>
    : public
        Object_Arg_Traits_T<
            ::net::etech::ETSS::etss_agent_threshold_server_ptr,
            ::net::etech::ETSS::etss_agent_threshold_server_var,
            ::net::etech::ETSS::etss_agent_threshold_server_out,
            TAO::Objref_Traits<net::etech::ETSS::etss_agent_threshold_server>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
  template<>
  struct  Array_Traits<
      net::etech::DETAIL_VALUES::_descr_forany
    >
  {
    static void free (
        net::etech::DETAIL_VALUES::_descr_slice * _tao_slice);
    static net::etech::DETAIL_VALUES::_descr_slice * dup (
        const net::etech::DETAIL_VALUES::_descr_slice * _tao_slice);
    static void copy (
        net::etech::DETAIL_VALUES::_descr_slice * _tao_to,
        const net::etech::DETAIL_VALUES::_descr_slice * _tao_from);
    static net::etech::DETAIL_VALUES::_descr_slice * alloc (void);
    static void zero (
        net::etech::DETAIL_VALUES::_descr_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DETAIL_VALUES::_fieldValue_forany
    >
  {
    static void free (
        net::etech::DETAIL_VALUES::_fieldValue_slice * _tao_slice);
    static net::etech::DETAIL_VALUES::_fieldValue_slice * dup (
        const net::etech::DETAIL_VALUES::_fieldValue_slice * _tao_slice);
    static void copy (
        net::etech::DETAIL_VALUES::_fieldValue_slice * _tao_to,
        const net::etech::DETAIL_VALUES::_fieldValue_slice * _tao_from);
    static net::etech::DETAIL_VALUES::_fieldValue_slice * alloc (void);
    static void zero (
        net::etech::DETAIL_VALUES::_fieldValue_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DETAIL_EVENTS::_eventName_forany
    >
  {
    static void free (
        net::etech::DETAIL_EVENTS::_eventName_slice * _tao_slice);
    static net::etech::DETAIL_EVENTS::_eventName_slice * dup (
        const net::etech::DETAIL_EVENTS::_eventName_slice * _tao_slice);
    static void copy (
        net::etech::DETAIL_EVENTS::_eventName_slice * _tao_to,
        const net::etech::DETAIL_EVENTS::_eventName_slice * _tao_from);
    static net::etech::DETAIL_EVENTS::_eventName_slice * alloc (void);
    static void zero (
        net::etech::DETAIL_EVENTS::_eventName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DETAIL_INFO::_groupLabel_forany
    >
  {
    static void free (
        net::etech::DETAIL_INFO::_groupLabel_slice * _tao_slice);
    static net::etech::DETAIL_INFO::_groupLabel_slice * dup (
        const net::etech::DETAIL_INFO::_groupLabel_slice * _tao_slice);
    static void copy (
        net::etech::DETAIL_INFO::_groupLabel_slice * _tao_to,
        const net::etech::DETAIL_INFO::_groupLabel_slice * _tao_from);
    static net::etech::DETAIL_INFO::_groupLabel_slice * alloc (void);
    static void zero (
        net::etech::DETAIL_INFO::_groupLabel_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DETAIL_INFO::_groupIconUrl_forany
    >
  {
    static void free (
        net::etech::DETAIL_INFO::_groupIconUrl_slice * _tao_slice);
    static net::etech::DETAIL_INFO::_groupIconUrl_slice * dup (
        const net::etech::DETAIL_INFO::_groupIconUrl_slice * _tao_slice);
    static void copy (
        net::etech::DETAIL_INFO::_groupIconUrl_slice * _tao_to,
        const net::etech::DETAIL_INFO::_groupIconUrl_slice * _tao_from);
    static net::etech::DETAIL_INFO::_groupIconUrl_slice * alloc (void);
    static void zero (
        net::etech::DETAIL_INFO::_groupIconUrl_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DETAIL_REQUEST::_elementCode_forany
    >
  {
    static void free (
        net::etech::DETAIL_REQUEST::_elementCode_slice * _tao_slice);
    static net::etech::DETAIL_REQUEST::_elementCode_slice * dup (
        const net::etech::DETAIL_REQUEST::_elementCode_slice * _tao_slice);
    static void copy (
        net::etech::DETAIL_REQUEST::_elementCode_slice * _tao_to,
        const net::etech::DETAIL_REQUEST::_elementCode_slice * _tao_from);
    static net::etech::DETAIL_REQUEST::_elementCode_slice * alloc (void);
    static void zero (
        net::etech::DETAIL_REQUEST::_elementCode_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_FEP_IMAGE::_Description_forany
    >
  {
    static void free (
        net::etech::DATA_FEP_IMAGE::_Description_slice * _tao_slice);
    static net::etech::DATA_FEP_IMAGE::_Description_slice * dup (
        const net::etech::DATA_FEP_IMAGE::_Description_slice * _tao_slice);
    static void copy (
        net::etech::DATA_FEP_IMAGE::_Description_slice * _tao_to,
        const net::etech::DATA_FEP_IMAGE::_Description_slice * _tao_from);
    static net::etech::DATA_FEP_IMAGE::_Description_slice * alloc (void);
    static void zero (
        net::etech::DATA_FEP_IMAGE::_Description_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::EXTRA_INFO::_einfo_forany
    >
  {
    static void free (
        net::etech::EXTRA_INFO::_einfo_slice * _tao_slice);
    static net::etech::EXTRA_INFO::_einfo_slice * dup (
        const net::etech::EXTRA_INFO::_einfo_slice * _tao_slice);
    static void copy (
        net::etech::EXTRA_INFO::_einfo_slice * _tao_to,
        const net::etech::EXTRA_INFO::_einfo_slice * _tao_from);
    static net::etech::EXTRA_INFO::_einfo_slice * alloc (void);
    static void zero (
        net::etech::EXTRA_INFO::_einfo_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_INFO::_elementCode_forany
    >
  {
    static void free (
        net::etech::ALARM_INFO::_elementCode_slice * _tao_slice);
    static net::etech::ALARM_INFO::_elementCode_slice * dup (
        const net::etech::ALARM_INFO::_elementCode_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_INFO::_elementCode_slice * _tao_to,
        const net::etech::ALARM_INFO::_elementCode_slice * _tao_from);
    static net::etech::ALARM_INFO::_elementCode_slice * alloc (void);
    static void zero (
        net::etech::ALARM_INFO::_elementCode_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_INFO::_dateTime_forany
    >
  {
    static void free (
        net::etech::ALARM_INFO::_dateTime_slice * _tao_slice);
    static net::etech::ALARM_INFO::_dateTime_slice * dup (
        const net::etech::ALARM_INFO::_dateTime_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_INFO::_dateTime_slice * _tao_to,
        const net::etech::ALARM_INFO::_dateTime_slice * _tao_from);
    static net::etech::ALARM_INFO::_dateTime_slice * alloc (void);
    static void zero (
        net::etech::ALARM_INFO::_dateTime_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_flag_cart_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_flag_cart_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_flag_cart_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_flag_cart_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_flag_cart_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_flag_cart_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_flag_cart_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_flag_cart_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_operator_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_operator_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_operator_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_operator_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_operator_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_operator_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_operator_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_operator_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_type_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_type_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_type_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_type_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_type_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_type_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_type_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_type_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_traffic_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_traffic_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_traffic_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_traffic_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_traffic_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_traffic_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_traffic_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_traffic_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_code_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_code_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_code_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_code_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_code_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_code_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_code_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_code_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_flagdest_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_flagdest_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_flagdest_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_flagdest_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_flagdest_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_flagdest_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_flagdest_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_flagdest_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_ac_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_ac_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_ac_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_ac_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_ac_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_ac_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_ac_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_ac_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_iag_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_iag_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_iag_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_iag_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_iag_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_iag_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_iag_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_iag_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_node_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_node_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_node_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_node_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_node_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_node_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_node_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_node_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_city_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_city_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_city_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_city_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_city_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_city_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_city_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_city_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_alarmon_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_alarmon_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_alarmon_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_alarmon_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_alarmon_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_alarmon_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_alarmon_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_alarmon_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_idalarm_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_idalarm_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_idalarm_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_idalarm_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_idalarm_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_idalarm_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_idalarm_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_idalarm_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_anomaly_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_anomaly_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_anomaly_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_anomaly_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_anomaly_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_anomaly_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_anomaly_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_anomaly_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_origin_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_origin_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_origin_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_origin_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_origin_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_origin_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_origin_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_origin_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_anomaly_c_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_anomaly_c_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_anomaly_c_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_anomaly_c_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_anomaly_c_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_anomaly_c_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_anomaly_c_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_anomaly_c_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_origin_c_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_origin_c_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_origin_c_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_origin_c_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_origin_c_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_origin_c_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_origin_c_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_origin_c_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_ticketdate_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_ticketdate_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_ticketdate_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_ticketdate_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_ticketdate_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_ticketdate_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_ticketdate_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_ticketdate_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMRECORDIMAGE::_ttm_flaggen_forany
    >
  {
    static void free (
        net::etech::TTMRECORDIMAGE::_ttm_flaggen_slice * _tao_slice);
    static net::etech::TTMRECORDIMAGE::_ttm_flaggen_slice * dup (
        const net::etech::TTMRECORDIMAGE::_ttm_flaggen_slice * _tao_slice);
    static void copy (
        net::etech::TTMRECORDIMAGE::_ttm_flaggen_slice * _tao_to,
        const net::etech::TTMRECORDIMAGE::_ttm_flaggen_slice * _tao_from);
    static net::etech::TTMRECORDIMAGE::_ttm_flaggen_slice * alloc (void);
    static void zero (
        net::etech::TTMRECORDIMAGE::_ttm_flaggen_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::TTMSELECT::_ttmDesc_forany
    >
  {
    static void free (
        net::etech::TTMSELECT::_ttmDesc_slice * _tao_slice);
    static net::etech::TTMSELECT::_ttmDesc_slice * dup (
        const net::etech::TTMSELECT::_ttmDesc_slice * _tao_slice);
    static void copy (
        net::etech::TTMSELECT::_ttmDesc_slice * _tao_to,
        const net::etech::TTMSELECT::_ttmDesc_slice * _tao_from);
    static net::etech::TTMSELECT::_ttmDesc_slice * alloc (void);
    static void zero (
        net::etech::TTMSELECT::_ttmDesc_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DR::_description_forany
    >
  {
    static void free (
        net::etech::DATA_DR::_description_slice * _tao_slice);
    static net::etech::DATA_DR::_description_slice * dup (
        const net::etech::DATA_DR::_description_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DR::_description_slice * _tao_to,
        const net::etech::DATA_DR::_description_slice * _tao_from);
    static net::etech::DATA_DR::_description_slice * alloc (void);
    static void zero (
        net::etech::DATA_DR::_description_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DR::_indexSuffix_forany
    >
  {
    static void free (
        net::etech::DATA_DR::_indexSuffix_slice * _tao_slice);
    static net::etech::DATA_DR::_indexSuffix_slice * dup (
        const net::etech::DATA_DR::_indexSuffix_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DR::_indexSuffix_slice * _tao_to,
        const net::etech::DATA_DR::_indexSuffix_slice * _tao_from);
    static net::etech::DATA_DR::_indexSuffix_slice * alloc (void);
    static void zero (
        net::etech::DATA_DR::_indexSuffix_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DR::_startTime_forany
    >
  {
    static void free (
        net::etech::DATA_DR::_startTime_slice * _tao_slice);
    static net::etech::DATA_DR::_startTime_slice * dup (
        const net::etech::DATA_DR::_startTime_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DR::_startTime_slice * _tao_to,
        const net::etech::DATA_DR::_startTime_slice * _tao_from);
    static net::etech::DATA_DR::_startTime_slice * alloc (void);
    static void zero (
        net::etech::DATA_DR::_startTime_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DR::_endTime_forany
    >
  {
    static void free (
        net::etech::DATA_DR::_endTime_slice * _tao_slice);
    static net::etech::DATA_DR::_endTime_slice * dup (
        const net::etech::DATA_DR::_endTime_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DR::_endTime_slice * _tao_to,
        const net::etech::DATA_DR::_endTime_slice * _tao_from);
    static net::etech::DATA_DR::_endTime_slice * alloc (void);
    static void zero (
        net::etech::DATA_DR::_endTime_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::GLOBALOPT::_drPluginName_forany
    >
  {
    static void free (
        net::etech::GLOBALOPT::_drPluginName_slice * _tao_slice);
    static net::etech::GLOBALOPT::_drPluginName_slice * dup (
        const net::etech::GLOBALOPT::_drPluginName_slice * _tao_slice);
    static void copy (
        net::etech::GLOBALOPT::_drPluginName_slice * _tao_to,
        const net::etech::GLOBALOPT::_drPluginName_slice * _tao_from);
    static net::etech::GLOBALOPT::_drPluginName_slice * alloc (void);
    static void zero (
        net::etech::GLOBALOPT::_drPluginName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::GLOBALOPT::_drPathName_forany
    >
  {
    static void free (
        net::etech::GLOBALOPT::_drPathName_slice * _tao_slice);
    static net::etech::GLOBALOPT::_drPathName_slice * dup (
        const net::etech::GLOBALOPT::_drPathName_slice * _tao_slice);
    static void copy (
        net::etech::GLOBALOPT::_drPathName_slice * _tao_to,
        const net::etech::GLOBALOPT::_drPathName_slice * _tao_from);
    static net::etech::GLOBALOPT::_drPathName_slice * alloc (void);
    static void zero (
        net::etech::GLOBALOPT::_drPathName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::GLOBALOPT::_glbDefaultPluginPath_forany
    >
  {
    static void free (
        net::etech::GLOBALOPT::_glbDefaultPluginPath_slice * _tao_slice);
    static net::etech::GLOBALOPT::_glbDefaultPluginPath_slice * dup (
        const net::etech::GLOBALOPT::_glbDefaultPluginPath_slice * _tao_slice);
    static void copy (
        net::etech::GLOBALOPT::_glbDefaultPluginPath_slice * _tao_to,
        const net::etech::GLOBALOPT::_glbDefaultPluginPath_slice * _tao_from);
    static net::etech::GLOBALOPT::_glbDefaultPluginPath_slice * alloc (void);
    static void zero (
        net::etech::GLOBALOPT::_glbDefaultPluginPath_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::GLOBALOPT::_glbAlias_forany
    >
  {
    static void free (
        net::etech::GLOBALOPT::_glbAlias_slice * _tao_slice);
    static net::etech::GLOBALOPT::_glbAlias_slice * dup (
        const net::etech::GLOBALOPT::_glbAlias_slice * _tao_slice);
    static void copy (
        net::etech::GLOBALOPT::_glbAlias_slice * _tao_to,
        const net::etech::GLOBALOPT::_glbAlias_slice * _tao_from);
    static net::etech::GLOBALOPT::_glbAlias_slice * alloc (void);
    static void zero (
        net::etech::GLOBALOPT::_glbAlias_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::GLOBALOPT::_glbAuthor_forany
    >
  {
    static void free (
        net::etech::GLOBALOPT::_glbAuthor_slice * _tao_slice);
    static net::etech::GLOBALOPT::_glbAuthor_slice * dup (
        const net::etech::GLOBALOPT::_glbAuthor_slice * _tao_slice);
    static void copy (
        net::etech::GLOBALOPT::_glbAuthor_slice * _tao_to,
        const net::etech::GLOBALOPT::_glbAuthor_slice * _tao_from);
    static net::etech::GLOBALOPT::_glbAuthor_slice * alloc (void);
    static void zero (
        net::etech::GLOBALOPT::_glbAuthor_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::GLOBALOPT::_glbLastModified_forany
    >
  {
    static void free (
        net::etech::GLOBALOPT::_glbLastModified_slice * _tao_slice);
    static net::etech::GLOBALOPT::_glbLastModified_slice * dup (
        const net::etech::GLOBALOPT::_glbLastModified_slice * _tao_slice);
    static void copy (
        net::etech::GLOBALOPT::_glbLastModified_slice * _tao_to,
        const net::etech::GLOBALOPT::_glbLastModified_slice * _tao_from);
    static net::etech::GLOBALOPT::_glbLastModified_slice * alloc (void);
    static void zero (
        net::etech::GLOBALOPT::_glbLastModified_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::GLOBALOPT::_indexFileName_forany
    >
  {
    static void free (
        net::etech::GLOBALOPT::_indexFileName_slice * _tao_slice);
    static net::etech::GLOBALOPT::_indexFileName_slice * dup (
        const net::etech::GLOBALOPT::_indexFileName_slice * _tao_slice);
    static void copy (
        net::etech::GLOBALOPT::_indexFileName_slice * _tao_to,
        const net::etech::GLOBALOPT::_indexFileName_slice * _tao_from);
    static net::etech::GLOBALOPT::_indexFileName_slice * alloc (void);
    static void zero (
        net::etech::GLOBALOPT::_indexFileName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_RELATIONS::_nextLevelRelations_forany
    >
  {
    static void free (
        net::etech::DATA_RELATIONS::_nextLevelRelations_slice * _tao_slice);
    static net::etech::DATA_RELATIONS::_nextLevelRelations_slice * dup (
        const net::etech::DATA_RELATIONS::_nextLevelRelations_slice * _tao_slice);
    static void copy (
        net::etech::DATA_RELATIONS::_nextLevelRelations_slice * _tao_to,
        const net::etech::DATA_RELATIONS::_nextLevelRelations_slice * _tao_from);
    static net::etech::DATA_RELATIONS::_nextLevelRelations_slice * alloc (void);
    static void zero (
        net::etech::DATA_RELATIONS::_nextLevelRelations_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_RELATIONS::_restrictions_forany
    >
  {
    static void free (
        net::etech::DATA_RELATIONS::_restrictions_slice * _tao_slice);
    static net::etech::DATA_RELATIONS::_restrictions_slice * dup (
        const net::etech::DATA_RELATIONS::_restrictions_slice * _tao_slice);
    static void copy (
        net::etech::DATA_RELATIONS::_restrictions_slice * _tao_to,
        const net::etech::DATA_RELATIONS::_restrictions_slice * _tao_from);
    static net::etech::DATA_RELATIONS::_restrictions_slice * alloc (void);
    static void zero (
        net::etech::DATA_RELATIONS::_restrictions_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_RELATIONS::_tiedRestrictions_forany
    >
  {
    static void free (
        net::etech::DATA_RELATIONS::_tiedRestrictions_slice * _tao_slice);
    static net::etech::DATA_RELATIONS::_tiedRestrictions_slice * dup (
        const net::etech::DATA_RELATIONS::_tiedRestrictions_slice * _tao_slice);
    static void copy (
        net::etech::DATA_RELATIONS::_tiedRestrictions_slice * _tao_to,
        const net::etech::DATA_RELATIONS::_tiedRestrictions_slice * _tao_from);
    static net::etech::DATA_RELATIONS::_tiedRestrictions_slice * alloc (void);
    static void zero (
        net::etech::DATA_RELATIONS::_tiedRestrictions_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DATAELEMENT::_shortDescription_forany
    >
  {
    static void free (
        net::etech::DATA_DATAELEMENT::_shortDescription_slice * _tao_slice);
    static net::etech::DATA_DATAELEMENT::_shortDescription_slice * dup (
        const net::etech::DATA_DATAELEMENT::_shortDescription_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DATAELEMENT::_shortDescription_slice * _tao_to,
        const net::etech::DATA_DATAELEMENT::_shortDescription_slice * _tao_from);
    static net::etech::DATA_DATAELEMENT::_shortDescription_slice * alloc (void);
    static void zero (
        net::etech::DATA_DATAELEMENT::_shortDescription_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DATAELEMENT::_longDescription_forany
    >
  {
    static void free (
        net::etech::DATA_DATAELEMENT::_longDescription_slice * _tao_slice);
    static net::etech::DATA_DATAELEMENT::_longDescription_slice * dup (
        const net::etech::DATA_DATAELEMENT::_longDescription_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DATAELEMENT::_longDescription_slice * _tao_to,
        const net::etech::DATA_DATAELEMENT::_longDescription_slice * _tao_from);
    static net::etech::DATA_DATAELEMENT::_longDescription_slice * alloc (void);
    static void zero (
        net::etech::DATA_DATAELEMENT::_longDescription_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DATAELEMENT::_pixmapFileName_forany
    >
  {
    static void free (
        net::etech::DATA_DATAELEMENT::_pixmapFileName_slice * _tao_slice);
    static net::etech::DATA_DATAELEMENT::_pixmapFileName_slice * dup (
        const net::etech::DATA_DATAELEMENT::_pixmapFileName_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DATAELEMENT::_pixmapFileName_slice * _tao_to,
        const net::etech::DATA_DATAELEMENT::_pixmapFileName_slice * _tao_from);
    static net::etech::DATA_DATAELEMENT::_pixmapFileName_slice * alloc (void);
    static void zero (
        net::etech::DATA_DATAELEMENT::_pixmapFileName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DATAELEMENT::_valueRange_forany
    >
  {
    static void free (
        net::etech::DATA_DATAELEMENT::_valueRange_slice * _tao_slice);
    static net::etech::DATA_DATAELEMENT::_valueRange_slice * dup (
        const net::etech::DATA_DATAELEMENT::_valueRange_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DATAELEMENT::_valueRange_slice * _tao_to,
        const net::etech::DATA_DATAELEMENT::_valueRange_slice * _tao_from);
    static net::etech::DATA_DATAELEMENT::_valueRange_slice * alloc (void);
    static void zero (
        net::etech::DATA_DATAELEMENT::_valueRange_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DATAELEMENT::_valueList_forany
    >
  {
    static void free (
        net::etech::DATA_DATAELEMENT::_valueList_slice * _tao_slice);
    static net::etech::DATA_DATAELEMENT::_valueList_slice * dup (
        const net::etech::DATA_DATAELEMENT::_valueList_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DATAELEMENT::_valueList_slice * _tao_to,
        const net::etech::DATA_DATAELEMENT::_valueList_slice * _tao_from);
    static net::etech::DATA_DATAELEMENT::_valueList_slice * alloc (void);
    static void zero (
        net::etech::DATA_DATAELEMENT::_valueList_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DATAELEMENT::_valueListLabel_forany
    >
  {
    static void free (
        net::etech::DATA_DATAELEMENT::_valueListLabel_slice * _tao_slice);
    static net::etech::DATA_DATAELEMENT::_valueListLabel_slice * dup (
        const net::etech::DATA_DATAELEMENT::_valueListLabel_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DATAELEMENT::_valueListLabel_slice * _tao_to,
        const net::etech::DATA_DATAELEMENT::_valueListLabel_slice * _tao_from);
    static net::etech::DATA_DATAELEMENT::_valueListLabel_slice * alloc (void);
    static void zero (
        net::etech::DATA_DATAELEMENT::_valueListLabel_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DATAELEMENT::_aggregateRestrictions_forany
    >
  {
    static void free (
        net::etech::DATA_DATAELEMENT::_aggregateRestrictions_slice * _tao_slice);
    static net::etech::DATA_DATAELEMENT::_aggregateRestrictions_slice * dup (
        const net::etech::DATA_DATAELEMENT::_aggregateRestrictions_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DATAELEMENT::_aggregateRestrictions_slice * _tao_to,
        const net::etech::DATA_DATAELEMENT::_aggregateRestrictions_slice * _tao_from);
    static net::etech::DATA_DATAELEMENT::_aggregateRestrictions_slice * alloc (void);
    static void zero (
        net::etech::DATA_DATAELEMENT::_aggregateRestrictions_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DATAELEMENT::_exceptions_forany
    >
  {
    static void free (
        net::etech::DATA_DATAELEMENT::_exceptions_slice * _tao_slice);
    static net::etech::DATA_DATAELEMENT::_exceptions_slice * dup (
        const net::etech::DATA_DATAELEMENT::_exceptions_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DATAELEMENT::_exceptions_slice * _tao_to,
        const net::etech::DATA_DATAELEMENT::_exceptions_slice * _tao_from);
    static net::etech::DATA_DATAELEMENT::_exceptions_slice * alloc (void);
    static void zero (
        net::etech::DATA_DATAELEMENT::_exceptions_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DATAELEMENT::_Suffix_forany
    >
  {
    static void free (
        net::etech::DATA_DATAELEMENT::_Suffix_slice * _tao_slice);
    static net::etech::DATA_DATAELEMENT::_Suffix_slice * dup (
        const net::etech::DATA_DATAELEMENT::_Suffix_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DATAELEMENT::_Suffix_slice * _tao_to,
        const net::etech::DATA_DATAELEMENT::_Suffix_slice * _tao_from);
    static net::etech::DATA_DATAELEMENT::_Suffix_slice * alloc (void);
    static void zero (
        net::etech::DATA_DATAELEMENT::_Suffix_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DATAELEMENT::_valueShifter_forany
    >
  {
    static void free (
        net::etech::DATA_DATAELEMENT::_valueShifter_slice * _tao_slice);
    static net::etech::DATA_DATAELEMENT::_valueShifter_slice * dup (
        const net::etech::DATA_DATAELEMENT::_valueShifter_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DATAELEMENT::_valueShifter_slice * _tao_to,
        const net::etech::DATA_DATAELEMENT::_valueShifter_slice * _tao_from);
    static net::etech::DATA_DATAELEMENT::_valueShifter_slice * alloc (void);
    static void zero (
        net::etech::DATA_DATAELEMENT::_valueShifter_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_DATAELEMENT::_scripts_forany
    >
  {
    static void free (
        net::etech::DATA_DATAELEMENT::_scripts_slice * _tao_slice);
    static net::etech::DATA_DATAELEMENT::_scripts_slice * dup (
        const net::etech::DATA_DATAELEMENT::_scripts_slice * _tao_slice);
    static void copy (
        net::etech::DATA_DATAELEMENT::_scripts_slice * _tao_to,
        const net::etech::DATA_DATAELEMENT::_scripts_slice * _tao_from);
    static net::etech::DATA_DATAELEMENT::_scripts_slice * alloc (void);
    static void zero (
        net::etech::DATA_DATAELEMENT::_scripts_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::REST_INFO::_Value_forany
    >
  {
    static void free (
        net::etech::REST_INFO::_Value_slice * _tao_slice);
    static net::etech::REST_INFO::_Value_slice * dup (
        const net::etech::REST_INFO::_Value_slice * _tao_slice);
    static void copy (
        net::etech::REST_INFO::_Value_slice * _tao_to,
        const net::etech::REST_INFO::_Value_slice * _tao_from);
    static net::etech::REST_INFO::_Value_slice * alloc (void);
    static void zero (
        net::etech::REST_INFO::_Value_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::REST_INFO::_AsciiValue_forany
    >
  {
    static void free (
        net::etech::REST_INFO::_AsciiValue_slice * _tao_slice);
    static net::etech::REST_INFO::_AsciiValue_slice * dup (
        const net::etech::REST_INFO::_AsciiValue_slice * _tao_slice);
    static void copy (
        net::etech::REST_INFO::_AsciiValue_slice * _tao_to,
        const net::etech::REST_INFO::_AsciiValue_slice * _tao_from);
    static net::etech::REST_INFO::_AsciiValue_slice * alloc (void);
    static void zero (
        net::etech::REST_INFO::_AsciiValue_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_FEP::_Description_forany
    >
  {
    static void free (
        net::etech::DATA_FEP::_Description_slice * _tao_slice);
    static net::etech::DATA_FEP::_Description_slice * dup (
        const net::etech::DATA_FEP::_Description_slice * _tao_slice);
    static void copy (
        net::etech::DATA_FEP::_Description_slice * _tao_to,
        const net::etech::DATA_FEP::_Description_slice * _tao_from);
    static net::etech::DATA_FEP::_Description_slice * alloc (void);
    static void zero (
        net::etech::DATA_FEP::_Description_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_ANALYSISTYPE::_LongDescription_forany
    >
  {
    static void free (
        net::etech::DATA_ANALYSISTYPE::_LongDescription_slice * _tao_slice);
    static net::etech::DATA_ANALYSISTYPE::_LongDescription_slice * dup (
        const net::etech::DATA_ANALYSISTYPE::_LongDescription_slice * _tao_slice);
    static void copy (
        net::etech::DATA_ANALYSISTYPE::_LongDescription_slice * _tao_to,
        const net::etech::DATA_ANALYSISTYPE::_LongDescription_slice * _tao_from);
    static net::etech::DATA_ANALYSISTYPE::_LongDescription_slice * alloc (void);
    static void zero (
        net::etech::DATA_ANALYSISTYPE::_LongDescription_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_ANALYSISTYPE::_ShortDescription_forany
    >
  {
    static void free (
        net::etech::DATA_ANALYSISTYPE::_ShortDescription_slice * _tao_slice);
    static net::etech::DATA_ANALYSISTYPE::_ShortDescription_slice * dup (
        const net::etech::DATA_ANALYSISTYPE::_ShortDescription_slice * _tao_slice);
    static void copy (
        net::etech::DATA_ANALYSISTYPE::_ShortDescription_slice * _tao_to,
        const net::etech::DATA_ANALYSISTYPE::_ShortDescription_slice * _tao_from);
    static net::etech::DATA_ANALYSISTYPE::_ShortDescription_slice * alloc (void);
    static void zero (
        net::etech::DATA_ANALYSISTYPE::_ShortDescription_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_ANALYSISTYPE::_relations_forany
    >
  {
    static void free (
        net::etech::DATA_ANALYSISTYPE::_relations_slice * _tao_slice);
    static net::etech::DATA_ANALYSISTYPE::_relations_slice * dup (
        const net::etech::DATA_ANALYSISTYPE::_relations_slice * _tao_slice);
    static void copy (
        net::etech::DATA_ANALYSISTYPE::_relations_slice * _tao_to,
        const net::etech::DATA_ANALYSISTYPE::_relations_slice * _tao_from);
    static net::etech::DATA_ANALYSISTYPE::_relations_slice * alloc (void);
    static void zero (
        net::etech::DATA_ANALYSISTYPE::_relations_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_ANALYSISTYPE::_reportsId_forany
    >
  {
    static void free (
        net::etech::DATA_ANALYSISTYPE::_reportsId_slice * _tao_slice);
    static net::etech::DATA_ANALYSISTYPE::_reportsId_slice * dup (
        const net::etech::DATA_ANALYSISTYPE::_reportsId_slice * _tao_slice);
    static void copy (
        net::etech::DATA_ANALYSISTYPE::_reportsId_slice * _tao_to,
        const net::etech::DATA_ANALYSISTYPE::_reportsId_slice * _tao_from);
    static net::etech::DATA_ANALYSISTYPE::_reportsId_slice * alloc (void);
    static void zero (
        net::etech::DATA_ANALYSISTYPE::_reportsId_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_EXCEPTIONS::_tag_forany
    >
  {
    static void free (
        net::etech::DATA_EXCEPTIONS::_tag_slice * _tao_slice);
    static net::etech::DATA_EXCEPTIONS::_tag_slice * dup (
        const net::etech::DATA_EXCEPTIONS::_tag_slice * _tao_slice);
    static void copy (
        net::etech::DATA_EXCEPTIONS::_tag_slice * _tao_to,
        const net::etech::DATA_EXCEPTIONS::_tag_slice * _tao_from);
    static net::etech::DATA_EXCEPTIONS::_tag_slice * alloc (void);
    static void zero (
        net::etech::DATA_EXCEPTIONS::_tag_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_EXCEPTIONS::_description_forany
    >
  {
    static void free (
        net::etech::DATA_EXCEPTIONS::_description_slice * _tao_slice);
    static net::etech::DATA_EXCEPTIONS::_description_slice * dup (
        const net::etech::DATA_EXCEPTIONS::_description_slice * _tao_slice);
    static void copy (
        net::etech::DATA_EXCEPTIONS::_description_slice * _tao_to,
        const net::etech::DATA_EXCEPTIONS::_description_slice * _tao_from);
    static net::etech::DATA_EXCEPTIONS::_description_slice * alloc (void);
    static void zero (
        net::etech::DATA_EXCEPTIONS::_description_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_EXCEPTIONS::_triggeredValue_forany
    >
  {
    static void free (
        net::etech::DATA_EXCEPTIONS::_triggeredValue_slice * _tao_slice);
    static net::etech::DATA_EXCEPTIONS::_triggeredValue_slice * dup (
        const net::etech::DATA_EXCEPTIONS::_triggeredValue_slice * _tao_slice);
    static void copy (
        net::etech::DATA_EXCEPTIONS::_triggeredValue_slice * _tao_to,
        const net::etech::DATA_EXCEPTIONS::_triggeredValue_slice * _tao_from);
    static net::etech::DATA_EXCEPTIONS::_triggeredValue_slice * alloc (void);
    static void zero (
        net::etech::DATA_EXCEPTIONS::_triggeredValue_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_EXCEPTIONS::_targetValue_forany
    >
  {
    static void free (
        net::etech::DATA_EXCEPTIONS::_targetValue_slice * _tao_slice);
    static net::etech::DATA_EXCEPTIONS::_targetValue_slice * dup (
        const net::etech::DATA_EXCEPTIONS::_targetValue_slice * _tao_slice);
    static void copy (
        net::etech::DATA_EXCEPTIONS::_targetValue_slice * _tao_to,
        const net::etech::DATA_EXCEPTIONS::_targetValue_slice * _tao_from);
    static net::etech::DATA_EXCEPTIONS::_targetValue_slice * alloc (void);
    static void zero (
        net::etech::DATA_EXCEPTIONS::_targetValue_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATE_INFO::_dateString_forany
    >
  {
    static void free (
        net::etech::DATE_INFO::_dateString_slice * _tao_slice);
    static net::etech::DATE_INFO::_dateString_slice * dup (
        const net::etech::DATE_INFO::_dateString_slice * _tao_slice);
    static void copy (
        net::etech::DATE_INFO::_dateString_slice * _tao_to,
        const net::etech::DATE_INFO::_dateString_slice * _tao_from);
    static net::etech::DATE_INFO::_dateString_slice * alloc (void);
    static void zero (
        net::etech::DATE_INFO::_dateString_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_HELP::_key_forany
    >
  {
    static void free (
        net::etech::DATA_HELP::_key_slice * _tao_slice);
    static net::etech::DATA_HELP::_key_slice * dup (
        const net::etech::DATA_HELP::_key_slice * _tao_slice);
    static void copy (
        net::etech::DATA_HELP::_key_slice * _tao_to,
        const net::etech::DATA_HELP::_key_slice * _tao_from);
    static net::etech::DATA_HELP::_key_slice * alloc (void);
    static void zero (
        net::etech::DATA_HELP::_key_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_HELP::_data_forany
    >
  {
    static void free (
        net::etech::DATA_HELP::_data_slice * _tao_slice);
    static net::etech::DATA_HELP::_data_slice * dup (
        const net::etech::DATA_HELP::_data_slice * _tao_slice);
    static void copy (
        net::etech::DATA_HELP::_data_slice * _tao_to,
        const net::etech::DATA_HELP::_data_slice * _tao_from);
    static net::etech::DATA_HELP::_data_slice * alloc (void);
    static void zero (
        net::etech::DATA_HELP::_data_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::STRUCT_JOB::_user_str_forany
    >
  {
    static void free (
        net::etech::STRUCT_JOB::_user_str_slice * _tao_slice);
    static net::etech::STRUCT_JOB::_user_str_slice * dup (
        const net::etech::STRUCT_JOB::_user_str_slice * _tao_slice);
    static void copy (
        net::etech::STRUCT_JOB::_user_str_slice * _tao_to,
        const net::etech::STRUCT_JOB::_user_str_slice * _tao_from);
    static net::etech::STRUCT_JOB::_user_str_slice * alloc (void);
    static void zero (
        net::etech::STRUCT_JOB::_user_str_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::STRUCT_JOB::_dest_fep_forany
    >
  {
    static void free (
        net::etech::STRUCT_JOB::_dest_fep_slice * _tao_slice);
    static net::etech::STRUCT_JOB::_dest_fep_slice * dup (
        const net::etech::STRUCT_JOB::_dest_fep_slice * _tao_slice);
    static void copy (
        net::etech::STRUCT_JOB::_dest_fep_slice * _tao_to,
        const net::etech::STRUCT_JOB::_dest_fep_slice * _tao_from);
    static net::etech::STRUCT_JOB::_dest_fep_slice * alloc (void);
    static void zero (
        net::etech::STRUCT_JOB::_dest_fep_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::STRUCT_JOB::_dest_dir_forany
    >
  {
    static void free (
        net::etech::STRUCT_JOB::_dest_dir_slice * _tao_slice);
    static net::etech::STRUCT_JOB::_dest_dir_slice * dup (
        const net::etech::STRUCT_JOB::_dest_dir_slice * _tao_slice);
    static void copy (
        net::etech::STRUCT_JOB::_dest_dir_slice * _tao_to,
        const net::etech::STRUCT_JOB::_dest_dir_slice * _tao_from);
    static net::etech::STRUCT_JOB::_dest_dir_slice * alloc (void);
    static void zero (
        net::etech::STRUCT_JOB::_dest_dir_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::STRUCT_JOB::_description_forany
    >
  {
    static void free (
        net::etech::STRUCT_JOB::_description_slice * _tao_slice);
    static net::etech::STRUCT_JOB::_description_slice * dup (
        const net::etech::STRUCT_JOB::_description_slice * _tao_slice);
    static void copy (
        net::etech::STRUCT_JOB::_description_slice * _tao_to,
        const net::etech::STRUCT_JOB::_description_slice * _tao_from);
    static net::etech::STRUCT_JOB::_description_slice * alloc (void);
    static void zero (
        net::etech::STRUCT_JOB::_description_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::STRUCT_USER::_user_forany
    >
  {
    static void free (
        net::etech::STRUCT_USER::_user_slice * _tao_slice);
    static net::etech::STRUCT_USER::_user_slice * dup (
        const net::etech::STRUCT_USER::_user_slice * _tao_slice);
    static void copy (
        net::etech::STRUCT_USER::_user_slice * _tao_to,
        const net::etech::STRUCT_USER::_user_slice * _tao_from);
    static net::etech::STRUCT_USER::_user_slice * alloc (void);
    static void zero (
        net::etech::STRUCT_USER::_user_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::STRUCT_USER::_password_forany
    >
  {
    static void free (
        net::etech::STRUCT_USER::_password_slice * _tao_slice);
    static net::etech::STRUCT_USER::_password_slice * dup (
        const net::etech::STRUCT_USER::_password_slice * _tao_slice);
    static void copy (
        net::etech::STRUCT_USER::_password_slice * _tao_to,
        const net::etech::STRUCT_USER::_password_slice * _tao_from);
    static net::etech::STRUCT_USER::_password_slice * alloc (void);
    static void zero (
        net::etech::STRUCT_USER::_password_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::COUNTER_KIT::_tag_forany
    >
  {
    static void free (
        net::etech::COUNTER_KIT::_tag_slice * _tao_slice);
    static net::etech::COUNTER_KIT::_tag_slice * dup (
        const net::etech::COUNTER_KIT::_tag_slice * _tao_slice);
    static void copy (
        net::etech::COUNTER_KIT::_tag_slice * _tao_to,
        const net::etech::COUNTER_KIT::_tag_slice * _tao_from);
    static net::etech::COUNTER_KIT::_tag_slice * alloc (void);
    static void zero (
        net::etech::COUNTER_KIT::_tag_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::COUNTER_KIT::_description_forany
    >
  {
    static void free (
        net::etech::COUNTER_KIT::_description_slice * _tao_slice);
    static net::etech::COUNTER_KIT::_description_slice * dup (
        const net::etech::COUNTER_KIT::_description_slice * _tao_slice);
    static void copy (
        net::etech::COUNTER_KIT::_description_slice * _tao_to,
        const net::etech::COUNTER_KIT::_description_slice * _tao_from);
    static net::etech::COUNTER_KIT::_description_slice * alloc (void);
    static void zero (
        net::etech::COUNTER_KIT::_description_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::COUNTERS::_tag_forany
    >
  {
    static void free (
        net::etech::COUNTERS::_tag_slice * _tao_slice);
    static net::etech::COUNTERS::_tag_slice * dup (
        const net::etech::COUNTERS::_tag_slice * _tao_slice);
    static void copy (
        net::etech::COUNTERS::_tag_slice * _tao_to,
        const net::etech::COUNTERS::_tag_slice * _tao_from);
    static net::etech::COUNTERS::_tag_slice * alloc (void);
    static void zero (
        net::etech::COUNTERS::_tag_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::COUNTERS::_pluginName_forany
    >
  {
    static void free (
        net::etech::COUNTERS::_pluginName_slice * _tao_slice);
    static net::etech::COUNTERS::_pluginName_slice * dup (
        const net::etech::COUNTERS::_pluginName_slice * _tao_slice);
    static void copy (
        net::etech::COUNTERS::_pluginName_slice * _tao_to,
        const net::etech::COUNTERS::_pluginName_slice * _tao_from);
    static net::etech::COUNTERS::_pluginName_slice * alloc (void);
    static void zero (
        net::etech::COUNTERS::_pluginName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::COUNTERS::_pathName_forany
    >
  {
    static void free (
        net::etech::COUNTERS::_pathName_slice * _tao_slice);
    static net::etech::COUNTERS::_pathName_slice * dup (
        const net::etech::COUNTERS::_pathName_slice * _tao_slice);
    static void copy (
        net::etech::COUNTERS::_pathName_slice * _tao_to,
        const net::etech::COUNTERS::_pathName_slice * _tao_from);
    static net::etech::COUNTERS::_pathName_slice * alloc (void);
    static void zero (
        net::etech::COUNTERS::_pathName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_PLUGINREGISTRY::_tag_forany
    >
  {
    static void free (
        net::etech::DATA_PLUGINREGISTRY::_tag_slice * _tao_slice);
    static net::etech::DATA_PLUGINREGISTRY::_tag_slice * dup (
        const net::etech::DATA_PLUGINREGISTRY::_tag_slice * _tao_slice);
    static void copy (
        net::etech::DATA_PLUGINREGISTRY::_tag_slice * _tao_to,
        const net::etech::DATA_PLUGINREGISTRY::_tag_slice * _tao_from);
    static net::etech::DATA_PLUGINREGISTRY::_tag_slice * alloc (void);
    static void zero (
        net::etech::DATA_PLUGINREGISTRY::_tag_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_PLUGINREGISTRY::_pluginName_forany
    >
  {
    static void free (
        net::etech::DATA_PLUGINREGISTRY::_pluginName_slice * _tao_slice);
    static net::etech::DATA_PLUGINREGISTRY::_pluginName_slice * dup (
        const net::etech::DATA_PLUGINREGISTRY::_pluginName_slice * _tao_slice);
    static void copy (
        net::etech::DATA_PLUGINREGISTRY::_pluginName_slice * _tao_to,
        const net::etech::DATA_PLUGINREGISTRY::_pluginName_slice * _tao_from);
    static net::etech::DATA_PLUGINREGISTRY::_pluginName_slice * alloc (void);
    static void zero (
        net::etech::DATA_PLUGINREGISTRY::_pluginName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_SCRIPT_VARLIST::_d_forany
    >
  {
    static void free (
        net::etech::DATA_SCRIPT_VARLIST::_d_slice * _tao_slice);
    static net::etech::DATA_SCRIPT_VARLIST::_d_slice * dup (
        const net::etech::DATA_SCRIPT_VARLIST::_d_slice * _tao_slice);
    static void copy (
        net::etech::DATA_SCRIPT_VARLIST::_d_slice * _tao_to,
        const net::etech::DATA_SCRIPT_VARLIST::_d_slice * _tao_from);
    static net::etech::DATA_SCRIPT_VARLIST::_d_slice * alloc (void);
    static void zero (
        net::etech::DATA_SCRIPT_VARLIST::_d_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_SCRIPT_TEXT::_d_forany
    >
  {
    static void free (
        net::etech::DATA_SCRIPT_TEXT::_d_slice * _tao_slice);
    static net::etech::DATA_SCRIPT_TEXT::_d_slice * dup (
        const net::etech::DATA_SCRIPT_TEXT::_d_slice * _tao_slice);
    static void copy (
        net::etech::DATA_SCRIPT_TEXT::_d_slice * _tao_to,
        const net::etech::DATA_SCRIPT_TEXT::_d_slice * _tao_from);
    static net::etech::DATA_SCRIPT_TEXT::_d_slice * alloc (void);
    static void zero (
        net::etech::DATA_SCRIPT_TEXT::_d_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_SCRIPT::_tag_forany
    >
  {
    static void free (
        net::etech::DATA_SCRIPT::_tag_slice * _tao_slice);
    static net::etech::DATA_SCRIPT::_tag_slice * dup (
        const net::etech::DATA_SCRIPT::_tag_slice * _tao_slice);
    static void copy (
        net::etech::DATA_SCRIPT::_tag_slice * _tao_to,
        const net::etech::DATA_SCRIPT::_tag_slice * _tao_from);
    static net::etech::DATA_SCRIPT::_tag_slice * alloc (void);
    static void zero (
        net::etech::DATA_SCRIPT::_tag_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_SCRIPT::_resultVariableName_forany
    >
  {
    static void free (
        net::etech::DATA_SCRIPT::_resultVariableName_slice * _tao_slice);
    static net::etech::DATA_SCRIPT::_resultVariableName_slice * dup (
        const net::etech::DATA_SCRIPT::_resultVariableName_slice * _tao_slice);
    static void copy (
        net::etech::DATA_SCRIPT::_resultVariableName_slice * _tao_to,
        const net::etech::DATA_SCRIPT::_resultVariableName_slice * _tao_from);
    static net::etech::DATA_SCRIPT::_resultVariableName_slice * alloc (void);
    static void zero (
        net::etech::DATA_SCRIPT::_resultVariableName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_RS_OBJECT::_tag_forany
    >
  {
    static void free (
        net::etech::DATA_RS_OBJECT::_tag_slice * _tao_slice);
    static net::etech::DATA_RS_OBJECT::_tag_slice * dup (
        const net::etech::DATA_RS_OBJECT::_tag_slice * _tao_slice);
    static void copy (
        net::etech::DATA_RS_OBJECT::_tag_slice * _tao_to,
        const net::etech::DATA_RS_OBJECT::_tag_slice * _tao_from);
    static net::etech::DATA_RS_OBJECT::_tag_slice * alloc (void);
    static void zero (
        net::etech::DATA_RS_OBJECT::_tag_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_RS_OBJECT::_pluginName_forany
    >
  {
    static void free (
        net::etech::DATA_RS_OBJECT::_pluginName_slice * _tao_slice);
    static net::etech::DATA_RS_OBJECT::_pluginName_slice * dup (
        const net::etech::DATA_RS_OBJECT::_pluginName_slice * _tao_slice);
    static void copy (
        net::etech::DATA_RS_OBJECT::_pluginName_slice * _tao_to,
        const net::etech::DATA_RS_OBJECT::_pluginName_slice * _tao_from);
    static net::etech::DATA_RS_OBJECT::_pluginName_slice * alloc (void);
    static void zero (
        net::etech::DATA_RS_OBJECT::_pluginName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_RS_HEADER::_userLabel_forany
    >
  {
    static void free (
        net::etech::DATA_RS_HEADER::_userLabel_slice * _tao_slice);
    static net::etech::DATA_RS_HEADER::_userLabel_slice * dup (
        const net::etech::DATA_RS_HEADER::_userLabel_slice * _tao_slice);
    static void copy (
        net::etech::DATA_RS_HEADER::_userLabel_slice * _tao_to,
        const net::etech::DATA_RS_HEADER::_userLabel_slice * _tao_from);
    static net::etech::DATA_RS_HEADER::_userLabel_slice * alloc (void);
    static void zero (
        net::etech::DATA_RS_HEADER::_userLabel_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_RS_HEADER::_userValue_forany
    >
  {
    static void free (
        net::etech::DATA_RS_HEADER::_userValue_slice * _tao_slice);
    static net::etech::DATA_RS_HEADER::_userValue_slice * dup (
        const net::etech::DATA_RS_HEADER::_userValue_slice * _tao_slice);
    static void copy (
        net::etech::DATA_RS_HEADER::_userValue_slice * _tao_to,
        const net::etech::DATA_RS_HEADER::_userValue_slice * _tao_from);
    static net::etech::DATA_RS_HEADER::_userValue_slice * alloc (void);
    static void zero (
        net::etech::DATA_RS_HEADER::_userValue_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_RS_BODY::_userValue_forany
    >
  {
    static void free (
        net::etech::DATA_RS_BODY::_userValue_slice * _tao_slice);
    static net::etech::DATA_RS_BODY::_userValue_slice * dup (
        const net::etech::DATA_RS_BODY::_userValue_slice * _tao_slice);
    static void copy (
        net::etech::DATA_RS_BODY::_userValue_slice * _tao_to,
        const net::etech::DATA_RS_BODY::_userValue_slice * _tao_from);
    static net::etech::DATA_RS_BODY::_userValue_slice * alloc (void);
    static void zero (
        net::etech::DATA_RS_BODY::_userValue_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_RS_TOTALIZER::_label_forany
    >
  {
    static void free (
        net::etech::DATA_RS_TOTALIZER::_label_slice * _tao_slice);
    static net::etech::DATA_RS_TOTALIZER::_label_slice * dup (
        const net::etech::DATA_RS_TOTALIZER::_label_slice * _tao_slice);
    static void copy (
        net::etech::DATA_RS_TOTALIZER::_label_slice * _tao_to,
        const net::etech::DATA_RS_TOTALIZER::_label_slice * _tao_from);
    static net::etech::DATA_RS_TOTALIZER::_label_slice * alloc (void);
    static void zero (
        net::etech::DATA_RS_TOTALIZER::_label_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_RS_FOOTER::_label_forany
    >
  {
    static void free (
        net::etech::DATA_RS_FOOTER::_label_slice * _tao_slice);
    static net::etech::DATA_RS_FOOTER::_label_slice * dup (
        const net::etech::DATA_RS_FOOTER::_label_slice * _tao_slice);
    static void copy (
        net::etech::DATA_RS_FOOTER::_label_slice * _tao_to,
        const net::etech::DATA_RS_FOOTER::_label_slice * _tao_from);
    static net::etech::DATA_RS_FOOTER::_label_slice * alloc (void);
    static void zero (
        net::etech::DATA_RS_FOOTER::_label_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_RS_FOOTER::_userValue_forany
    >
  {
    static void free (
        net::etech::DATA_RS_FOOTER::_userValue_slice * _tao_slice);
    static net::etech::DATA_RS_FOOTER::_userValue_slice * dup (
        const net::etech::DATA_RS_FOOTER::_userValue_slice * _tao_slice);
    static void copy (
        net::etech::DATA_RS_FOOTER::_userValue_slice * _tao_to,
        const net::etech::DATA_RS_FOOTER::_userValue_slice * _tao_from);
    static net::etech::DATA_RS_FOOTER::_userValue_slice * alloc (void);
    static void zero (
        net::etech::DATA_RS_FOOTER::_userValue_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_RS_COMMON::_tag_forany
    >
  {
    static void free (
        net::etech::DATA_RS_COMMON::_tag_slice * _tao_slice);
    static net::etech::DATA_RS_COMMON::_tag_slice * dup (
        const net::etech::DATA_RS_COMMON::_tag_slice * _tao_slice);
    static void copy (
        net::etech::DATA_RS_COMMON::_tag_slice * _tao_to,
        const net::etech::DATA_RS_COMMON::_tag_slice * _tao_from);
    static net::etech::DATA_RS_COMMON::_tag_slice * alloc (void);
    static void zero (
        net::etech::DATA_RS_COMMON::_tag_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DATA_REPORTSCHEMA::_tag_forany
    >
  {
    static void free (
        net::etech::DATA_REPORTSCHEMA::_tag_slice * _tao_slice);
    static net::etech::DATA_REPORTSCHEMA::_tag_slice * dup (
        const net::etech::DATA_REPORTSCHEMA::_tag_slice * _tao_slice);
    static void copy (
        net::etech::DATA_REPORTSCHEMA::_tag_slice * _tao_to,
        const net::etech::DATA_REPORTSCHEMA::_tag_slice * _tao_from);
    static net::etech::DATA_REPORTSCHEMA::_tag_slice * alloc (void);
    static void zero (
        net::etech::DATA_REPORTSCHEMA::_tag_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::STRUCT_PARAMS::_Name_forany
    >
  {
    static void free (
        net::etech::STRUCT_PARAMS::_Name_slice * _tao_slice);
    static net::etech::STRUCT_PARAMS::_Name_slice * dup (
        const net::etech::STRUCT_PARAMS::_Name_slice * _tao_slice);
    static void copy (
        net::etech::STRUCT_PARAMS::_Name_slice * _tao_to,
        const net::etech::STRUCT_PARAMS::_Name_slice * _tao_from);
    static net::etech::STRUCT_PARAMS::_Name_slice * alloc (void);
    static void zero (
        net::etech::STRUCT_PARAMS::_Name_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::STRUCT_PARAMS::_Description_forany
    >
  {
    static void free (
        net::etech::STRUCT_PARAMS::_Description_slice * _tao_slice);
    static net::etech::STRUCT_PARAMS::_Description_slice * dup (
        const net::etech::STRUCT_PARAMS::_Description_slice * _tao_slice);
    static void copy (
        net::etech::STRUCT_PARAMS::_Description_slice * _tao_to,
        const net::etech::STRUCT_PARAMS::_Description_slice * _tao_from);
    static net::etech::STRUCT_PARAMS::_Description_slice * alloc (void);
    static void zero (
        net::etech::STRUCT_PARAMS::_Description_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::STRUCT_PARAMS::_user_forany
    >
  {
    static void free (
        net::etech::STRUCT_PARAMS::_user_slice * _tao_slice);
    static net::etech::STRUCT_PARAMS::_user_slice * dup (
        const net::etech::STRUCT_PARAMS::_user_slice * _tao_slice);
    static void copy (
        net::etech::STRUCT_PARAMS::_user_slice * _tao_to,
        const net::etech::STRUCT_PARAMS::_user_slice * _tao_from);
    static net::etech::STRUCT_PARAMS::_user_slice * alloc (void);
    static void zero (
        net::etech::STRUCT_PARAMS::_user_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::STRUCT_PARAMS::_user_ip_forany
    >
  {
    static void free (
        net::etech::STRUCT_PARAMS::_user_ip_slice * _tao_slice);
    static net::etech::STRUCT_PARAMS::_user_ip_slice * dup (
        const net::etech::STRUCT_PARAMS::_user_ip_slice * _tao_slice);
    static void copy (
        net::etech::STRUCT_PARAMS::_user_ip_slice * _tao_to,
        const net::etech::STRUCT_PARAMS::_user_ip_slice * _tao_from);
    static net::etech::STRUCT_PARAMS::_user_ip_slice * alloc (void);
    static void zero (
        net::etech::STRUCT_PARAMS::_user_ip_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::STRUCT_PARAMS::_ffRelation_forany
    >
  {
    static void free (
        net::etech::STRUCT_PARAMS::_ffRelation_slice * _tao_slice);
    static net::etech::STRUCT_PARAMS::_ffRelation_slice * dup (
        const net::etech::STRUCT_PARAMS::_ffRelation_slice * _tao_slice);
    static void copy (
        net::etech::STRUCT_PARAMS::_ffRelation_slice * _tao_to,
        const net::etech::STRUCT_PARAMS::_ffRelation_slice * _tao_from);
    static net::etech::STRUCT_PARAMS::_ffRelation_slice * alloc (void);
    static void zero (
        net::etech::STRUCT_PARAMS::_ffRelation_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::FEP_NODE::_Key_forany
    >
  {
    static void free (
        net::etech::FEP_NODE::_Key_slice * _tao_slice);
    static net::etech::FEP_NODE::_Key_slice * dup (
        const net::etech::FEP_NODE::_Key_slice * _tao_slice);
    static void copy (
        net::etech::FEP_NODE::_Key_slice * _tao_to,
        const net::etech::FEP_NODE::_Key_slice * _tao_from);
    static net::etech::FEP_NODE::_Key_slice * alloc (void);
    static void zero (
        net::etech::FEP_NODE::_Key_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::PIVOTREQ::_enabledKeys_forany
    >
  {
    static void free (
        net::etech::PIVOTREQ::_enabledKeys_slice * _tao_slice);
    static net::etech::PIVOTREQ::_enabledKeys_slice * dup (
        const net::etech::PIVOTREQ::_enabledKeys_slice * _tao_slice);
    static void copy (
        net::etech::PIVOTREQ::_enabledKeys_slice * _tao_to,
        const net::etech::PIVOTREQ::_enabledKeys_slice * _tao_from);
    static net::etech::PIVOTREQ::_enabledKeys_slice * alloc (void);
    static void zero (
        net::etech::PIVOTREQ::_enabledKeys_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::PIVOTREQ::_enabledColumns_forany
    >
  {
    static void free (
        net::etech::PIVOTREQ::_enabledColumns_slice * _tao_slice);
    static net::etech::PIVOTREQ::_enabledColumns_slice * dup (
        const net::etech::PIVOTREQ::_enabledColumns_slice * _tao_slice);
    static void copy (
        net::etech::PIVOTREQ::_enabledColumns_slice * _tao_to,
        const net::etech::PIVOTREQ::_enabledColumns_slice * _tao_from);
    static net::etech::PIVOTREQ::_enabledColumns_slice * alloc (void);
    static void zero (
        net::etech::PIVOTREQ::_enabledColumns_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::INVOKE_STATUS::_percent_forany
    >
  {
    static void free (
        net::etech::INVOKE_STATUS::_percent_slice * _tao_slice);
    static net::etech::INVOKE_STATUS::_percent_slice * dup (
        const net::etech::INVOKE_STATUS::_percent_slice * _tao_slice);
    static void copy (
        net::etech::INVOKE_STATUS::_percent_slice * _tao_to,
        const net::etech::INVOKE_STATUS::_percent_slice * _tao_from);
    static net::etech::INVOKE_STATUS::_percent_slice * alloc (void);
    static void zero (
        net::etech::INVOKE_STATUS::_percent_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::INVOKE_STATUS::_desc_forany
    >
  {
    static void free (
        net::etech::INVOKE_STATUS::_desc_slice * _tao_slice);
    static net::etech::INVOKE_STATUS::_desc_slice * dup (
        const net::etech::INVOKE_STATUS::_desc_slice * _tao_slice);
    static void copy (
        net::etech::INVOKE_STATUS::_desc_slice * _tao_to,
        const net::etech::INVOKE_STATUS::_desc_slice * _tao_from);
    static net::etech::INVOKE_STATUS::_desc_slice * alloc (void);
    static void zero (
        net::etech::INVOKE_STATUS::_desc_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::INVOKE_STATUS::_url_forany
    >
  {
    static void free (
        net::etech::INVOKE_STATUS::_url_slice * _tao_slice);
    static net::etech::INVOKE_STATUS::_url_slice * dup (
        const net::etech::INVOKE_STATUS::_url_slice * _tao_slice);
    static void copy (
        net::etech::INVOKE_STATUS::_url_slice * _tao_to,
        const net::etech::INVOKE_STATUS::_url_slice * _tao_from);
    static net::etech::INVOKE_STATUS::_url_slice * alloc (void);
    static void zero (
        net::etech::INVOKE_STATUS::_url_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DIR_ENTRY::_name_forany
    >
  {
    static void free (
        net::etech::DIR_ENTRY::_name_slice * _tao_slice);
    static net::etech::DIR_ENTRY::_name_slice * dup (
        const net::etech::DIR_ENTRY::_name_slice * _tao_slice);
    static void copy (
        net::etech::DIR_ENTRY::_name_slice * _tao_to,
        const net::etech::DIR_ENTRY::_name_slice * _tao_from);
    static net::etech::DIR_ENTRY::_name_slice * alloc (void);
    static void zero (
        net::etech::DIR_ENTRY::_name_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::DIR_ENTRY::_date_forany
    >
  {
    static void free (
        net::etech::DIR_ENTRY::_date_slice * _tao_slice);
    static net::etech::DIR_ENTRY::_date_slice * dup (
        const net::etech::DIR_ENTRY::_date_slice * _tao_slice);
    static void copy (
        net::etech::DIR_ENTRY::_date_slice * _tao_to,
        const net::etech::DIR_ENTRY::_date_slice * _tao_from);
    static net::etech::DIR_ENTRY::_date_slice * alloc (void);
    static void zero (
        net::etech::DIR_ENTRY::_date_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ADAMS_USER::_login_forany
    >
  {
    static void free (
        net::etech::ADAMS_USER::_login_slice * _tao_slice);
    static net::etech::ADAMS_USER::_login_slice * dup (
        const net::etech::ADAMS_USER::_login_slice * _tao_slice);
    static void copy (
        net::etech::ADAMS_USER::_login_slice * _tao_to,
        const net::etech::ADAMS_USER::_login_slice * _tao_from);
    static net::etech::ADAMS_USER::_login_slice * alloc (void);
    static void zero (
        net::etech::ADAMS_USER::_login_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ADAMS_USER::_passwd_forany
    >
  {
    static void free (
        net::etech::ADAMS_USER::_passwd_slice * _tao_slice);
    static net::etech::ADAMS_USER::_passwd_slice * dup (
        const net::etech::ADAMS_USER::_passwd_slice * _tao_slice);
    static void copy (
        net::etech::ADAMS_USER::_passwd_slice * _tao_to,
        const net::etech::ADAMS_USER::_passwd_slice * _tao_from);
    static net::etech::ADAMS_USER::_passwd_slice * alloc (void);
    static void zero (
        net::etech::ADAMS_USER::_passwd_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ADAMS_USER::_enabledConfigurations_forany
    >
  {
    static void free (
        net::etech::ADAMS_USER::_enabledConfigurations_slice * _tao_slice);
    static net::etech::ADAMS_USER::_enabledConfigurations_slice * dup (
        const net::etech::ADAMS_USER::_enabledConfigurations_slice * _tao_slice);
    static void copy (
        net::etech::ADAMS_USER::_enabledConfigurations_slice * _tao_to,
        const net::etech::ADAMS_USER::_enabledConfigurations_slice * _tao_from);
    static net::etech::ADAMS_USER::_enabledConfigurations_slice * alloc (void);
    static void zero (
        net::etech::ADAMS_USER::_enabledConfigurations_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_RELATION::_description_forany
    >
  {
    static void free (
        net::etech::ALARM_RELATION::_description_slice * _tao_slice);
    static net::etech::ALARM_RELATION::_description_slice * dup (
        const net::etech::ALARM_RELATION::_description_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_RELATION::_description_slice * _tao_to,
        const net::etech::ALARM_RELATION::_description_slice * _tao_from);
    static net::etech::ALARM_RELATION::_description_slice * alloc (void);
    static void zero (
        net::etech::ALARM_RELATION::_description_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_RELATION::_relationElements_forany
    >
  {
    static void free (
        net::etech::ALARM_RELATION::_relationElements_slice * _tao_slice);
    static net::etech::ALARM_RELATION::_relationElements_slice * dup (
        const net::etech::ALARM_RELATION::_relationElements_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_RELATION::_relationElements_slice * _tao_to,
        const net::etech::ALARM_RELATION::_relationElements_slice * _tao_from);
    static net::etech::ALARM_RELATION::_relationElements_slice * alloc (void);
    static void zero (
        net::etech::ALARM_RELATION::_relationElements_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_RELATION::_relationElementsEnabled_forany
    >
  {
    static void free (
        net::etech::ALARM_RELATION::_relationElementsEnabled_slice * _tao_slice);
    static net::etech::ALARM_RELATION::_relationElementsEnabled_slice * dup (
        const net::etech::ALARM_RELATION::_relationElementsEnabled_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_RELATION::_relationElementsEnabled_slice * _tao_to,
        const net::etech::ALARM_RELATION::_relationElementsEnabled_slice * _tao_from);
    static net::etech::ALARM_RELATION::_relationElementsEnabled_slice * alloc (void);
    static void zero (
        net::etech::ALARM_RELATION::_relationElementsEnabled_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_RELATION::_alarmHandlers_forany
    >
  {
    static void free (
        net::etech::ALARM_RELATION::_alarmHandlers_slice * _tao_slice);
    static net::etech::ALARM_RELATION::_alarmHandlers_slice * dup (
        const net::etech::ALARM_RELATION::_alarmHandlers_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_RELATION::_alarmHandlers_slice * _tao_to,
        const net::etech::ALARM_RELATION::_alarmHandlers_slice * _tao_from);
    static net::etech::ALARM_RELATION::_alarmHandlers_slice * alloc (void);
    static void zero (
        net::etech::ALARM_RELATION::_alarmHandlers_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_GENERATOR::_shortDescription_forany
    >
  {
    static void free (
        net::etech::ALARM_GENERATOR::_shortDescription_slice * _tao_slice);
    static net::etech::ALARM_GENERATOR::_shortDescription_slice * dup (
        const net::etech::ALARM_GENERATOR::_shortDescription_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_GENERATOR::_shortDescription_slice * _tao_to,
        const net::etech::ALARM_GENERATOR::_shortDescription_slice * _tao_from);
    static net::etech::ALARM_GENERATOR::_shortDescription_slice * alloc (void);
    static void zero (
        net::etech::ALARM_GENERATOR::_shortDescription_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_GENERATOR::_longDescription_forany
    >
  {
    static void free (
        net::etech::ALARM_GENERATOR::_longDescription_slice * _tao_slice);
    static net::etech::ALARM_GENERATOR::_longDescription_slice * dup (
        const net::etech::ALARM_GENERATOR::_longDescription_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_GENERATOR::_longDescription_slice * _tao_to,
        const net::etech::ALARM_GENERATOR::_longDescription_slice * _tao_from);
    static net::etech::ALARM_GENERATOR::_longDescription_slice * alloc (void);
    static void zero (
        net::etech::ALARM_GENERATOR::_longDescription_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_GENERATOR::_idThresholdGenerator_forany
    >
  {
    static void free (
        net::etech::ALARM_GENERATOR::_idThresholdGenerator_slice * _tao_slice);
    static net::etech::ALARM_GENERATOR::_idThresholdGenerator_slice * dup (
        const net::etech::ALARM_GENERATOR::_idThresholdGenerator_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_GENERATOR::_idThresholdGenerator_slice * _tao_to,
        const net::etech::ALARM_GENERATOR::_idThresholdGenerator_slice * _tao_from);
    static net::etech::ALARM_GENERATOR::_idThresholdGenerator_slice * alloc (void);
    static void zero (
        net::etech::ALARM_GENERATOR::_idThresholdGenerator_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::THRESHOLD_GENERATOR::_description_forany
    >
  {
    static void free (
        net::etech::THRESHOLD_GENERATOR::_description_slice * _tao_slice);
    static net::etech::THRESHOLD_GENERATOR::_description_slice * dup (
        const net::etech::THRESHOLD_GENERATOR::_description_slice * _tao_slice);
    static void copy (
        net::etech::THRESHOLD_GENERATOR::_description_slice * _tao_to,
        const net::etech::THRESHOLD_GENERATOR::_description_slice * _tao_from);
    static net::etech::THRESHOLD_GENERATOR::_description_slice * alloc (void);
    static void zero (
        net::etech::THRESHOLD_GENERATOR::_description_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ALARM_PARAMS::_relationList_forany
    >
  {
    static void free (
        net::etech::ALARM_PARAMS::_relationList_slice * _tao_slice);
    static net::etech::ALARM_PARAMS::_relationList_slice * dup (
        const net::etech::ALARM_PARAMS::_relationList_slice * _tao_slice);
    static void copy (
        net::etech::ALARM_PARAMS::_relationList_slice * _tao_to,
        const net::etech::ALARM_PARAMS::_relationList_slice * _tao_from);
    static net::etech::ALARM_PARAMS::_relationList_slice * alloc (void);
    static void zero (
        net::etech::ALARM_PARAMS::_relationList_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::SCRIPT_VALIDATE::_variables_forany
    >
  {
    static void free (
        net::etech::SCRIPT_VALIDATE::_variables_slice * _tao_slice);
    static net::etech::SCRIPT_VALIDATE::_variables_slice * dup (
        const net::etech::SCRIPT_VALIDATE::_variables_slice * _tao_slice);
    static void copy (
        net::etech::SCRIPT_VALIDATE::_variables_slice * _tao_to,
        const net::etech::SCRIPT_VALIDATE::_variables_slice * _tao_from);
    static net::etech::SCRIPT_VALIDATE::_variables_slice * alloc (void);
    static void zero (
        net::etech::SCRIPT_VALIDATE::_variables_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::SCRIPT_VALIDATE::_variablesText_forany
    >
  {
    static void free (
        net::etech::SCRIPT_VALIDATE::_variablesText_slice * _tao_slice);
    static net::etech::SCRIPT_VALIDATE::_variablesText_slice * dup (
        const net::etech::SCRIPT_VALIDATE::_variablesText_slice * _tao_slice);
    static void copy (
        net::etech::SCRIPT_VALIDATE::_variablesText_slice * _tao_to,
        const net::etech::SCRIPT_VALIDATE::_variablesText_slice * _tao_from);
    static net::etech::SCRIPT_VALIDATE::_variablesText_slice * alloc (void);
    static void zero (
        net::etech::SCRIPT_VALIDATE::_variablesText_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::SCRIPT_VALIDATE::_scriptText_forany
    >
  {
    static void free (
        net::etech::SCRIPT_VALIDATE::_scriptText_slice * _tao_slice);
    static net::etech::SCRIPT_VALIDATE::_scriptText_slice * dup (
        const net::etech::SCRIPT_VALIDATE::_scriptText_slice * _tao_slice);
    static void copy (
        net::etech::SCRIPT_VALIDATE::_scriptText_slice * _tao_to,
        const net::etech::SCRIPT_VALIDATE::_scriptText_slice * _tao_from);
    static net::etech::SCRIPT_VALIDATE::_scriptText_slice * alloc (void);
    static void zero (
        net::etech::SCRIPT_VALIDATE::_scriptText_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::SCRIPT_VALIDATE::_resultVariableName_forany
    >
  {
    static void free (
        net::etech::SCRIPT_VALIDATE::_resultVariableName_slice * _tao_slice);
    static net::etech::SCRIPT_VALIDATE::_resultVariableName_slice * dup (
        const net::etech::SCRIPT_VALIDATE::_resultVariableName_slice * _tao_slice);
    static void copy (
        net::etech::SCRIPT_VALIDATE::_resultVariableName_slice * _tao_to,
        const net::etech::SCRIPT_VALIDATE::_resultVariableName_slice * _tao_from);
    static net::etech::SCRIPT_VALIDATE::_resultVariableName_slice * alloc (void);
    static void zero (
        net::etech::SCRIPT_VALIDATE::_resultVariableName_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      net::etech::ERROR_TEXT::_text_forany
    >
  {
    static void free (
        net::etech::ERROR_TEXT::_text_slice * _tao_slice);
    static net::etech::ERROR_TEXT::_text_slice * dup (
        const net::etech::ERROR_TEXT::_text_slice * _tao_slice);
    static void copy (
        net::etech::ERROR_TEXT::_text_slice * _tao_to,
        const net::etech::ERROR_TEXT::_text_slice * _tao_from);
    static net::etech::ERROR_TEXT::_text_slice * alloc (void);
    static void zero (
        net::etech::ERROR_TEXT::_text_slice * _tao_slice);
  };

#if !defined (_NET_ETECH_ETSS_ETSS_SERVER_TRAPPER_SERVER__TRAITS_)
#define _NET_ETECH_ETSS_ETSS_SERVER_TRAPPER_SERVER__TRAITS_

  template<>
  struct  Objref_Traits< ::net::etech::ETSS::etss_server_trapper_server>
  {
    static ::net::etech::ETSS::etss_server_trapper_server_ptr duplicate (
        ::net::etech::ETSS::etss_server_trapper_server_ptr p);
    static void release (
        ::net::etech::ETSS::etss_server_trapper_server_ptr p);
    static ::net::etech::ETSS::etss_server_trapper_server_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::net::etech::ETSS::etss_server_trapper_server_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_NET_ETECH_ETSS_ETSS_SERVER_SERVER__TRAITS_)
#define _NET_ETECH_ETSS_ETSS_SERVER_SERVER__TRAITS_

  template<>
  struct  Objref_Traits< ::net::etech::ETSS::etss_server_server>
  {
    static ::net::etech::ETSS::etss_server_server_ptr duplicate (
        ::net::etech::ETSS::etss_server_server_ptr p);
    static void release (
        ::net::etech::ETSS::etss_server_server_ptr p);
    static ::net::etech::ETSS::etss_server_server_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::net::etech::ETSS::etss_server_server_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_NET_ETECH_ETSS_ETSS_AGENT_SERVER__TRAITS_)
#define _NET_ETECH_ETSS_ETSS_AGENT_SERVER__TRAITS_

  template<>
  struct  Objref_Traits< ::net::etech::ETSS::etss_agent_server>
  {
    static ::net::etech::ETSS::etss_agent_server_ptr duplicate (
        ::net::etech::ETSS::etss_agent_server_ptr p);
    static void release (
        ::net::etech::ETSS::etss_agent_server_ptr p);
    static ::net::etech::ETSS::etss_agent_server_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::net::etech::ETSS::etss_agent_server_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_NET_ETECH_ETSS_ETSS_SERVER_THRESHOLD_SERVER__TRAITS_)
#define _NET_ETECH_ETSS_ETSS_SERVER_THRESHOLD_SERVER__TRAITS_

  template<>
  struct  Objref_Traits< ::net::etech::ETSS::etss_server_threshold_server>
  {
    static ::net::etech::ETSS::etss_server_threshold_server_ptr duplicate (
        ::net::etech::ETSS::etss_server_threshold_server_ptr p);
    static void release (
        ::net::etech::ETSS::etss_server_threshold_server_ptr p);
    static ::net::etech::ETSS::etss_server_threshold_server_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::net::etech::ETSS::etss_server_threshold_server_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_NET_ETECH_ETSS_ETSS_AGENT_THRESHOLD_SERVER__TRAITS_)
#define _NET_ETECH_ETSS_ETSS_AGENT_THRESHOLD_SERVER__TRAITS_

  template<>
  struct  Objref_Traits< ::net::etech::ETSS::etss_agent_threshold_server>
  {
    static ::net::etech::ETSS::etss_agent_threshold_server_ptr duplicate (
        ::net::etech::ETSS::etss_agent_threshold_server_ptr p);
    static void release (
        ::net::etech::ETSS::etss_agent_threshold_server_ptr p);
    static ::net::etech::ETSS::etss_agent_threshold_server_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::net::etech::ETSS::etss_agent_threshold_server_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, net::etech::ticketsTypes _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, net::etech::ticketsTypes &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, net::etech::ValuesTypes _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, net::etech::ValuesTypes &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DETAIL_VALUES &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DETAIL_VALUES &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DETAIL_VALUES::_descr_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DETAIL_VALUES::_descr_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DETAIL_VALUES::_fieldValue_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DETAIL_VALUES::_fieldValue_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_DetailValuesSeq_H_
#define _TAO_CDR_OP_net_etech_DetailValuesSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::DetailValuesSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::DetailValuesSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_DetailValuesSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DETAIL_EVENTS &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DETAIL_EVENTS &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DETAIL_EVENTS::_eventName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DETAIL_EVENTS::_eventName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_DetailEventsSeq_H_
#define _TAO_CDR_OP_net_etech_DetailEventsSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::DetailEventsSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::DetailEventsSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_DetailEventsSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DETAIL_INFO &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DETAIL_INFO &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DETAIL_INFO::_groupLabel_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DETAIL_INFO::_groupLabel_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DETAIL_INFO::_groupIconUrl_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DETAIL_INFO::_groupIconUrl_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_DetailInfoSeq_H_
#define _TAO_CDR_OP_net_etech_DetailInfoSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::DetailInfoSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::DetailInfoSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_DetailInfoSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_sLinks_H_
#define _TAO_CDR_OP_net_etech_sLinks_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::sLinks &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::sLinks &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_sLinks_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_sTypeId_H_
#define _TAO_CDR_OP_net_etech_sTypeId_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::sTypeId &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::sTypeId &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_sTypeId_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DETAIL_REQUEST &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DETAIL_REQUEST &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DETAIL_REQUEST::_elementCode_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DETAIL_REQUEST::_elementCode_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_FEP_IMAGE &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_FEP_IMAGE &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_FEP_IMAGE::_Description_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_FEP_IMAGE::_Description_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_FepImageSeq_H_
#define _TAO_CDR_OP_net_etech_FepImageSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::FepImageSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::FepImageSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_FepImageSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::EXTRA_INFO &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::EXTRA_INFO &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::EXTRA_INFO::_einfo_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::EXTRA_INFO::_einfo_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ExtraInfoSeq_H_
#define _TAO_CDR_OP_net_etech_ExtraInfoSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ExtraInfoSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ExtraInfoSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ExtraInfoSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_LinkSeq_H_
#define _TAO_CDR_OP_net_etech_LinkSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::LinkSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::LinkSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_LinkSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ALARM_INFO &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_INFO &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_INFO::_elementCode_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_INFO::_elementCode_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_INFO::_dateTime_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_INFO::_dateTime_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_AlarmInfoSeq_H_
#define _TAO_CDR_OP_net_etech_AlarmInfoSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::AlarmInfoSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::AlarmInfoSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_AlarmInfoSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::TTMRECORDIMAGE &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_flag_cart_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_flag_cart_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_operator_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_operator_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_type_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_type_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_traffic_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_traffic_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_code_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_code_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_flagdest_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_flagdest_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_ac_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_ac_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_iag_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_iag_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_node_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_node_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_city_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_city_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_alarmon_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_alarmon_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_idalarm_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_idalarm_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_anomaly_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_anomaly_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_origin_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_origin_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_anomaly_c_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_anomaly_c_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_origin_c_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_origin_c_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_ticketdate_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_ticketdate_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMRECORDIMAGE::_ttm_flaggen_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMRECORDIMAGE::_ttm_flaggen_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::TTMSELECT &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMSELECT &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::TTMSELECT::_ttmDesc_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TTMSELECT::_ttmDesc_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_TtmSelectSeq_H_
#define _TAO_CDR_OP_net_etech_TtmSelectSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::TtmSelectSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::TtmSelectSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_TtmSelectSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::USERLOGIN &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::USERLOGIN &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_DR &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DR &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DR::_description_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DR::_description_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DR::_indexSuffix_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DR::_indexSuffix_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DR::_startTime_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DR::_startTime_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DR::_endTime_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DR::_endTime_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::GLOBALOPT &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::GLOBALOPT &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::GLOBALOPT::_drPluginName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::GLOBALOPT::_drPluginName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::GLOBALOPT::_drPathName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::GLOBALOPT::_drPathName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::GLOBALOPT::_glbDefaultPluginPath_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::GLOBALOPT::_glbDefaultPluginPath_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::GLOBALOPT::_glbAlias_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::GLOBALOPT::_glbAlias_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::GLOBALOPT::_glbAuthor_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::GLOBALOPT::_glbAuthor_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::GLOBALOPT::_glbLastModified_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::GLOBALOPT::_glbLastModified_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::GLOBALOPT::_indexFileName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::GLOBALOPT::_indexFileName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_RELATIONS &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RELATIONS &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_RELATIONS::_nextLevelRelations_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RELATIONS::_nextLevelRelations_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_RELATIONS::_restrictions_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RELATIONS::_restrictions_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_RELATIONS::_tiedRestrictions_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RELATIONS::_tiedRestrictions_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_DATAELEMENT &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DATAELEMENT &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DATAELEMENT::_shortDescription_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DATAELEMENT::_shortDescription_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DATAELEMENT::_longDescription_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DATAELEMENT::_longDescription_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DATAELEMENT::_pixmapFileName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DATAELEMENT::_pixmapFileName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DATAELEMENT::_valueRange_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DATAELEMENT::_valueRange_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DATAELEMENT::_valueList_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DATAELEMENT::_valueList_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DATAELEMENT::_valueListLabel_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DATAELEMENT::_valueListLabel_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DATAELEMENT::_aggregateRestrictions_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DATAELEMENT::_aggregateRestrictions_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DATAELEMENT::_exceptions_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DATAELEMENT::_exceptions_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DATAELEMENT::_Suffix_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DATAELEMENT::_Suffix_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DATAELEMENT::_valueShifter_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DATAELEMENT::_valueShifter_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_DATAELEMENT::_scripts_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_DATAELEMENT::_scripts_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::REST_INFO &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::REST_INFO &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::REST_INFO::_Value_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::REST_INFO::_Value_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::REST_INFO::_AsciiValue_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::REST_INFO::_AsciiValue_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_FEP &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_FEP &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_FEP::_Description_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_FEP::_Description_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_ANALYSISTYPE &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_ANALYSISTYPE &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_ANALYSISTYPE::_LongDescription_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_ANALYSISTYPE::_LongDescription_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_ANALYSISTYPE::_ShortDescription_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_ANALYSISTYPE::_ShortDescription_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_ANALYSISTYPE::_relations_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_ANALYSISTYPE::_relations_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_ANALYSISTYPE::_reportsId_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_ANALYSISTYPE::_reportsId_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_EXCEPTIONS &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_EXCEPTIONS &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_EXCEPTIONS::_tag_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_EXCEPTIONS::_tag_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_EXCEPTIONS::_description_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_EXCEPTIONS::_description_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_EXCEPTIONS::_triggeredValue_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_EXCEPTIONS::_triggeredValue_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_EXCEPTIONS::_targetValue_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_EXCEPTIONS::_targetValue_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATE_INFO &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATE_INFO &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATE_INFO::_dateString_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATE_INFO::_dateString_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_RELSeq_H_
#define _TAO_CDR_OP_net_etech_RELSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::RELSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::RELSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_RELSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_DateSeq_H_
#define _TAO_CDR_OP_net_etech_DateSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::DateSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::DateSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_DateSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_HELP &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_HELP &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_HELP::_key_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_HELP::_key_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_HELP::_data_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_HELP::_data_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_HelperSeq_H_
#define _TAO_CDR_OP_net_etech_HelperSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::HelperSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::HelperSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_HelperSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::STRUCT_JOB &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::STRUCT_JOB &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::STRUCT_JOB::_user_str_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::STRUCT_JOB::_user_str_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::STRUCT_JOB::_dest_fep_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::STRUCT_JOB::_dest_fep_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::STRUCT_JOB::_dest_dir_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::STRUCT_JOB::_dest_dir_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::STRUCT_JOB::_description_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::STRUCT_JOB::_description_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_JOBSeq_H_
#define _TAO_CDR_OP_net_etech_JOBSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::JOBSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::JOBSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_JOBSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::STRUCT_USER &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::STRUCT_USER &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::STRUCT_USER::_user_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::STRUCT_USER::_user_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::STRUCT_USER::_password_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::STRUCT_USER::_password_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_JobUserSeq_H_
#define _TAO_CDR_OP_net_etech_JobUserSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::JobUserSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::JobUserSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_JobUserSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::COUNTER_KIT &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::COUNTER_KIT &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::COUNTER_KIT::_tag_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::COUNTER_KIT::_tag_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::COUNTER_KIT::_description_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::COUNTER_KIT::_description_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_CounterKitSeq_H_
#define _TAO_CDR_OP_net_etech_CounterKitSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::CounterKitSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::CounterKitSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_CounterKitSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::COUNTERS &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::COUNTERS &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::COUNTERS::_tag_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::COUNTERS::_tag_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::COUNTERS::_pluginName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::COUNTERS::_pluginName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::COUNTERS::_pathName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::COUNTERS::_pathName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_CountersSeq_H_
#define _TAO_CDR_OP_net_etech_CountersSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::CountersSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::CountersSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_CountersSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_PLUGINREGISTRY &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_PLUGINREGISTRY &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_PLUGINREGISTRY::_tag_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_PLUGINREGISTRY::_tag_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_PLUGINREGISTRY::_pluginName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_PLUGINREGISTRY::_pluginName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_PluginRegistrySeq_H_
#define _TAO_CDR_OP_net_etech_PluginRegistrySeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::PluginRegistrySeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::PluginRegistrySeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_PluginRegistrySeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_SCRIPT_VARLIST &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_SCRIPT_VARLIST &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_SCRIPT_VARLIST::_d_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_SCRIPT_VARLIST::_d_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_VariablesSeq_H_
#define _TAO_CDR_OP_net_etech_VariablesSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::VariablesSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::VariablesSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_VariablesSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_SCRIPT_TEXT &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_SCRIPT_TEXT &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_SCRIPT_TEXT::_d_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_SCRIPT_TEXT::_d_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ScriptTextSeq_H_
#define _TAO_CDR_OP_net_etech_ScriptTextSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ScriptTextSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ScriptTextSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ScriptTextSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_SCRIPT &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_SCRIPT &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_SCRIPT::_tag_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_SCRIPT::_tag_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_SCRIPT::_resultVariableName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_SCRIPT::_resultVariableName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ScriptSeq_H_
#define _TAO_CDR_OP_net_etech_ScriptSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ScriptSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ScriptSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ScriptSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_RS_HTML &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RS_HTML &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_RS_OBJECT &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RS_OBJECT &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_RS_OBJECT::_tag_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RS_OBJECT::_tag_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_RS_OBJECT::_pluginName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RS_OBJECT::_pluginName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_RS_HEADER &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RS_HEADER &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_RS_HEADER::_userLabel_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RS_HEADER::_userLabel_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_RS_HEADER::_userValue_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RS_HEADER::_userValue_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_RS_BODY &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RS_BODY &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_RS_BODY::_userValue_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RS_BODY::_userValue_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_RS_TOTALIZER &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RS_TOTALIZER &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_RS_TOTALIZER::_label_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RS_TOTALIZER::_label_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_RS_FOOTER &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RS_FOOTER &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_RS_FOOTER::_label_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RS_FOOTER::_label_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_RS_FOOTER::_userValue_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RS_FOOTER::_userValue_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_RS_COMMON &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RS_COMMON &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_RS_COMMON::_tag_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RS_COMMON::_tag_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_RSO_OBJECT &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RSO_OBJECT &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ReportObjectSeq_H_
#define _TAO_CDR_OP_net_etech_ReportObjectSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ReportObjectSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ReportObjectSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ReportObjectSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_RSO_HEADER &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RSO_HEADER &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ReportHeaderSeq_H_
#define _TAO_CDR_OP_net_etech_ReportHeaderSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ReportHeaderSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ReportHeaderSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ReportHeaderSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_RSO_BODY &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RSO_BODY &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ReportBodySeq_H_
#define _TAO_CDR_OP_net_etech_ReportBodySeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ReportBodySeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ReportBodySeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ReportBodySeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_RSO_TOTALIZER &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RSO_TOTALIZER &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ReportTotalizerSeq_H_
#define _TAO_CDR_OP_net_etech_ReportTotalizerSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ReportTotalizerSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ReportTotalizerSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ReportTotalizerSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_RSO_FOOTER &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_RSO_FOOTER &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ReportFooterSeq_H_
#define _TAO_CDR_OP_net_etech_ReportFooterSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ReportFooterSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ReportFooterSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ReportFooterSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DATA_REPORTSCHEMA &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_REPORTSCHEMA &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DATA_REPORTSCHEMA::_tag_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DATA_REPORTSCHEMA::_tag_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ReportSchemaSeq_H_
#define _TAO_CDR_OP_net_etech_ReportSchemaSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ReportSchemaSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ReportSchemaSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ReportSchemaSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_LongSeq_H_
#define _TAO_CDR_OP_net_etech_LongSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::LongSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::LongSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_LongSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::STRUCT_PARAMS &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::STRUCT_PARAMS &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::STRUCT_PARAMS::_Name_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::STRUCT_PARAMS::_Name_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::STRUCT_PARAMS::_Description_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::STRUCT_PARAMS::_Description_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::STRUCT_PARAMS::_user_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::STRUCT_PARAMS::_user_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::STRUCT_PARAMS::_user_ip_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::STRUCT_PARAMS::_user_ip_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::STRUCT_PARAMS::_ffRelation_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::STRUCT_PARAMS::_ffRelation_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_DRSeq_H_
#define _TAO_CDR_OP_net_etech_DRSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::DRSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::DRSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_DRSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_RelationSeq_H_
#define _TAO_CDR_OP_net_etech_RelationSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::RelationSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::RelationSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_RelationSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ElementSeq_H_
#define _TAO_CDR_OP_net_etech_ElementSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ElementSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ElementSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ElementSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_FEPSeq_H_
#define _TAO_CDR_OP_net_etech_FEPSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::FEPSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::FEPSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_FEPSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_AnalisysSeq_H_
#define _TAO_CDR_OP_net_etech_AnalisysSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::AnalisysSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::AnalisysSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_AnalisysSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ExceptionSeq_H_
#define _TAO_CDR_OP_net_etech_ExceptionSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ExceptionSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ExceptionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ExceptionSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_union/cdr_op_ch.cpp:41


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::TypeValore &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::TypeValore &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::PARAM &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::PARAM &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_Parameter_H_
#define _TAO_CDR_OP_net_etech_Parameter_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::Parameter &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::Parameter &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_Parameter_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_UserPoolSeq_H_
#define _TAO_CDR_OP_net_etech_UserPoolSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::UserPoolSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::UserPoolSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_UserPoolSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ParameterKeys_H_
#define _TAO_CDR_OP_net_etech_ParameterKeys_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ParameterKeys &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ParameterKeys &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ParameterKeys_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_IDListSeq_H_
#define _TAO_CDR_OP_net_etech_IDListSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::IDListSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::IDListSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_IDListSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::FEP_NODE &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FEP_NODE &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::FEP_NODE::_Key_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::FEP_NODE::_Key_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_BtreeSeq_H_
#define _TAO_CDR_OP_net_etech_BtreeSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::BtreeSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::BtreeSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_BtreeSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::PIVOTDATANODE &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::PIVOTDATANODE &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_PivotDataNodeSeq_H_
#define _TAO_CDR_OP_net_etech_PivotDataNodeSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::PivotDataNodeSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::PivotDataNodeSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_PivotDataNodeSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::PIVOTREQ &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::PIVOTREQ &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::PIVOTREQ::_enabledKeys_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::PIVOTREQ::_enabledKeys_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::PIVOTREQ::_enabledColumns_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::PIVOTREQ::_enabledColumns_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::INVOKE_STATUS &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::INVOKE_STATUS &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::INVOKE_STATUS::_percent_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::INVOKE_STATUS::_percent_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::INVOKE_STATUS::_desc_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::INVOKE_STATUS::_desc_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::INVOKE_STATUS::_url_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::INVOKE_STATUS::_url_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::DIR_ENTRY &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DIR_ENTRY &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DIR_ENTRY::_name_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DIR_ENTRY::_name_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::DIR_ENTRY::_date_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::DIR_ENTRY::_date_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_DirEntrySeq_H_
#define _TAO_CDR_OP_net_etech_DirEntrySeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::DirEntrySeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::DirEntrySeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_DirEntrySeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ADAMS_USER &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ADAMS_USER &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ADAMS_USER::_login_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ADAMS_USER::_login_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ADAMS_USER::_passwd_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ADAMS_USER::_passwd_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ADAMS_USER::_enabledConfigurations_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ADAMS_USER::_enabledConfigurations_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_AdamsUserSeq_H_
#define _TAO_CDR_OP_net_etech_AdamsUserSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::AdamsUserSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::AdamsUserSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_AdamsUserSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ALARM_RELATION &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_RELATION &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_RELATION::_description_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_RELATION::_description_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_RELATION::_relationElements_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_RELATION::_relationElements_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_RELATION::_relationElementsEnabled_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_RELATION::_relationElementsEnabled_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_RELATION::_alarmHandlers_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_RELATION::_alarmHandlers_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ALARM_GENERATOR &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_GENERATOR &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_GENERATOR::_shortDescription_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_GENERATOR::_shortDescription_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_GENERATOR::_longDescription_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_GENERATOR::_longDescription_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_GENERATOR::_idThresholdGenerator_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_GENERATOR::_idThresholdGenerator_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::THRESHOLD_GENERATOR &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::THRESHOLD_GENERATOR &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::THRESHOLD_GENERATOR::_description_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::THRESHOLD_GENERATOR::_description_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ALARM_PARAMS &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_PARAMS &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ALARM_PARAMS::_relationList_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ALARM_PARAMS::_relationList_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_AlarmRelationSeq_H_
#define _TAO_CDR_OP_net_etech_AlarmRelationSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::AlarmRelationSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::AlarmRelationSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_AlarmRelationSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_AlarmGeneratorSeq_H_
#define _TAO_CDR_OP_net_etech_AlarmGeneratorSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::AlarmGeneratorSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::AlarmGeneratorSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_AlarmGeneratorSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ThresholdGeneratorSeq_H_
#define _TAO_CDR_OP_net_etech_ThresholdGeneratorSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ThresholdGeneratorSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ThresholdGeneratorSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ThresholdGeneratorSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ADAMS_COMPLETE_CONFIG &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ADAMS_COMPLETE_CONFIG &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::SCRIPT_VALIDATE &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SCRIPT_VALIDATE &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::SCRIPT_VALIDATE::_variables_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SCRIPT_VALIDATE::_variables_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::SCRIPT_VALIDATE::_variablesText_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SCRIPT_VALIDATE::_variablesText_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::SCRIPT_VALIDATE::_scriptText_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SCRIPT_VALIDATE::_scriptText_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::SCRIPT_VALIDATE::_resultVariableName_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::SCRIPT_VALIDATE::_resultVariableName_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ERROR_TEXT &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ERROR_TEXT &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const net::etech::ERROR_TEXT::_text_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ERROR_TEXT::_text_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::EXPORT_COL &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::EXPORT_COL &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ExportColSeq_H_
#define _TAO_CDR_OP_net_etech_ExportColSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ExportColSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ExportColSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ExportColSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::EXPORT_ROW &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::EXPORT_ROW &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_net_etech_ExportDataSeq_H_
#define _TAO_CDR_OP_net_etech_ExportDataSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const net::etech::ExportDataSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    net::etech::ExportDataSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_net_etech_ExportDataSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ETSS::etss_server_trapper_server_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ETSS::etss_server_trapper_server_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ETSS::etss_server_server_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ETSS::etss_server_server_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ETSS::etss_agent_server_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ETSS::etss_agent_server_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ETSS::etss_server_threshold_server_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ETSS::etss_server_threshold_server_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const net::etech::ETSS::etss_agent_threshold_server_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, net::etech::ETSS::etss_agent_threshold_server_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "etssC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */


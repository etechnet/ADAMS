// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2.4
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:461

#ifndef _TAO_IDL_SSMS_W09CRE_H_
#define _TAO_IDL_SSMS_W09CRE_H_

#include /**/ "ace/pre.h"

#include "ssmC.h"
#include <tao/PortableServer/Basic_SArguments.h>
#include <tao/PortableServer/Special_Basic_SArguments.h>
#include <tao/PortableServer/Fixed_Size_SArgument_T.h>
#include <tao/PortableServer/Var_Size_SArgument_T.h>
#include <tao/PortableServer/Object_SArg_Traits.h>
#include <tao/PortableServer/Special_Basic_SArguments.h>
#include <tao/PortableServer/UB_String_SArguments.h>
#include <tao/PortableServer/Fixed_Array_SArgument_T.h>
#include <tao/PortableServer/Var_Array_SArgument_T.h>
#include <tao/PortableServer/get_arg.h>
#include <tao/Special_Basic_Arguments.h>
#include <tao/UB_String_Arguments.h>

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include <tao/PortableServer/PortableServer.h>
#include <tao/PortableServer/Servant_Base.h>

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::net::etech::DATA_CENTRALI>
    : public
        Fixed_Size_SArg_Traits_T<
            ::net::etech::DATA_CENTRALI,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::net::etech::CentralSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::net::etech::CentralSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::net::etech::logProcess>
    : public
        Fixed_Size_SArg_Traits_T<
            ::net::etech::logProcess,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::net::etech::LogProcessSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::net::etech::LogProcessSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::net::etech::ParamSeqSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::net::etech::ParamSeqSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::net::etech::ProcesDetail>
    : public
        Var_Size_SArg_Traits_T<
            ::net::etech::ProcesDetail,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::net::etech::ProcesDetailSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::net::etech::ProcesDetailSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::net::etech::tempoRis>
    : public
        Fixed_Size_SArg_Traits_T<
            ::net::etech::tempoRis,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::net::etech::CS_INFO_PROC>
    : public
        Fixed_Size_SArg_Traits_T<
            ::net::etech::CS_INFO_PROC,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::net::etech::CS_INFO_PROCSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::net::etech::CS_INFO_PROCSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::net::etech::CS_BLOCK_LOG>
    : public
        Fixed_Size_SArg_Traits_T<
            ::net::etech::CS_BLOCK_LOG,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::net::etech::CS_BLOCK_LOGSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::net::etech::CS_BLOCK_LOGSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::net::etech::GARBAGE_INFO>
    : public
        Fixed_Size_SArg_Traits_T<
            ::net::etech::GARBAGE_INFO,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::net::etech::GARBAGE_INFOSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::net::etech::GARBAGE_INFOSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::net::etech::ACQ_CAT>
    : public
        Fixed_Size_SArg_Traits_T<
            ::net::etech::ACQ_CAT,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::net::etech::ACQ_CATSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::net::etech::ACQ_CATSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::net::etech::ACQ_PEB_MGR>
    : public
        Var_Size_SArg_Traits_T<
            ::net::etech::ACQ_PEB_MGR,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::net::etech::GESTIONE_PSWD>
    : public
        Fixed_Size_SArg_Traits_T<
            ::net::etech::GESTIONE_PSWD,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::net::etech::GESTIONE_PSWDSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::net::etech::GESTIONE_PSWDSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_SSM_CONFIGMONITORSERVER__SARG_TRAITS_)
#define _NET_ETECH_SSM_CONFIGMONITORSERVER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::net::etech::SSM::ConfigMonitorServer>
    : public
        Object_SArg_Traits_T<
            ::net::etech::SSM::ConfigMonitorServer_ptr,
            ::net::etech::SSM::ConfigMonitorServer_var,
            ::net::etech::SSM::ConfigMonitorServer_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_SSM_PROCESSMONITORSERVER__SARG_TRAITS_)
#define _NET_ETECH_SSM_PROCESSMONITORSERVER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::net::etech::SSM::ProcessMonitorServer>
    : public
        Object_SArg_Traits_T<
            ::net::etech::SSM::ProcessMonitorServer_ptr,
            ::net::etech::SSM::ProcessMonitorServer_var,
            ::net::etech::SSM::ProcessMonitorServer_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_SSM_ACQPEBMGRSERVER__SARG_TRAITS_)
#define _NET_ETECH_SSM_ACQPEBMGRSERVER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::net::etech::SSM::ACQPebMGRServer>
    : public
        Object_SArg_Traits_T<
            ::net::etech::SSM::ACQPebMGRServer_ptr,
            ::net::etech::SSM::ACQPebMGRServer_var,
            ::net::etech::SSM::ACQPebMGRServer_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_SSM_GARBAGEMONITORSERVER__SARG_TRAITS_)
#define _NET_ETECH_SSM_GARBAGEMONITORSERVER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::net::etech::SSM::GarbageMonitorServer>
    : public
        Object_SArg_Traits_T<
            ::net::etech::SSM::GarbageMonitorServer_ptr,
            ::net::etech::SSM::GarbageMonitorServer_var,
            ::net::etech::SSM::GarbageMonitorServer_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_SSM_PSMONITORMASTERSERVER__SARG_TRAITS_)
#define _NET_ETECH_SSM_PSMONITORMASTERSERVER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::net::etech::SSM::PsMonitorMasterServer>
    : public
        Object_SArg_Traits_T<
            ::net::etech::SSM::PsMonitorMasterServer_ptr,
            ::net::etech::SSM::PsMonitorMasterServer_var,
            ::net::etech::SSM::PsMonitorMasterServer_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_SSM_DBCONFIGURATIONSERVER__SARG_TRAITS_)
#define _NET_ETECH_SSM_DBCONFIGURATIONSERVER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::net::etech::SSM::DBConfigurationServer>
    : public
        Object_SArg_Traits_T<
            ::net::etech::SSM::DBConfigurationServer_ptr,
            ::net::etech::SSM::DBConfigurationServer_var,
            ::net::etech::SSM::DBConfigurationServer_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_SSM_SSM_SCHEDULER_SERVER__SARG_TRAITS_)
#define _NET_ETECH_SSM_SSM_SCHEDULER_SERVER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::net::etech::SSM::ssm_scheduler_server>
    : public
        Object_SArg_Traits_T<
            ::net::etech::SSM::ssm_scheduler_server_ptr,
            ::net::etech::SSM::ssm_scheduler_server_var,
            ::net::etech::SSM::ssm_scheduler_server_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_SSM_SSM_LOGGER_SERVER__SARG_TRAITS_)
#define _NET_ETECH_SSM_SSM_LOGGER_SERVER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::net::etech::SSM::ssm_logger_server>
    : public
        Object_SArg_Traits_T<
            ::net::etech::SSM::ssm_logger_server_ptr,
            ::net::etech::SSM::ssm_logger_server_var,
            ::net::etech::SSM::ssm_logger_server_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_SSM_SSM_GARBAGE_SERVER__SARG_TRAITS_)
#define _NET_ETECH_SSM_SSM_GARBAGE_SERVER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::net::etech::SSM::ssm_garbage_server>
    : public
        Object_SArg_Traits_T<
            ::net::etech::SSM::ssm_garbage_server_ptr,
            ::net::etech::SSM::ssm_garbage_server_var,
            ::net::etech::SSM::ssm_garbage_server_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_NET_ETECH_SSM_SSM_DEPLOYER_SERVER__SARG_TRAITS_)
#define _NET_ETECH_SSM_SSM_DEPLOYER_SERVER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::net::etech::SSM::ssm_deployer_server>
    : public
        Object_SArg_Traits_T<
            ::net::etech::SSM::ssm_deployer_server_ptr,
            ::net::etech::SSM::ssm_deployer_server_var,
            ::net::etech::SSM::ssm_deployer_server_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:38

namespace POA_net
{
  

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_sh.cpp:38

  namespace etech
  {
    
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_sh.cpp:69

  } // module net::etech

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:69

} // module net

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:38

namespace POA_net
{
  

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_sh.cpp:38

  namespace etech
  {
    

    // TAO_IDL - Generated from
    // be/be_visitor_module/module_sh.cpp:38

    namespace SSM
    {
      

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_sh.cpp:76

      class ConfigMonitorServer;
      typedef ConfigMonitorServer *ConfigMonitorServer_ptr;

      class  ConfigMonitorServer
        : public virtual PortableServer::ServantBase
      {
      protected:
        ConfigMonitorServer (void);
      
      public:
        /// Useful for template programming.
        typedef ::net::etech::SSM::ConfigMonitorServer _stub_type;
        typedef ::net::etech::SSM::ConfigMonitorServer_ptr _stub_ptr_type;
        typedef ::net::etech::SSM::ConfigMonitorServer_var _stub_var_type;

        ConfigMonitorServer (const ConfigMonitorServer& rhs);
        virtual ~ConfigMonitorServer (void);

        virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

        virtual void _dispatch (
            TAO_ServerRequest & req,
            TAO::Portable_Server::Servant_Upcall *servant_upcall);
        
        ::net::etech::SSM::ConfigMonitorServer *_this (void);
        
        virtual const char* _interface_repository_id (void) const;

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean KillOrbixProcess (
          ::CORBA::Long flag,
          ::CORBA::Long num_pid) = 0;

        static void KillOrbixProcess_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean refreshConfigProcess (
          ::CORBA::Long flag,
          ::net::etech::CS_INFO_PROCSeq_out configProcesslList) = 0;

        static void refreshConfigProcess_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean refreshConfigBloc (
          ::CORBA::Long flag,
          ::net::etech::CS_BLOCK_LOGSeq_out configBloclList) = 0;

        static void refreshConfigBloc_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long writeModifyProcess (
          const char * nomeProcesso,
          ::CORBA::Long flag,
          const ::net::etech::CS_INFO_PROC & configProcess) = 0;

        static void writeModifyProcess_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long writeModifyLog (
          ::CORBA::Long flag,
          const ::net::etech::CS_BLOCK_LOGSeq & configBloclList) = 0;

        static void writeModifyLog_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long deleteProcess (
          ::CORBA::Long flag,
          const char * nomeProcesso) = 0;

        static void deleteProcess_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long deleteBlockLog (
          ::CORBA::Long flag,
          ::CORBA::Long idBlock) = 0;

        static void deleteBlockLog_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long SystemStart (
          ::CORBA::Long flag) = 0;

        static void SystemStart_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long SystemStop (
          ::CORBA::Long flag) = 0;

        static void SystemStop_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual void shutDown (
          void) = 0;

        static void shutDown_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);
      };

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_sh.cpp:76

      class ProcessMonitorServer;
      typedef ProcessMonitorServer *ProcessMonitorServer_ptr;

      class  ProcessMonitorServer
        : public virtual PortableServer::ServantBase
      {
      protected:
        ProcessMonitorServer (void);
      
      public:
        /// Useful for template programming.
        typedef ::net::etech::SSM::ProcessMonitorServer _stub_type;
        typedef ::net::etech::SSM::ProcessMonitorServer_ptr _stub_ptr_type;
        typedef ::net::etech::SSM::ProcessMonitorServer_var _stub_var_type;

        ProcessMonitorServer (const ProcessMonitorServer& rhs);
        virtual ~ProcessMonitorServer (void);

        virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

        virtual void _dispatch (
            TAO_ServerRequest & req,
            TAO::Portable_Server::Servant_Upcall *servant_upcall);
        
        ::net::etech::SSM::ProcessMonitorServer *_this (void);
        
        virtual const char* _interface_repository_id (void) const;

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean refreshMonitorProcess (
          ::net::etech::ProcesDetailSeq_out procesDetailList) = 0;

        static void refreshMonitorProcess_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean checkStatus (
          ::net::etech::ProcesDetailSeq_out procesDetailList) = 0;

        static void checkStatus_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean getDeteilProcess (
          ::CORBA::Long flagDETAIL,
          const char * nomeProcesso,
          ::net::etech::LogProcessSeq_out logProcesso) = 0;

        static void getDeteilProcess_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long getHistoryProcess (
          ::CORBA::Long flagWORK,
          ::CORBA::Long flagSINGLE_ALL_PROCESS,
          ::CORBA::Boolean flagALLDOCUMENT,
          const char * nomeProcesso,
          ::CORBA::Long data,
          ::net::etech::LogProcessSeq_out logProcesso) = 0;

        static void getHistoryProcess_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long resetField (
          ::CORBA::Long field,
          ::CORBA::Long flagTIPORESET,
          const char * nomeProcesso) = 0;

        static void resetField_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual void shutDown (
          void) = 0;

        static void shutDown_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);
      };

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_sh.cpp:76

      class ACQPebMGRServer;
      typedef ACQPebMGRServer *ACQPebMGRServer_ptr;

      class  ACQPebMGRServer
        : public virtual PortableServer::ServantBase
      {
      protected:
        ACQPebMGRServer (void);
      
      public:
        /// Useful for template programming.
        typedef ::net::etech::SSM::ACQPebMGRServer _stub_type;
        typedef ::net::etech::SSM::ACQPebMGRServer_ptr _stub_ptr_type;
        typedef ::net::etech::SSM::ACQPebMGRServer_var _stub_var_type;

        ACQPebMGRServer (const ACQPebMGRServer& rhs);
        virtual ~ACQPebMGRServer (void);

        virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

        virtual void _dispatch (
            TAO_ServerRequest & req,
            TAO::Portable_Server::Servant_Upcall *servant_upcall);
        
        ::net::etech::SSM::ACQPebMGRServer *_this (void);
        
        virtual const char* _interface_repository_id (void) const;

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long refreshACQPebMGR (
          ::CORBA::Long flag,
          ::net::etech::ACQ_PEB_MGR_out acqPebMgr) = 0;

        static void refreshACQPebMGR_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long writeACQPebMGR (
          ::CORBA::Boolean cleanAll,
          const ::net::etech::ACQ_PEB_MGR & acqPebMgr) = 0;

        static void writeACQPebMGR_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual void shutDown (
          void) = 0;

        static void shutDown_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);
      };

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_sh.cpp:76

      class GarbageMonitorServer;
      typedef GarbageMonitorServer *GarbageMonitorServer_ptr;

      class  GarbageMonitorServer
        : public virtual PortableServer::ServantBase
      {
      protected:
        GarbageMonitorServer (void);
      
      public:
        /// Useful for template programming.
        typedef ::net::etech::SSM::GarbageMonitorServer _stub_type;
        typedef ::net::etech::SSM::GarbageMonitorServer_ptr _stub_ptr_type;
        typedef ::net::etech::SSM::GarbageMonitorServer_var _stub_var_type;

        GarbageMonitorServer (const GarbageMonitorServer& rhs);
        virtual ~GarbageMonitorServer (void);

        virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

        virtual void _dispatch (
            TAO_ServerRequest & req,
            TAO::Portable_Server::Servant_Upcall *servant_upcall);
        
        ::net::etech::SSM::GarbageMonitorServer *_this (void);
        
        virtual const char* _interface_repository_id (void) const;

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long refreshGarbage (
          ::net::etech::GARBAGE_INFOSeq_out GarbageInfoOut) = 0;

        static void refreshGarbage_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long writeGarbage (
          ::CORBA::Boolean modify,
          const ::net::etech::GARBAGE_INFOSeq & GarbageInfoIn) = 0;

        static void writeGarbage_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual void shutDown (
          void) = 0;

        static void shutDown_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);
      };

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_sh.cpp:76

      class PsMonitorMasterServer;
      typedef PsMonitorMasterServer *PsMonitorMasterServer_ptr;

      class  PsMonitorMasterServer
        : public virtual PortableServer::ServantBase
      {
      protected:
        PsMonitorMasterServer (void);
      
      public:
        /// Useful for template programming.
        typedef ::net::etech::SSM::PsMonitorMasterServer _stub_type;
        typedef ::net::etech::SSM::PsMonitorMasterServer_ptr _stub_ptr_type;
        typedef ::net::etech::SSM::PsMonitorMasterServer_var _stub_var_type;

        PsMonitorMasterServer (const PsMonitorMasterServer& rhs);
        virtual ~PsMonitorMasterServer (void);

        virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

        virtual void _dispatch (
            TAO_ServerRequest & req,
            TAO::Portable_Server::Servant_Upcall *servant_upcall);
        
        ::net::etech::SSM::PsMonitorMasterServer *_this (void);
        
        virtual const char* _interface_repository_id (void) const;

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean LaunchPsMonitorMasterServer (
          ::net::etech::CentralSeq_out CEN) = 0;

        static void LaunchPsMonitorMasterServer_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean KillOrbixProcess (
          const char * nameSwitch,
          ::CORBA::Long flag,
          ::CORBA::Long num_pid) = 0;

        static void KillOrbixProcess_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean refreshMonitorProcess (
          const char * nameSwitch,
          ::CORBA::Long flag,
          ::net::etech::ProcesDetailSeq_out procesDetailLis) = 0;

        static void refreshMonitorProcess_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean getDeteilProcess (
          ::CORBA::Long flagDETAIL,
          const char * nameSwitch,
          const char * nomeProcesso,
          ::net::etech::LogProcessSeq_out logProcesso) = 0;

        static void getDeteilProcess_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean getSystemTime (
          const char * nameSwitch,
          ::net::etech::LogProcessSeq_out systemTime) = 0;

        static void getSystemTime_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long getHistoryProcess (
          ::CORBA::Long flagWORK,
          ::CORBA::Long flagSINGLE_ALL_PROCESS,
          ::CORBA::Boolean flagALLDOCUMENT,
          const char * nameSwitch,
          const char * nomeProcesso,
          ::CORBA::Long data,
          ::net::etech::LogProcessSeq_out logProcesso) = 0;

        static void getHistoryProcess_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long resetField (
          const char * nameSwitch,
          ::CORBA::Long field,
          ::CORBA::Long flagTIPORESET,
          const char * nomeProcesso) = 0;

        static void resetField_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean refreshConfigProcess (
          const char * nameSwitch,
          ::CORBA::Long flag,
          ::net::etech::CS_INFO_PROCSeq_out configProcesslList) = 0;

        static void refreshConfigProcess_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean refreshConfigBloc (
          const char * nameSwitch,
          ::CORBA::Long flag,
          ::net::etech::CS_BLOCK_LOGSeq_out configBloclList) = 0;

        static void refreshConfigBloc_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long writeModifyProcess (
          const char * nomeProcesso,
          const char * nameSwitch,
          ::CORBA::Long flag,
          const ::net::etech::CS_INFO_PROC & configProcess) = 0;

        static void writeModifyProcess_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long writeModifyLog (
          const char * nameSwitch,
          ::CORBA::Long flag,
          const ::net::etech::CS_BLOCK_LOGSeq & configBloclList,
          ::net::etech::CentralSeq_out switchSeq) = 0;

        static void writeModifyLog_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long createLogFile (
          const char * nameSwitch,
          ::CORBA::Long flag) = 0;

        static void createLogFile_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long deleteProcess (
          const char * nameSwitch,
          ::CORBA::Long flag,
          const char * nomeProcesso) = 0;

        static void deleteProcess_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long deleteBlockLog (
          const char * nameSwitch,
          ::CORBA::Long flag,
          ::CORBA::Long idBlock,
          ::CORBA::Long idFep) = 0;

        static void deleteBlockLog_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long SystemStart (
          const char * nameSwitch,
          ::CORBA::Long flag) = 0;

        static void SystemStart_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long SystemStop (
          const char * nameSwitch,
          ::CORBA::Long flag) = 0;

        static void SystemStop_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long refreshACQPebMGR (
          const char * nameSwitch,
          ::CORBA::Long flag,
          ::net::etech::ACQ_PEB_MGR_out acqPebMgr) = 0;

        static void refreshACQPebMGR_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long writeACQPebMGR (
          const char * nameSwitch,
          ::CORBA::Boolean cleanAll,
          const ::net::etech::ACQ_PEB_MGR & acqPebMgr) = 0;

        static void writeACQPebMGR_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long refreshGarbage (
          const char * nameSwitch,
          ::net::etech::GARBAGE_INFOSeq_out GarbageInfoOut) = 0;

        static void refreshGarbage_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long writeGarbage (
          const char * nameSwitch,
          ::CORBA::Boolean modify,
          const ::net::etech::GARBAGE_INFOSeq & GarbageInfoIn) = 0;

        static void writeGarbage_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long putFilePSWD (
          const char * nameSwitch,
          const char * nameFile,
          ::CORBA::Long flag,
          const ::net::etech::GESTIONE_PSWDSeq & pswdSequence) = 0;

        static void putFilePSWD_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long getFilePSWD (
          const char * nameSwitch,
          const char * nameFile,
          ::CORBA::Long flag,
          ::net::etech::GESTIONE_PSWDSeq_out pswdSequence) = 0;

        static void getFilePSWD_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual void shutDown (
          void) = 0;

        static void shutDown_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);
      };

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_sh.cpp:76

      class DBConfigurationServer;
      typedef DBConfigurationServer *DBConfigurationServer_ptr;

      class  DBConfigurationServer
        : public virtual PortableServer::ServantBase
      {
      protected:
        DBConfigurationServer (void);
      
      public:
        /// Useful for template programming.
        typedef ::net::etech::SSM::DBConfigurationServer _stub_type;
        typedef ::net::etech::SSM::DBConfigurationServer_ptr _stub_ptr_type;
        typedef ::net::etech::SSM::DBConfigurationServer_var _stub_var_type;

        DBConfigurationServer (const DBConfigurationServer& rhs);
        virtual ~DBConfigurationServer (void);

        virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

        virtual void _dispatch (
            TAO_ServerRequest & req,
            TAO::Portable_Server::Servant_Upcall *servant_upcall);
        
        ::net::etech::SSM::DBConfigurationServer *_this (void);
        
        virtual const char* _interface_repository_id (void) const;

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long renameIndexTimeCFG (
          const char * nameFile) = 0;

        static void renameIndexTimeCFG_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long putFilePSWD (
          const char * nameFile,
          ::CORBA::Long flag,
          const ::net::etech::GESTIONE_PSWDSeq & pswdSequence) = 0;

        static void putFilePSWD_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Long getFilePSWD (
          const char * nameFile,
          ::CORBA::Long flag,
          ::net::etech::GESTIONE_PSWDSeq_out pswdSequence) = 0;

        static void getFilePSWD_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual void shutDown (
          void) = 0;

        static void shutDown_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);
      };

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_sh.cpp:76

      class ssm_scheduler_server;
      typedef ssm_scheduler_server *ssm_scheduler_server_ptr;

      class  ssm_scheduler_server
        : public virtual PortableServer::ServantBase
      {
      protected:
        ssm_scheduler_server (void);
      
      public:
        /// Useful for template programming.
        typedef ::net::etech::SSM::ssm_scheduler_server _stub_type;
        typedef ::net::etech::SSM::ssm_scheduler_server_ptr _stub_ptr_type;
        typedef ::net::etech::SSM::ssm_scheduler_server_var _stub_var_type;

        ssm_scheduler_server (const ssm_scheduler_server& rhs);
        virtual ~ssm_scheduler_server (void);

        virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

        virtual void _dispatch (
            TAO_ServerRequest & req,
            TAO::Portable_Server::Servant_Upcall *servant_upcall);
        
        ::net::etech::SSM::ssm_scheduler_server *_this (void);
        
        virtual const char* _interface_repository_id (void) const;

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual void adamsConfigurationChanged (
          void) = 0;

        static void adamsConfigurationChanged_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual void processConfigurationChanged (
          void) = 0;

        static void processConfigurationChanged_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual void iniFileChanged (
          void) = 0;

        static void iniFileChanged_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean dummy (
          void) = 0;

        static void dummy_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);
      };

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_sh.cpp:76

      class ssm_logger_server;
      typedef ssm_logger_server *ssm_logger_server_ptr;

      class  ssm_logger_server
        : public virtual PortableServer::ServantBase
      {
      protected:
        ssm_logger_server (void);
      
      public:
        /// Useful for template programming.
        typedef ::net::etech::SSM::ssm_logger_server _stub_type;
        typedef ::net::etech::SSM::ssm_logger_server_ptr _stub_ptr_type;
        typedef ::net::etech::SSM::ssm_logger_server_var _stub_var_type;

        ssm_logger_server (const ssm_logger_server& rhs);
        virtual ~ssm_logger_server (void);

        virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

        virtual void _dispatch (
            TAO_ServerRequest & req,
            TAO::Portable_Server::Servant_Upcall *servant_upcall);
        
        ::net::etech::SSM::ssm_logger_server *_this (void);
        
        virtual const char* _interface_repository_id (void) const;

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean get_logs (
          const char * process_name) = 0;

        static void get_logs_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);
      };

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_sh.cpp:76

      class ssm_garbage_server;
      typedef ssm_garbage_server *ssm_garbage_server_ptr;

      class  ssm_garbage_server
        : public virtual PortableServer::ServantBase
      {
      protected:
        ssm_garbage_server (void);
      
      public:
        /// Useful for template programming.
        typedef ::net::etech::SSM::ssm_garbage_server _stub_type;
        typedef ::net::etech::SSM::ssm_garbage_server_ptr _stub_ptr_type;
        typedef ::net::etech::SSM::ssm_garbage_server_var _stub_var_type;

        ssm_garbage_server (const ssm_garbage_server& rhs);
        virtual ~ssm_garbage_server (void);

        virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

        virtual void _dispatch (
            TAO_ServerRequest & req,
            TAO::Portable_Server::Servant_Upcall *servant_upcall);
        
        ::net::etech::SSM::ssm_garbage_server *_this (void);
        
        virtual const char* _interface_repository_id (void) const;

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean dummy (
          void) = 0;

        static void dummy_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);
      };

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_sh.cpp:76

      class ssm_deployer_server;
      typedef ssm_deployer_server *ssm_deployer_server_ptr;

      class  ssm_deployer_server
        : public virtual PortableServer::ServantBase
      {
      protected:
        ssm_deployer_server (void);
      
      public:
        /// Useful for template programming.
        typedef ::net::etech::SSM::ssm_deployer_server _stub_type;
        typedef ::net::etech::SSM::ssm_deployer_server_ptr _stub_ptr_type;
        typedef ::net::etech::SSM::ssm_deployer_server_var _stub_var_type;

        ssm_deployer_server (const ssm_deployer_server& rhs);
        virtual ~ssm_deployer_server (void);

        virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

        virtual void _dispatch (
            TAO_ServerRequest & req,
            TAO::Portable_Server::Servant_Upcall *servant_upcall);
        
        ::net::etech::SSM::ssm_deployer_server *_this (void);
        
        virtual const char* _interface_repository_id (void) const;

        // TAO_IDL - Generated from
        // be/be_visitor_operation/operation_sh.cpp:39

        virtual ::CORBA::Boolean dummy (
          void) = 0;

        static void dummy_skel (
            TAO_ServerRequest &server_request,
            TAO::Portable_Server::Servant_Upcall *servant_upcall,
            TAO_ServantBase *servant);
      };
    
    // TAO_IDL - Generated from
    // be/be_visitor_module/module_sh.cpp:69

    } // module net::etech::SSM
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_sh.cpp:69

  } // module net::etech

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:69

} // module net

#include /**/ "ace/post.h"

#endif /* ifndef */


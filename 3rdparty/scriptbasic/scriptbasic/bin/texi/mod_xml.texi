


























\input texinfo @c -*-texinfo-*-
@c %**start of header
@setfilename mod_xml
@settitle Documentation of the module xml
@setchapternewpage odd
@c %**end of header
@ifinfo
@end ifinfo

@titlepage
@title Documentation of the module xml
@author Peter Verhas

@page
@vskip 0pt plus 1filll

@end titlepage
@summarycontents
@contents

@menu
@end menu

@chapter Introduction



@chapter  Parse an XML file and read into memory

You should use this function to read the content of an XML file into memory.
The argument of the function is the name of the file to be read. The function
will return a handle to the structure created during the parsing of the file
content.

@example
 DOC = xml::ParseFile("my_file.xml")
@end example


@chapter  Create a new empty document


@example
 DOC = xml::NewDoc("1.0")
@end example


@chapter  Release a document from memory

When an XML document is not needed by the BASIC program any more the
program should free the memory used up by the document calling the
function @code{FreeDoc}.

@example
xml::FreeDoc DOC
@end example

@chapter  Get the children on a document node

This function should be used to get the handle to the 


@chapter  Set the children on a document node

This function should be used to get the handle to the 


@chapter  Get the next node of a document node

This function should be used to get the handle to the 


@chapter  Set the next on a document node

This function should be used to get the handle to the 


@chapter  Get the prev node of a document node

This function should be used to get the handle to the 


@chapter  Set the next on a document node

This function should be used to get the handle to the 


@chapter  Get the Parent node of a document node

This function should be used to get the handle to the 


@chapter  Set the next on a document node

This function should be used to get the handle to the 


@chapter  set the property of a node

@chapter  get the property of a node


@chapter  Create a new name space defintion

Use this function to create a new name space definition.

@example
  ns = xml::NewNs(node, href,prefix)
@end example

@chapter  Release a name space definition

Use this function to release a name space definition created by the function
@code{xml::NewNs}, which is not needed anymore.

@example
  xml::FreeNs ns
@end example


@chapter  Create a new child under a node

Use this function to create a new child under an already existing node.

@example
  newNode = xml::NewChild(parent,nameSpace,name,content)
@end example

Arguments:
@itemize
@item @code{parent}     is the parent node. The function will appens a new child node after
                    the last child node of the @code{parent} node.
@item @code{nameSpace}  is optional handler to the name space. May be @code{undef}.
@item @code{name}       is the name of the new node, should be a string.
@item @code{content}    optional string content.
@end itemize


@chapter  Create a new text child under a node

Use this function to create a new text child under an already existing node.

@example
  newNode = xml::NewTextChild(parent,nameSpace,name,content)
@end example

Arguments:
@itemize
@item @code{parent}     is the parent node. The function will appens a new child node after
                    the last child node of the @code{parent} node.
@item @code{nameSpace}  is optional handler to the name space. May be @code{undef}.
@item @code{name}       is the name of the new node, should be a string.
@item @code{content}    optional string content.
@end itemize


@chapter  Create a new document node

Use this function to create a new document node.

@example
  newNode = xml::NewDocNode(parent,nameSpace,name,content)
@end example

Arguments:
@itemize
@item @code{parent}     is the parent node. The function will appens a new child node after
                    the last child node of the @code{parent} node.
@item @code{nameSpace}  is optional handler to the name space. May be @code{undef}.
@item @code{name}       is the name of the new node, should be a string.
@item @code{content}    optional string content.
@end itemize


@chapter  Convert a document to XML text
 


<HEAD>
<TITLE>ScriptBasic Developers Manual: Object Oriented Model of ScriptBasic</TITLE>

<META NAME="description" CONTENT="ScriptBasic Developers Manual: Object Oriented Model of ScriptBasic">
<META NAME="keywords" CONTENT="ScriptBasic Developers Manual: Object Oriented Model of ScriptBasic">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META NAME="Generator" CONTENT="t2h.pl">

</HEAD>

<BODY>
<FONT FACE="Verdana" Size="2">

<H1>Object Oriented Model of ScriptBasic</H1>
<A HREF="devguide_3.htm">[&lt;&lt;&lt;]</A> <A HREF="devguide_3.2.htm">[&gt;&gt;&gt;]</A>
<P>

Although ScriptBasic is implemented in pure C the coding and developing concept is rather object oriented. Such is the concept of the C API calling interface. This means that you have to deal with an abstract ScriptBasic program object when you want to execute a program. The structure of this program object is totally private to ScriptBasic and as a programmer embedding the interpreter you need not worry about it. The only action you have to do is to create such an object before doing any other function call calling <a href="devguide_3.3.1.htm">scriba_new()</A> and to destroy it after the BASIC program was executed and is not going to be used any more calling the function <a href="devguide_3.3.2.htm">scriba_destroy()</A>.
<P>
The object is stored in memory and this piece of memory is allocated by ScriptBasic. The function <a href="devguide_3.3.1.htm">scriba_new()</A> allocates this memory and returns a pointer to this "object". Later this pointer has to be used to refer to this object.
<P>
Because C is not object oriented the functions called should explicitly get this pointer as first argument. When programming C++ the class pointer is used to access the class methods, and that also implicitly passes the object pointer to the method. The pointer passing code is generated by the C++ compiler. When calling ScriptBasic API the programmer has to store the "object" pointer and pass it as first argument to any function.
<P>
The type of the object pointer is <font size="3"><tt>pSbProgram</tt></font>.<HR>
<A HREF="devguide_3.htm">[&lt;&lt;&lt;]</A> <A HREF="devguide_3.2.htm">[&gt;&gt;&gt;]</A>
</FONT>
</BODY>

</HTML>

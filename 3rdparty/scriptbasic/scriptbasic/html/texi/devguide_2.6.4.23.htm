<HEAD>
<TITLE>ScriptBasic Developers Manual: execute_DereferenceS()</TITLE>

<META NAME="description" CONTENT="ScriptBasic Developers Manual: execute_DereferenceS()">
<META NAME="keywords" CONTENT="ScriptBasic Developers Manual: execute_DereferenceS()">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META NAME="Generator" CONTENT="t2h.pl">

</HEAD>

<BODY>
<FONT FACE="Verdana" Size="2">

<H1>execute_DereferenceS()</H1>
<A HREF="devguide_2.6.4.22.htm">[&lt;&lt;&lt;]</A> <A HREF="devguide_2.6.4.24.htm">[&gt;&gt;&gt;]</A>
<P>

This function does the same as <a href="devguide_2.6.4.22.htm">execute_Dereference()</A> except that it has
different arguments fitted to support external modules and <font size="3"><tt>besXXX</tt></font>
macros.
<P>
<FONT SIZE="3" COLOR="BLUE"><PRE>
int execute_DereferenceS(unsigned long refcount,
                         pFixSizeMemoryObject *p
  )@{
</PRE></FONT>
See also <a href="devguide_2.6.4.22.htm">execute_Dereference()</A>.
<P>
If the argument is referencing an <font size="3"><tt>undef</tt></font> value then this function
converts the argument to be a real <font size="3"><tt>NULL</tt></font> to allow external modules
to compare <font size="3"><tt>besDEREFERENCE</tt></font>d variables against <font size="3"><tt>NULL</tt></font>.
<P>
The subroutine is also error prone handling <font size="3"><tt>NULL</tt></font> pointer as argument,
though it should never be happen if the external module programmer
uses the macro <font size="3"><tt>besDEREFERENCE</tt></font>.<HR>
<A HREF="devguide_2.6.4.22.htm">[&lt;&lt;&lt;]</A> <A HREF="devguide_2.6.4.24.htm">[&gt;&gt;&gt;]</A>
</FONT>
</BODY>

</HTML>

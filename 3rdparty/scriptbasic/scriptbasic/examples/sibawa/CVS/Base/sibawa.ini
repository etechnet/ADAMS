' FILE: sibawa.ini
'
' This file contains important initialization constants for the sibawa application
'
' use dbg
import cgi.bas
import mysql.bas
import t.bas
import mt.bas

import "database.ini"

'
' These variables hold configuration constants
'
' RootDirectory = "/home/verhas/sb/ScriptBasic/source/examples/sibawa/"
RootDirectory = "T:/MyProjects/ScriptBasic/source/examples/sibawa/"
TemplateDirectory = RootDirectory & "Templates/"
BasicAuthenticationRealm = "SIBAWA"
SystemManagerName = "System Manager Real Name Should Come here"
SystemManagerEmail = "root@localhost"

sub DisplayError(ErrorMessage$)
  cgi::Header "200 OK","text/html"
  cgi::FinishHeader
  print """<HTML>
<HEAD>
<TITLE>ERROR: """,ErrorMessage$,"""</TITLE>
</HEAD>
<BODY>
<FONT SIZE="2" FACE="Verdana">
<H1>ERROR PAGE</H1>
An error has happened during the execution of the program.
The reason for the error is internal to the application program.
<P>
The error message is:
<FONT COLOR="RED"><B><P>
""",ErrorMessage$,"""
<P></B></FONT>
Please contact the system manager.
<P>
The system manager is: """,SystemManagerName,"""<BR>
The system manager eMail is: <a href="mailto:""",SystemManagerEmail,"""">""",SystemManagerEmail,"""</A>
</FONT>
</BODY>
</HTML>
"""
stop
end sub

' This function prints a template to the client. If the template
' can not be found it prints an error.
sub PrintTemplate(t)
  on error goto TemplateNotFound
  cgi::EmitHtmlTemplate( TemplateDirectory & t)
  exit sub
TemplateNotFound:
  DisplayError "Template " & TemplateDirectory & t & " is not found"
end sub

function HasPrivilege(Privilege)
  local i,prvarr

  splita sibawa::priv by "," to prvarr
  for i=lbound(prvarr) to ubound(prvarr)
    if prvarr[i] = Privilege or prvarr[i] = "god" then
      HasPrivilege = TRUE
      exit function
    end if
  next i
  HasPrivilege = FALSE
end function

' This function checks that the actual user logged in has the privilege
' requested. If the user has the privilege the sub simply returns.
' If the user does not have the privilege the sub prints the template
' that signals that the requested script should not run by the user and
' stops. The scripts needing privilege can simply call this function
' like:
' 
' CheckPrivilege "admin"
' 
' and assume in the code after the call that the user has the privilege.
sub CheckPrivilege(Privilege)

  if HasPrivilege(Privilege) then exit sub
  cgi::Header 200,"text/html"
  cgi::FinishHeader
  PrintTemplate "nopriv.html"
  stop

end sub


'
' HERE STARTS THE INIT CODE, WHICH IS EXECUTED BEFORE EACH SCRIPT!
'

'
' Check that there is CGI Basic Authentication user/password defined in the HTTP header
' If there is no password then there is no reason to connect to the database at all
'
if Len(environ("HTTP_PASSWORD")) = 0 OR Len(cgi::RemoteUser()) = 0 then
  cgi::RequestBasicAuthentication BasicAuthenticationRealm
  stop
endif

'
' Check that the username/password is correct
'
sibawa::Name = cgi::RemoteUser()
if not mt::CheckSessionId(sibawa::Name) then
  DB::Connect
  query = "select PASSWORD,REALNAME,PRIV,ID from USERS WHERE name='" & cgi::RemoteUser() & "'"
  DB::Query query
  result = DB::FetchArray(q)
  if result then
    if q[0] <> environ("HTTP_PASSWORD") then
      cgi::RequestBasicAuthentication BasicAuthenticationRealm
      stop
    endif
    mt::SetSessionId cgi::RemoteUser()
    sibawa::password = q[0]
    sibawa::realname = q[1]
    sibawa::priv     = q[2]
    sibawa::userid   = q[3]
    mt::SetSessionVariable "password",sibawa::password
    mt::SetSessionVariable "realname",sibawa::realname
    mt::SetSessionVariable "priv"    ,sibawa::priv
    mt::SetSessionVariable "userid"  ,sibawa::userid
    '
    ' Store the list of groups that the user is member of
    '
    query = "SELECT group_id from GROUPMEMBERS WHERE user_id=" & sibawa::userid
    DB::Query query
    while DB::FetchArray(q)
      mt::SetSessionVariable "group" & q[0] , true
    wend
  else
    cgi::RequestBasicAuthentication BasicAuthenticationRealm
    DB::Close
    stop
  endif
else
  mt::SetSessionId cgi::RemoteUser()
  sibawa::password = mt::GetSessionVariable("password")
  sibawa::realname = mt::GetSessionVariable("realname")
  sibawa::priv     = mt::GetSessionVariable("priv")
  sibawa::userid   = mt::GetSessionVariable("userid")
  if len(sibawa::password) = 0 or sibawa::password <> environ("HTTP_PASSWORD") then
     cgi::RequestBasicAuthentication BasicAuthenticationRealm
     DB::Close
     stop
  endif
endif


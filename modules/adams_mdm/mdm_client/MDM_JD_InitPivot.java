/*
 * MDM_JD_InitPivot.java
 *
 * Created on 15 giugno 2006, 10.47
 */

/**
 *
 * @author  luca
 */
import java.awt.Cursor;
import java.util.Vector;
import java.util.StringTokenizer;
import net.etech.*;
import net.etech.ASP.*;
import net.etech.MDM.*;
import net.etech.loadconfig.*;

public class MDM_JD_InitPivot extends javax.swing.JDialog implements Runnable {

    /** Creates new form MDM_JD_InitPivot */
    public MDM_JD_InitPivot(java.awt.Frame parent,String defaultURL,String Rel_Name,javax.swing.JApplet JA,String nameReportK) {
        super(parent, false);
        this.Relation_Name = new String(Rel_Name);
        this.DEFAULT_URL = defaultURL;
        this.nameReportKey = nameReportK;
        
        this.JAppl = JA;
        
        initComponents();
        jTextDecimal.setText(""+valuedecimal);
        this.ReportAbsoluteValue = false;
        jCkbox_percValue.setSelected(true);
              
        initData();
        
        this.jL_Relation.setText(Relation_Name);
        
        //FONT
        jL_Relation.setFont(staticLib.fontA10a);
        jL_1.setFont(staticLib.fontA10a);
        jCBox_sort.setFont(staticLib.fontA10a);       
        jR_focus.setFont(staticLib.fontA10a);
        jT_focus.setFont(staticLib.fontA10a);
        jR_Options.setFont(staticLib.fontA10a);
        jTextDecimal.setFont(staticLib.fontA10a);
        jB_addDecimal.setFont(staticLib.fontA10a);
        jB_remDecimal.setFont(staticLib.fontA10a);
        jL_desc_decPos.setFont(staticLib.fontA10a);
        jL_globalOrder.setFont(staticLib.fontA10a);
        jCbx_listCriteria.setFont(staticLib.fontA10a);
        jLabel3.setFont(staticLib.fontA10a);
        jLabel1.setFont(staticLib.fontA10a);
        jCkbox_absValue.setFont(staticLib.fontA10a);
        jCkbox_percValue.setFont(staticLib.fontA10a);
        jCB_Increasing.setFont(staticLib.fontA10a);
        jCB_Decreasing.setFont(staticLib.fontA10a);
        jTF_customRows.setFont(staticLib.fontA10a);
        jCBox_CustomRows.setFont(staticLib.fontA10a);
        jCBox_AutoRows.setFont(staticLib.fontA10a);
        
        //Cursor
        jB_ok.setCursor(Cur_hand);
        jB_close.setCursor(Cur_hand);
        jBselAll.setCursor(Cur_hand);
        jB_deSelect.setCursor(Cur_hand);
        jB_invSel.setCursor(Cur_hand);
        jCBox_sort.setCursor(Cur_hand);
        jR_focus.setCursor(Cur_hand);
        jR_Options.setCursor(Cur_hand);
        jB_addDecimal.setCursor(Cur_hand);
        jB_remDecimal.setCursor(Cur_hand);
        jCbx_listCriteria.setCursor(Cur_hand);
        jCkbox_absValue.setCursor(Cur_hand);
        jCkbox_percValue.setCursor(Cur_hand);
        jCB_Increasing.setCursor(Cur_hand);
        jCB_Decreasing.setCursor(Cur_hand);
        jCBox_CustomRows.setCursor(Cur_hand);
        jCBox_AutoRows.setCursor(Cur_hand);
                        
        jTF_customRows.setDocument(new JTextFieldFilter(JTextFieldFilter.NUMERIC,6));
        
        // REL NAME KEY 
        StringTokenizer Relation_Name_STK = new StringTokenizer(Relation_Name,"::");
        nameKeyREL = new String[Relation_Name_STK.countTokens()];

        for(int x=0; x<nameKeyREL.length; x++)
        {
            nameKeyREL[x] = new String(Relation_Name_STK.nextToken().trim());
            jCBox_sort.addItem(nameKeyREL[x]);
        }
        
        for(int i=0; i<ARR_KEY_ENABLED.length; i++)
            ARR_KEY_ENABLED[i] = true;
        
        setCenteredFrame(580,540);
        //show();
	this.setVisible(true);
    }
    

    public void setConfiguration(getConfigFiltro Configuration)
    {
        this.configuration = Configuration;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jL_Relation = new javax.swing.JLabel();
        jP_Central = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jP_counters = new javax.swing.JPanel();
        jP_2 = new javax.swing.JPanel();
        jL_1 = new javax.swing.JLabel();
        jPanel_3 = new javax.swing.JPanel();
        jBselAll = new javax.swing.JButton();
        jB_deSelect = new javax.swing.JButton();
        jB_invSel = new javax.swing.JButton();
        jP_South = new javax.swing.JPanel();
        jPanel_2 = new javax.swing.JPanel();
        jCBox_sort = new javax.swing.JComboBox();
        jR_focus = new javax.swing.JRadioButton();
        jT_focus = new javax.swing.JTextField();
        jR_Options = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jCbx_listCriteria = new javax.swing.JComboBox();
        jL_globalOrder = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jCkbox_absValue = new javax.swing.JCheckBox();
        jCkbox_percValue = new javax.swing.JCheckBox();
        jL_desc_decPos = new javax.swing.JLabel();
        jPanel_1 = new javax.swing.JPanel();
        jTextDecimal = new javax.swing.JTextField();
        jPanel_4 = new javax.swing.JPanel();
        jB_addDecimal = new javax.swing.JButton();
        jB_remDecimal = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jCBox_AutoRows = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jCBox_CustomRows = new javax.swing.JCheckBox();
        jTF_customRows = new javax.swing.JTextField();
        jP_buttons = new javax.swing.JPanel();
        jB_ok = new javax.swing.JButton();
        jB_close = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jCB_Increasing = new javax.swing.JCheckBox();
        jCB_Decreasing = new javax.swing.JCheckBox();
        
        
        setTitle("Init Pivot Parameters");
        setBackground(new java.awt.Color(230, 230, 230));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        
        jL_Relation.setBackground(new java.awt.Color(230, 230, 230));
        jL_Relation.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jL_Relation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/foglia.png")));
        jL_Relation.setMinimumSize(new java.awt.Dimension(22, 30));
        jL_Relation.setPreferredSize(new java.awt.Dimension(22, 30));
        jL_Relation.setOpaque(true);
        getContentPane().add(jL_Relation, java.awt.BorderLayout.NORTH);
        
        jP_Central.setLayout(new java.awt.BorderLayout());
        
        jP_Central.setBackground(new java.awt.Color(230, 230, 230));
        jP_counters.setLayout(new java.awt.GridLayout(0, 2));
        
        jScrollPane1.setViewportView(jP_counters);
        
        jP_Central.add(jScrollPane1, java.awt.BorderLayout.CENTER);
        
        jP_2.setLayout(new java.awt.BorderLayout());
        
        jP_2.setBackground(new java.awt.Color(230, 230, 230));
        jP_2.setOpaque(false);
        jL_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jL_1.setText("Select metrics for the PIVOT.");
        jP_2.add(jL_1, java.awt.BorderLayout.CENTER);
        
        jPanel_3.setBackground(new java.awt.Color(230, 230, 230));
        jPanel_3.setOpaque(false);
        jBselAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/selectall_16.png")));
        jBselAll.setToolTipText("select all counters");
        jBselAll.setBorderPainted(false);
        jBselAll.setContentAreaFilled(false);
        jBselAll.setFocusPainted(false);
        jBselAll.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jBselAll.setMinimumSize(new java.awt.Dimension(21, 21));
        jBselAll.setPreferredSize(new java.awt.Dimension(21, 21));
        jBselAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBselAllActionPerformed(evt);
            }
        });
        
        jPanel_3.add(jBselAll);
        
        jB_deSelect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/unselectall_16.png")));
        jB_deSelect.setToolTipText("Unselect all counters");
        jB_deSelect.setBorderPainted(false);
        jB_deSelect.setContentAreaFilled(false);
        jB_deSelect.setFocusPainted(false);
        jB_deSelect.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jB_deSelect.setMinimumSize(new java.awt.Dimension(21, 21));
        jB_deSelect.setPreferredSize(new java.awt.Dimension(21, 21));
        jB_deSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_deSelectActionPerformed(evt);
            }
        });
        
        jPanel_3.add(jB_deSelect);
        
        jB_invSel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/invert_16.png")));
        jB_invSel.setToolTipText("Invert select counters");
        jB_invSel.setBorderPainted(false);
        jB_invSel.setContentAreaFilled(false);
        jB_invSel.setFocusPainted(false);
        jB_invSel.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jB_invSel.setMinimumSize(new java.awt.Dimension(21, 21));
        jB_invSel.setPreferredSize(new java.awt.Dimension(21, 21));
        jB_invSel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_invSelActionPerformed(evt);
            }
        });
        
        jPanel_3.add(jB_invSel);
        
        jP_2.add(jPanel_3, java.awt.BorderLayout.EAST);
        
        jP_Central.add(jP_2, java.awt.BorderLayout.NORTH);
        
        getContentPane().add(jP_Central, java.awt.BorderLayout.CENTER);
        
        jP_South.setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        
        jP_South.setBackground(new java.awt.Color(230, 230, 230));
        jP_South.setMinimumSize(new java.awt.Dimension(217, 320));
        jP_South.setPreferredSize(new java.awt.Dimension(217, 320));
        jPanel_2.setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints2;
        
        jPanel_2.setBackground(new java.awt.Color(230, 230, 230));
        jPanel_2.setBorder(new javax.swing.border.TitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), " Report Options", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Dialog", 1, 11)));
        jPanel_2.setMinimumSize(new java.awt.Dimension(217, 90));
        jPanel_2.setPreferredSize(new java.awt.Dimension(217, 90));
        jCBox_sort.setBackground(new java.awt.Color(230, 230, 230));
        jCBox_sort.setMinimumSize(new java.awt.Dimension(32, 20));
        jCBox_sort.setPreferredSize(new java.awt.Dimension(32, 20));
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 1;
        gridBagConstraints2.gridy = 0;
        gridBagConstraints2.gridwidth = 2;
        gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints2.insets = new java.awt.Insets(5, 2, 2, 5);
        gridBagConstraints2.weightx = 1.0;
        jPanel_2.add(jCBox_sort, gridBagConstraints2);
        
        jR_focus.setText("Focus On");
        jR_focus.setToolTipText("focus On");
        jR_focus.setContentAreaFilled(false);
        jR_focus.setFocusPainted(false);
        jR_focus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_mini.gif")));
        jR_focus.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_over_mini.gif")));
        jR_focus.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jR_focus.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jR_focus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jR_focusMouseReleased(evt);
            }
        });
        
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 1;
        gridBagConstraints2.gridy = 2;
        gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints2.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel_2.add(jR_focus, gridBagConstraints2);
        
        jT_focus.setToolTipText("");
        jT_focus.setEnabled(false);
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 2;
        gridBagConstraints2.gridy = 2;
        gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints2.insets = new java.awt.Insets(2, 2, 2, 5);
        gridBagConstraints2.weightx = 1.0;
        jPanel_2.add(jT_focus, gridBagConstraints2);
        
        jR_Options.setText("Keys");
        jR_Options.setToolTipText("Enable Options Keys");
        jR_Options.setContentAreaFilled(false);
        jR_Options.setFocusPainted(false);
        jR_Options.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_mini.gif")));
        jR_Options.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_over_mini.gif")));
        jR_Options.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jR_Options.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_mini.gif")));
        jR_Options.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jR_OptionsMouseReleased(evt);
            }
        });
        
        gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 0;
        gridBagConstraints2.gridy = 0;
        gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints2.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel_2.add(jR_Options, gridBagConstraints2);
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 3;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints1.weightx = 1.0;
        jP_South.add(jPanel_2, gridBagConstraints1);
        
        jPanel1.setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints3;
        
        jPanel1.setBackground(new java.awt.Color(230, 230, 230));
        jPanel1.setBorder(new javax.swing.border.TitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), " Metrics: Sort & Format", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Dialog", 1, 11)));
        jPanel1.setMinimumSize(new java.awt.Dimension(296, 150));
        jPanel1.setPreferredSize(new java.awt.Dimension(296, 150));
        jPanel2.setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints4;
        
        jPanel2.setBackground(new java.awt.Color(230, 230, 230));
        jCbx_listCriteria.setBackground(new java.awt.Color(230, 230, 230));
        gridBagConstraints4 = new java.awt.GridBagConstraints();
        gridBagConstraints4.gridx = 1;
        gridBagConstraints4.gridy = 0;
        gridBagConstraints4.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints4.insets = new java.awt.Insets(2, 2, 2, 2);
        gridBagConstraints4.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints4.weightx = 1.0;
        jPanel2.add(jCbx_listCriteria, gridBagConstraints4);
        
        jL_globalOrder.setText(" Global Order ");
        gridBagConstraints4 = new java.awt.GridBagConstraints();
        gridBagConstraints4.gridx = 0;
        gridBagConstraints4.gridy = 0;
        gridBagConstraints4.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints4.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(jL_globalOrder, gridBagConstraints4);
        
        jPanel4.setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints5;
        
        jPanel4.setBackground(new java.awt.Color(230, 230, 230));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText(" Format Value");
        gridBagConstraints5 = new java.awt.GridBagConstraints();
        gridBagConstraints5.gridwidth = 2;
        gridBagConstraints5.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints5.insets = new java.awt.Insets(2, 4, 2, 2);
        gridBagConstraints5.weightx = 1.0;
        jPanel4.add(jLabel3, gridBagConstraints5);
        
        jCkbox_absValue.setBackground(new java.awt.Color(230, 230, 230));
        jCkbox_absValue.setText("Abs Value");
        jCkbox_absValue.setToolTipText("Format Value: Absolute");
        buttonGroup2.add(jCkbox_absValue);
        jCkbox_absValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jCkbox_absValue.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jCkbox_absValue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_mini.gif")));
        jCkbox_absValue.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCkbox_absValue.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jCkbox_absValue.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_over_mini.gif")));
        jCkbox_absValue.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jCkbox_absValue.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jCkbox_absValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCkbox_absValueActionPerformed(evt);
            }
        });
        
        gridBagConstraints5 = new java.awt.GridBagConstraints();
        gridBagConstraints5.gridx = 0;
        gridBagConstraints5.gridy = 1;
        gridBagConstraints5.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints5.insets = new java.awt.Insets(2, 4, 2, 2);
        gridBagConstraints5.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(jCkbox_absValue, gridBagConstraints5);
        
        jCkbox_percValue.setBackground(new java.awt.Color(230, 230, 230));
        jCkbox_percValue.setSelected(true);
        jCkbox_percValue.setText("Perc. Value");
        jCkbox_percValue.setToolTipText("Format Value: Percent");
        buttonGroup2.add(jCkbox_percValue);
        jCkbox_percValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jCkbox_percValue.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jCkbox_percValue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_mini.gif")));
        jCkbox_percValue.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCkbox_percValue.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jCkbox_percValue.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_over_mini.gif")));
        jCkbox_percValue.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jCkbox_percValue.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jCkbox_percValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCkbox_absValueActionPerformed(evt);
            }
        });
        
        gridBagConstraints5 = new java.awt.GridBagConstraints();
        gridBagConstraints5.gridx = 1;
        gridBagConstraints5.gridy = 1;
        gridBagConstraints5.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints5.insets = new java.awt.Insets(2, 2, 2, 2);
        gridBagConstraints5.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(jCkbox_percValue, gridBagConstraints5);
        
        jL_desc_decPos.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jL_desc_decPos.setText("Decimal Position");
        jL_desc_decPos.setToolTipText("Decimal Position");
        jL_desc_decPos.setPreferredSize(new java.awt.Dimension(105, 18));
        gridBagConstraints5 = new java.awt.GridBagConstraints();
        gridBagConstraints5.gridx = 2;
        gridBagConstraints5.gridy = 0;
        gridBagConstraints5.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints5.insets = new java.awt.Insets(2, 4, 2, 2);
        gridBagConstraints5.weightx = 1.0;
        jPanel4.add(jL_desc_decPos, gridBagConstraints5);
        
        jPanel_1.setLayout(new java.awt.BorderLayout());
        
        jPanel_1.setMinimumSize(new java.awt.Dimension(40, 20));
        jPanel_1.setPreferredSize(new java.awt.Dimension(40, 20));
        jTextDecimal.setEditable(false);
        jTextDecimal.setText("2");
        jTextDecimal.setMinimumSize(new java.awt.Dimension(30, 19));
        jTextDecimal.setPreferredSize(new java.awt.Dimension(30, 18));
        jPanel_1.add(jTextDecimal, java.awt.BorderLayout.CENTER);
        
        jPanel_4.setLayout(new java.awt.GridLayout(2, 1));
        
        jB_addDecimal.setBackground(new java.awt.Color(230, 230, 230));
        jB_addDecimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow_up.png")));
        jB_addDecimal.setBorderPainted(false);
        jB_addDecimal.setContentAreaFilled(false);
        jB_addDecimal.setFocusPainted(false);
        jB_addDecimal.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jB_addDecimal.setPreferredSize(new java.awt.Dimension(15, 8));
        jB_addDecimal.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jB_addDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_addDecimalActionPerformed(evt);
            }
        });
        
        jPanel_4.add(jB_addDecimal);
        
        jB_remDecimal.setBackground(new java.awt.Color(230, 203, 230));
        jB_remDecimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow_dw.png")));
        jB_remDecimal.setBorderPainted(false);
        jB_remDecimal.setContentAreaFilled(false);
        jB_remDecimal.setFocusPainted(false);
        jB_remDecimal.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jB_remDecimal.setPreferredSize(new java.awt.Dimension(15, 8));
        jB_remDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_remDecimalActionPerformed(evt);
            }
        });
        
        jPanel_4.add(jB_remDecimal);
        
        jPanel_1.add(jPanel_4, java.awt.BorderLayout.EAST);
        
        gridBagConstraints5 = new java.awt.GridBagConstraints();
        gridBagConstraints5.gridx = 2;
        gridBagConstraints5.gridy = 1;
        gridBagConstraints5.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints5.insets = new java.awt.Insets(2, 4, 2, 2);
        gridBagConstraints5.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(jPanel_1, gridBagConstraints5);
        
        gridBagConstraints4 = new java.awt.GridBagConstraints();
        gridBagConstraints4.gridx = 0;
        gridBagConstraints4.gridy = 1;
        gridBagConstraints4.gridwidth = 2;
        gridBagConstraints4.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints4.insets = new java.awt.Insets(2, 2, 2, 2);
        gridBagConstraints4.weighty = 1.0;
        jPanel2.add(jPanel4, gridBagConstraints4);
        
        gridBagConstraints3 = new java.awt.GridBagConstraints();
        gridBagConstraints3.gridwidth = 2;
        gridBagConstraints3.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints3.insets = new java.awt.Insets(1, 1, 1, 1);
        gridBagConstraints3.weightx = 1.0;
        gridBagConstraints3.weighty = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints3);
        
        jPanel3.setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints6;
        
        jPanel3.setBackground(new java.awt.Color(230, 230, 230));
        jPanel3.setMinimumSize(new java.awt.Dimension(10, 30));
        jPanel3.setPreferredSize(new java.awt.Dimension(10, 30));
        jPanel5.setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints7;
        
        jPanel5.setBackground(new java.awt.Color(230, 230, 230));
        jCBox_AutoRows.setBackground(new java.awt.Color(230, 230, 230));
        jCBox_AutoRows.setSelected(true);
        jCBox_AutoRows.setText("Auto Page Rows ");
        jCBox_AutoRows.setToolTipText("Custom Page Rows ");
        buttonGroup3.add(jCBox_AutoRows);
        jCBox_AutoRows.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jCBox_AutoRows.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jCBox_AutoRows.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_mini.gif")));
        jCBox_AutoRows.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCBox_AutoRows.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jCBox_AutoRows.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_over_mini.gif")));
        jCBox_AutoRows.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jCBox_AutoRows.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jCBox_AutoRows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBox_PageRowsActionPerformed(evt);
            }
        });
        
        gridBagConstraints7 = new java.awt.GridBagConstraints();
        gridBagConstraints7.gridx = 0;
        gridBagConstraints7.gridy = 0;
        gridBagConstraints7.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints7.insets = new java.awt.Insets(2, 4, 2, 2);
        gridBagConstraints7.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints7.weightx = 1.0;
        jPanel5.add(jCBox_AutoRows, gridBagConstraints7);
        
        gridBagConstraints6 = new java.awt.GridBagConstraints();
        gridBagConstraints6.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints6.insets = new java.awt.Insets(0, 2, 0, 0);
        gridBagConstraints6.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(jPanel5, gridBagConstraints6);
        
        jPanel6.setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints8;
        
        jPanel6.setBackground(new java.awt.Color(230, 230, 230));
        jCBox_CustomRows.setBackground(new java.awt.Color(230, 230, 230));
        jCBox_CustomRows.setText("Custom Page Rows ");
        jCBox_CustomRows.setToolTipText("Custom Page Rows ");
        buttonGroup3.add(jCBox_CustomRows);
        jCBox_CustomRows.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jCBox_CustomRows.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jCBox_CustomRows.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_mini.gif")));
        jCBox_CustomRows.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCBox_CustomRows.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jCBox_CustomRows.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_over_mini.gif")));
        jCBox_CustomRows.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jCBox_CustomRows.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jCBox_CustomRows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBox_PageRowsActionPerformed(evt);
            }
        });
        
        gridBagConstraints8 = new java.awt.GridBagConstraints();
        gridBagConstraints8.gridx = 0;
        gridBagConstraints8.gridy = 0;
        gridBagConstraints8.insets = new java.awt.Insets(2, 2, 2, 2);
        gridBagConstraints8.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints8.weightx = 1.0;
        jPanel6.add(jCBox_CustomRows, gridBagConstraints8);
        
        jTF_customRows.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTF_customRows.setMinimumSize(new java.awt.Dimension(70, 19));
        jTF_customRows.setPreferredSize(new java.awt.Dimension(70, 19));
        jTF_customRows.setEnabled(false);
        jTF_customRows.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTF_customRowsKeyReleased(evt);
            }
        });
        
        gridBagConstraints8 = new java.awt.GridBagConstraints();
        gridBagConstraints8.gridx = 1;
        gridBagConstraints8.gridy = 0;
        gridBagConstraints8.insets = new java.awt.Insets(2, 2, 2, 2);
        gridBagConstraints8.anchor = java.awt.GridBagConstraints.WEST;
        jPanel6.add(jTF_customRows, gridBagConstraints8);
        
        gridBagConstraints6 = new java.awt.GridBagConstraints();
        gridBagConstraints6.insets = new java.awt.Insets(0, 5, 0, 0);
        gridBagConstraints6.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints6.weightx = 1.0;
        jPanel3.add(jPanel6, gridBagConstraints6);
        
        gridBagConstraints3 = new java.awt.GridBagConstraints();
        gridBagConstraints3.gridx = 0;
        gridBagConstraints3.gridy = 1;
        gridBagConstraints3.gridwidth = 2;
        gridBagConstraints3.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints3.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel1.add(jPanel3, gridBagConstraints3);
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 0;
        gridBagConstraints1.gridy = 1;
        gridBagConstraints1.gridwidth = 3;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints1.weightx = 1.0;
        jP_South.add(jPanel1, gridBagConstraints1);
        
        jP_buttons.setBackground(new java.awt.Color(230, 230, 230));
        jP_buttons.setMinimumSize(new java.awt.Dimension(183, 35));
        jP_buttons.setPreferredSize(new java.awt.Dimension(183, 35));
        jP_buttons.setOpaque(false);
        jB_ok.setBackground(new java.awt.Color(230, 230, 230));
        jB_ok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/apply.jpg")));
        jB_ok.setBorderPainted(false);
        jB_ok.setContentAreaFilled(false);
        jB_ok.setFocusPainted(false);
        jB_ok.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/apply_press.jpg")));
        jB_ok.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/apply_over.jpg")));
        jB_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_okActionPerformed(evt);
            }
        });
        
        jP_buttons.add(jB_ok);
        
        jB_close.setBackground(new java.awt.Color(230, 230, 230));
        jB_close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.jpg")));
        jB_close.setBorderPainted(false);
        jB_close.setContentAreaFilled(false);
        jB_close.setFocusPainted(false);
        jB_close.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close_press.jpg")));
        jB_close.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close_over.jpg")));
        jB_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_closeActionPerformed(evt);
            }
        });
        
        jP_buttons.add(jB_close);
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 0;
        gridBagConstraints1.gridy = 3;
        gridBagConstraints1.gridwidth = 3;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints1.weightx = 1.0;
        jP_South.add(jP_buttons, gridBagConstraints1);
        
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Sort Criteria");
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 0;
        gridBagConstraints1.gridy = 2;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints1.insets = new java.awt.Insets(3, 3, 3, 3);
        gridBagConstraints1.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints1.weightx = 1.0;
        jP_South.add(jLabel1, gridBagConstraints1);
        
        jCB_Increasing.setBackground(new java.awt.Color(230, 230, 230));
        jCB_Increasing.setSelected(true);
        jCB_Increasing.setText("Increasing");
        jCB_Increasing.setToolTipText("Order Criteria : Increasing");
        buttonGroup1.add(jCB_Increasing);
        jCB_Increasing.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCB_Increasing.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jCB_Increasing.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_mini.gif")));
        jCB_Increasing.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCB_Increasing.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jCB_Increasing.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_over_mini.gif")));
        jCB_Increasing.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jCB_Increasing.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 1;
        gridBagConstraints1.gridy = 2;
        gridBagConstraints1.insets = new java.awt.Insets(3, 3, 3, 3);
        gridBagConstraints1.weightx = 1.0;
        jP_South.add(jCB_Increasing, gridBagConstraints1);
        
        jCB_Decreasing.setBackground(new java.awt.Color(230, 230, 230));
        jCB_Decreasing.setText("Decreasing");
        jCB_Decreasing.setToolTipText("Order Criteria : Decreasing");
        buttonGroup1.add(jCB_Decreasing);
        jCB_Decreasing.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jCB_Decreasing.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jCB_Decreasing.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_mini.gif")));
        jCB_Decreasing.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCB_Decreasing.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jCB_Decreasing.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_over_mini.gif")));
        jCB_Decreasing.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        jCB_Decreasing.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over_mini.gif")));
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 2;
        gridBagConstraints1.gridy = 2;
        gridBagConstraints1.insets = new java.awt.Insets(3, 3, 3, 3);
        gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints1.weightx = 1.0;
        jP_South.add(jCB_Decreasing, gridBagConstraints1);
        
        getContentPane().add(jP_South, java.awt.BorderLayout.SOUTH);
        
        pack();
    }//GEN-END:initComponents

    private void jTF_customRowsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTF_customRowsKeyReleased
        try
        {
            pageRows = new Integer(jTF_customRows.getText().trim()).intValue();
            
            if(pageRows == 0)
                pageRows = 1;  
            
            jTF_customRows.setText(""+pageRows);
        }
        catch (Exception e)
        {
            pageRows = -1;
        }        
        //System.out.println(pageRows); 
    }//GEN-LAST:event_jTF_customRowsKeyReleased

    private void jCBox_PageRowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBox_PageRowsActionPerformed
        if(evt.getSource() == jCBox_AutoRows)
        {
            jTF_customRows.setEnabled(false);
            jTF_customRows.setText("");
            pageRows = -1;
        }            
        else
        {
            jTF_customRows.setEnabled(true);
            jTF_customRows.setText("65536");
            pageRows = 65536;
        }          
        //System.out.println(pageRows);             
    }//GEN-LAST:event_jCBox_PageRowsActionPerformed

    private void jCkbox_absValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCkbox_absValueActionPerformed
        
        if(evt.getSource() == jCkbox_percValue)
        {
            ReportAbsoluteValue = false;
            valuedecimal = 2; //valore di default per valore percentuale
        }
        else
        {
            ReportAbsoluteValue = true;
            valuedecimal = 2; //valore di default per valore assoluto         
        }
        jTextDecimal.setText(""+valuedecimal);
        //jB_addDecimal.setEnabled(!ReportAbsoluteValue);
        //jB_remDecimal.setEnabled(!ReportAbsoluteValue);
        //jTextDecimal.setEnabled(!ReportAbsoluteValue);        
    }//GEN-LAST:event_jCkbox_absValueActionPerformed

    private void jB_remDecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_remDecimalActionPerformed
        valuedecimal = new Integer(jTextDecimal.getText()).intValue();
        if(valuedecimal >0)
            valuedecimal--;
        
        jTextDecimal.setText(""+valuedecimal);
    }//GEN-LAST:event_jB_remDecimalActionPerformed

    private void jB_addDecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_addDecimalActionPerformed
        valuedecimal = new Integer(jTextDecimal.getText()).intValue();
        if(valuedecimal <7)
            valuedecimal++;
        
        jTextDecimal.setText(""+valuedecimal);
    }//GEN-LAST:event_jB_addDecimalActionPerformed

    private void jR_OptionsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jR_OptionsMouseReleased
         setOptionGUI(jR_Options.isSelected());
    }//GEN-LAST:event_jR_OptionsMouseReleased

    private void jR_focusMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jR_focusMouseReleased
        jT_focus.setEnabled(jR_focus.isSelected()); 
    }//GEN-LAST:event_jR_focusMouseReleased

    private void jB_invSelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_invSelActionPerformed
        for(int i=0; i<V_jrb_Counter.size(); i++)
        {
            javax.swing.JRadioButton appoJRB = (javax.swing.JRadioButton)V_jrb_Counter.elementAt(i);
            if(appoJRB.isEnabled())
                appoJRB.setSelected(!appoJRB.isSelected());
        }
    }//GEN-LAST:event_jB_invSelActionPerformed

    private void jB_deSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_deSelectActionPerformed
        for(int i=0; i<V_jrb_Counter.size(); i++)
        {
            javax.swing.JRadioButton appoJRB = (javax.swing.JRadioButton)V_jrb_Counter.elementAt(i);
            if(appoJRB.isEnabled())
                appoJRB.setSelected(false);
        }
    }//GEN-LAST:event_jB_deSelectActionPerformed

    private void jBselAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBselAllActionPerformed
       for(int i=0; i<V_jrb_Counter.size(); i++)
        {
            javax.swing.JRadioButton appoJRB = (javax.swing.JRadioButton)V_jrb_Counter.elementAt(i);
            if(appoJRB.isEnabled())
                appoJRB.setSelected(true);
        }
    }//GEN-LAST:event_jBselAllActionPerformed

    private void jB_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_closeActionPerformed
        SetVisibleDialog(false);
    }//GEN-LAST:event_jB_closeActionPerformed

    private void jB_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_okActionPerformed
        destroyPivot();
        ReadData();
    }//GEN-LAST:event_jB_okActionPerformed
    
    private void jCbx_listCriteriaActionPerformed(java.awt.event.ActionEvent evt) {
        
        int indexSel = jCbx_listCriteria.getSelectedIndex();
        
        elementToSort = -1;
        
        if(indexSel > 0)
        {
            elementToSort = indexSel-1;
        }
                
        //System.out.println("elementToSort"+elementToSort);
        
    }
    
    
    private void setEnableGui(boolean f)
    {
        jB_ok.setEnabled(f);
        jB_close.setEnabled(f);
        jBselAll.setEnabled(f);
        jB_deSelect.setEnabled(f);
        jB_invSel.setEnabled(f);        
        jR_Options.setEnabled(f);
        jB_addDecimal.setEnabled(f);
        jB_remDecimal.setEnabled(f);
        jTextDecimal.setEnabled(f);
        jL_desc_decPos.setEnabled(f);
        jL_globalOrder.setEnabled(f);
        jCbx_listCriteria.setEnabled(f);
        jLabel3.setEnabled(f);
        jL_desc_decPos.setEnabled(f);
        jCkbox_absValue.setEnabled(f);
        jCkbox_percValue.setEnabled(f);
        jLabel1.setEnabled(f);
        jCB_Increasing.setEnabled(f);
        jCB_Decreasing.setEnabled(f);
        jCBox_AutoRows.setEnabled(f);
        jCBox_CustomRows.setEnabled(f);
       
    }
    
    private void setOptionGUI(boolean f)
    {
        jCBox_sort.setEnabled(f);
        jR_focus.setEnabled(f);
    }
    
    
    public void run()
    {
        this.setCursor(Cur_wait);
        setEnableGui(false);
        setOptionGUI(false);
        
        if(OperationTH == 1)
        {
            
            pivotData_init = staticLib.CORBA.getPivotData(ARR_KEY_ENABLED,DEFAULT_URL,0,-1,null,-1,false,"",elementToSort,ReportAbsoluteValue);
            Str_All_counter = staticLib.CORBA.getCounterPivot();
            TotRowsPivot = staticLib.CORBA.getTotalRowsPivot();
           
        
            if((Str_All_counter == null)||(pivotData_init == null))
            {
                System.out.println("Errore di inizializzazione!!");
                staticLib.optionPanel("NO DATA FOUND PIVOT...", "DATA NOT FOUND",javax.swing.JOptionPane.ERROR_MESSAGE);
                setEnableGui(true);
                setOptionGUI(false);
                
                OperationTH = -1;
                this.setCursor(Cur_default);
                return;
            }
            /*else
            {
                System.out.println("INIT -- Local_pivotData.length "+pivotData_init.length);
                System.out.println("TotRowsPivot --> "+TotRowsPivot);
            }*/

            V_jrb_Counter = new Vector(Str_All_counter.length);
            for(int i=0; i<Str_All_counter.length; i++)
            {           
                String strCounters = new String(Str_All_counter[i]).trim();            
                //System.out.println("Str_All_counter  in analisi ==> "+strCounters);

                javax.swing.JRadioButton jrb_counter = new javax.swing.JRadioButton();
                jrb_counter.setToolTipText(strCounters);
                jrb_counter.setText(strCounters);
                jrb_counter.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_over.gif")));
                jrb_counter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off.gif")));
                jrb_counter.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over.gif")));
                jrb_counter.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on.gif")));
                jrb_counter.setFocusPainted(false);
                jrb_counter.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
                jrb_counter.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over.gif")));
                jrb_counter.setMargin(new java.awt.Insets(0, 0, 0, 0));
                jrb_counter.setContentAreaFilled(false);
                jrb_counter.setCursor(Cur_hand);
                jrb_counter.setFont(staticLib.fontA10a);

                jP_counters.add(jrb_counter);                      
                V_jrb_Counter.addElement(jrb_counter);
                
            }
            jScrollPane1.setViewportView(jP_counters);
            
            // Sort CRITERIA
            jCbx_listCriteria.addItem(staticLib.sortBy[0]);
            for(int i=0;i<Str_All_counter.length;i++)
            {
                jCbx_listCriteria.addItem(new String(Str_All_counter[i]).trim());
            }
            
            eventjCbx_listCriteria = (new java.awt.event.ActionListener(){
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCbx_listCriteriaActionPerformed(evt);
                }
            });            
            jCbx_listCriteria.addActionListener(eventjCbx_listCriteria);
            
            pivotData_init  = null;
            setOptionGUI(false);
            
        }
        else if(OperationTH == 0)
        {                        
            //System.out.println("Apri Pivot !!!!!!!!!!!");
            //JRB counters Enable                

            Vector V_NameCounterSelected = new Vector();
            Vector V_index_CounterSel = new Vector();
            for(int x=0; x<V_jrb_Counter.size(); x++)
            {
                javax.swing.JRadioButton jr_appo = (javax.swing.JRadioButton)(V_jrb_Counter.elementAt(x));
                if(jr_appo.isSelected())
                {
                   V_NameCounterSelected.addElement(new String(jr_appo.getText()));
                   V_index_CounterSel.addElement(new Integer(x));
                }
            }

            int numCounterON = V_NameCounterSelected.size();
            if(numCounterON == 0)
            {
                
                staticLib.optionPanel("Select counters for Pivot.", "INFORMATION",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                OperationTH = -1;
                setEnableGui(true);
                setOptionGUI(true);
                this.setCursor(Cur_default);                
                return;
            }

            
            String[] nameCounterSel = new String[numCounterON];
            int[] index_CounterSel  = new int[numCounterON]; 
            for(int i=0; i<numCounterON; i++)
            {
                nameCounterSel[i]   = (String)V_NameCounterSelected.elementAt(i);
                index_CounterSel[i] = ((Integer)V_index_CounterSel.elementAt(i)).intValue();
                //System.out.println("index_CounterSel["+i+"] ==>"+index_CounterSel[i]);           
            }
            
            int indexCountOrder = -1;           
            String str_focus = "";
            
            if(jR_Options.isSelected())
            {                
                indexCountOrder = jCBox_sort.getSelectedIndex();                

                                
                if(jR_focus.isSelected())
                {                    
                    str_focus = jT_focus.getText().trim();                                       
                    if(str_focus.length() > 0)
                    {
                        //System.out.println("CHIAMATA CPER FOCUS TOT ROWS string ---> "+str_focus);
                        pivotData_init = staticLib.CORBA.getPivotData(ARR_KEY_ENABLED,DEFAULT_URL,0,-1,null,indexCountOrder,false,str_focus,elementToSort,ReportAbsoluteValue);
                        TotRowsPivot = staticLib.CORBA.getTotalRowsPivot();
                        //System.out.println("DOPO CHIAMATA CPER FOCUS TOT ROWS ==> "+TotRowsPivot);
                    }
                }
            }
            
            
            //System.out.println("ORDER ==> "+jR_AscenDesceSort.isSelected()+" Indice Chiave ==> "+indexCountOrder+" str_focus="+str_focus);
                
            jf_pivot = null;
            
            jf_pivot = new MDM_JF_Pivot(JAppl,nameKeyREL,nameCounterSel,index_CounterSel,DEFAULT_URL,TotRowsPivot,indexCountOrder,jCB_Decreasing.isSelected(),str_focus,valuedecimal,pageRows);
            jf_pivot.isReportOptions(ReportAbsoluteValue,elementToSort);
            jf_pivot.setNameReportKey(nameReportKey);
            jf_pivot.setConfiguration(configuration);
            
            SetVisibleDialog(false);
        }
        
        setEnableGui(true);
        setOptionGUI(false);
        this.setCursor(Cur_default);
        OperationTH = -1;
    }
    
    
    private void initData()
    {
        OperationTH = 1;
        th = null;
        th = new Thread(this,"initData()");
        th.start();
    }
    
    private void ReadData()
    {
        OperationTH = 0;
        th = null;
        th = new Thread(this,"readData()");
        th.start();
    }
    
    public void destroyPivot()
    {
        try
        {
            if(jf_pivot != null)
                jf_pivot.destroyPivot();
        }
        catch (Exception e)
        {}        
    }
    
    private void SetVisibleDialog(boolean f)
    {
        this.setVisible(f);
    }
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        SetVisibleDialog(false);
    }//GEN-LAST:event_closeDialog

    private void setCenteredFrame(int width,int height)
    {
        java.awt.Toolkit kit = java.awt.Toolkit.getDefaultToolkit();
        java.awt.Dimension screenSize = kit.getScreenSize();        
        int screenWCenter = screenSize.width/2;
        int screenHCenter = screenSize.height/2;        
        this.setSize(width,height);
        this.setLocation(screenWCenter-(width/2),screenHCenter-(height/2));  
    }
    
      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JLabel jL_Relation;
    private javax.swing.JPanel jP_Central;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jP_counters;
    private javax.swing.JPanel jP_2;
    private javax.swing.JLabel jL_1;
    private javax.swing.JPanel jPanel_3;
    private javax.swing.JButton jBselAll;
    private javax.swing.JButton jB_deSelect;
    private javax.swing.JButton jB_invSel;
    private javax.swing.JPanel jP_South;
    private javax.swing.JPanel jPanel_2;
    private javax.swing.JComboBox jCBox_sort;
    private javax.swing.JRadioButton jR_focus;
    private javax.swing.JTextField jT_focus;
    private javax.swing.JRadioButton jR_Options;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox jCbx_listCriteria;
    private javax.swing.JLabel jL_globalOrder;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JCheckBox jCkbox_absValue;
    private javax.swing.JCheckBox jCkbox_percValue;
    private javax.swing.JLabel jL_desc_decPos;
    private javax.swing.JPanel jPanel_1;
    private javax.swing.JTextField jTextDecimal;
    private javax.swing.JPanel jPanel_4;
    private javax.swing.JButton jB_addDecimal;
    private javax.swing.JButton jB_remDecimal;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JCheckBox jCBox_AutoRows;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JCheckBox jCBox_CustomRows;
    private javax.swing.JTextField jTF_customRows;
    private javax.swing.JPanel jP_buttons;
    private javax.swing.JButton jB_ok;
    private javax.swing.JButton jB_close;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JCheckBox jCB_Increasing;
    private javax.swing.JCheckBox jCB_Decreasing;
    // End of variables declaration//GEN-END:variables

    private java.awt.event.ActionListener eventjCbx_listCriteria = null;
    private int elementToSort = -1;
    
    private Cursor Cur_default  = new Cursor(Cursor.DEFAULT_CURSOR);
    private Cursor Cur_wait     = new Cursor(Cursor.WAIT_CURSOR);
    private Cursor Cur_hand     = new Cursor(Cursor.HAND_CURSOR);
    
    private Thread th           = null;
    //private boolean TH_EXIT   = false;
    private int OperationTH     = -1;
    
    private String DEFAULT_URL  = "";
    private Vector V_jrb_Counter = null;

    
    private String Relation_Name        = null;
    private MDM_JF_Pivot jf_pivot       = null;    
    private String[] Str_All_counter    = null;
    private int TotRowsPivot = 0;
    
    private PIVOTDATANODE[] pivotData_init = null;
    private String[] nameKeyREL = null;
    private boolean ReportAbsoluteValue;
    private javax.swing.JApplet JAppl;
    private int valuedecimal = 2;
    private boolean[] ARR_KEY_ENABLED = new boolean[staticLib.MAX_PIVOT_KEYS];
    
    private int pageRows = -1; // -1 Auto page Rows
    private String nameReportKey;
    
    private getConfigFiltro configuration;
}



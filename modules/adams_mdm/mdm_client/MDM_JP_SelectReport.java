import java.awt.Cursor;
import net.etech.*;
import net.etech.ASP.*;
import net.etech.MDM.*;
import net.etech.loadconfig.*;

/**
 *<p align="center"><font size="2"><b><font size="6" face="Times New Roman, Times, serif"> Network Traffic Matrix </font></b></font></p>
 *<p align="center"> <b>Author:</b></p>
 *<p align="center">-  Beltrame Luca  - luca.beltrame@e-tech.net</a></p>
 *<p align="center">-  Ficcadenti Raffaele  - raffaele.ficcadenti@e-tech.net</a></p>
 *
 * Classe di interfaccia grafica destinata alle selezioni di scelta del tipo di Report da effetuare.
 * La classe estende un JPanel, strutturata da una JListIcon per le selezioni.
 * @see JListIcon
 */
public class MDM_JP_SelectReport extends javax.swing.JPanel {

    /**
     * Costruttore di classe:
     * il seguente costrutture accetta in ingresso due parametri,necessari per la popolazione
     * parametrica della lista di selezione. 		 
     *
     * @param struct_params riferimento all'oggetto <b>STRUCT_PARAMS</b>
     * @param configuration riferimento all'oggetto <b>getConfigFiltro</b>.
     * @see STRUCT_PARAMS 
     * @see getConfigFiltro
     */
    public MDM_JP_SelectReport(STRUCT_PARAMS StructParams,getConfigFiltro Configuration) 
    {
        this.struct_params = StructParams;
        this.configuration = Configuration;
        this.localReports = new Reports(configuration.get_ReportsSchema());
	this.localAnalisi = new Analisi(configuration.get_TipoAnalisi());
        
        initComponents();
        jL_showAbsol.setVisible(false);
        jPanel1.setVisible(false);
        jrb_AbsoluteValue.setVisible(false);
        jrb_PercentValue.setVisible(false);
        this.remove(jL_showAbsol);
        this.remove(jPanel1);
        
        
        ip = new IconPool("/images/");
        jListIconReport = new JListIcon(ip);
        jListIconReport.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScroll_List.setViewportView(jListIconReport);
        
        refresh();
        struct_params.idReportSchema = localReports.get_idReport(jListIconReport.get_ID_Value(jListIconReport.getSelectedIndex()));
	
        jListIconReport.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        }
        );
        
        
        //cursor
        jListIconReport.setCursor(Cur_hand);
        jrb_PercentValue.setCursor(Cur_hand);
        jrb_AbsoluteValue.setCursor(Cur_hand);

        //Font
        jL_desc.setFont(staticLib.fontA10);
        jL_showAbsol.setFont(staticLib.fontA10);
        jrb_PercentValue.setFont(staticLib.fontA10);
        jrb_AbsoluteValue.setFont(staticLib.fontA10);
        
        struct_params.IsPercent=true;
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jL_desc = new javax.swing.JLabel();
        jScroll_List = new javax.swing.JScrollPane();
        jL_showAbsol = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jrb_AbsoluteValue = new javax.swing.JRadioButton();
        jrb_PercentValue = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(183, 206, 255));
        setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Report Types", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Verdana", 1, 11), new java.awt.Color(0, 0, 102))); // NOI18N
        setLayout(new java.awt.GridBagLayout());

        jL_desc.setForeground(new java.awt.Color(0, 0, 102));
        jL_desc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/list.png"))); // NOI18N
        jL_desc.setText("List of Report Types");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(jL_desc, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jScroll_List, gridBagConstraints);

        jL_showAbsol.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jL_showAbsol.setText("Format Value");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(jL_showAbsol, gridBagConstraints);

        jPanel1.setBackground(new java.awt.Color(230, 230, 230));
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        buttonGroup1.add(jrb_AbsoluteValue);
        jrb_AbsoluteValue.setText("Absolute Value");
        jrb_AbsoluteValue.setToolTipText("Absolute Value");
        jrb_AbsoluteValue.setContentAreaFilled(false);
        jrb_AbsoluteValue.setFocusPainted(false);
        jrb_AbsoluteValue.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jrb_AbsoluteValue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off.gif"))); // NOI18N
        jrb_AbsoluteValue.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jrb_AbsoluteValue.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over.gif"))); // NOI18N
        jrb_AbsoluteValue.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_over.gif"))); // NOI18N
        jrb_AbsoluteValue.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over.gif"))); // NOI18N
        jrb_AbsoluteValue.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on.gif"))); // NOI18N
        jrb_AbsoluteValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_ValueActionPerformed(evt);
            }
        });
        jPanel1.add(jrb_AbsoluteValue);

        buttonGroup1.add(jrb_PercentValue);
        jrb_PercentValue.setSelected(true);
        jrb_PercentValue.setText("Percent Value");
        jrb_PercentValue.setToolTipText("Percent Value");
        jrb_PercentValue.setContentAreaFilled(false);
        jrb_PercentValue.setFocusPainted(false);
        jrb_PercentValue.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jrb_PercentValue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off.gif"))); // NOI18N
        jrb_PercentValue.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jrb_PercentValue.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over.gif"))); // NOI18N
        jrb_PercentValue.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_off_over.gif"))); // NOI18N
        jrb_PercentValue.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on_over.gif"))); // NOI18N
        jrb_PercentValue.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check_on.gif"))); // NOI18N
        jrb_PercentValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_ValueActionPerformed(evt);
            }
        });
        jPanel1.add(jrb_PercentValue);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipady = -1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jrb_ValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_ValueActionPerformed
        if(evt.getSource()==jrb_PercentValue)
            struct_params.IsPercent=true;
        else
            struct_params.IsPercent=false;
    }//GEN-LAST:event_jrb_ValueActionPerformed
    /**
     * <pre>
     * <p align="left"><font size="2"><font face="Arial, Helvetica, sans-serif">
     * Forza la selezione al valore di default <b>None</b>.
     * </font></font></p></pre>  
     */ 
    public void resetSelectFormatValue()
    {
        jrb_PercentValue.setSelected(true);
        struct_params.IsPercent = true;
    } 
    
    /**
     *Questo metodo permette l'aggiornamento dlla lista di selezione dei report.
     */
    public void refresh()
    {
        aggiornamento=true;
        jListIconReport.removeAll();

        idReports = localAnalisi.getReportsId(struct_params.AnalysisType);
        
        /*for(int j=0;j<idReports.length;j++)
        {
            System.out.println("idReports["+j+"]="+idReports[j]);
        }*/
        java.util.Vector appoReport = localReports.getDicitureReport(idReports);
        
        //ordino appoReport ---> Raffo 2008-06-11
        staticLib.ordinaStr(appoReport);
        //System.out.println("SelectReport(REFRESH) = "+appoReport.size());
        
        aggiornamento=false;
        if(appoReport.size()>0)
        {
            for(int i=0;i<appoReport.size();i++)
            {
                jListIconReport.addElement("item_report_off.png","item_report_on.png",(String)appoReport.elementAt(i));
                //System.out.println("REPORT: "+(String)appoReport.elementAt(i));
            }

            jListIconReport.repaint();
            jListIconReport.setSelectedIndex(0); 
        }
        else
        {
            //System.out.println("Refresh jListIconReport no Report");
            jScroll_List.setViewportView(jListIconReport);
        }
        
        aggiornamento=false;
        
       
    }
    
    
    
    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) 
    {
        if(aggiornamento==false)
        {
            if (!evt.getValueIsAdjusting())
            {
                //System.out.println("ID REPORTS:"+localReports.get_idReport(jListIconReport.get_ID_Value(jListIconReport.getSelectedIndex())));  
                struct_params.idReportSchema = localReports.get_idReport(jListIconReport.get_ID_Value(jListIconReport.getSelectedIndex()));
                //System.out.println("Excel -->"+localReports.get_ReportExcel(struct_params.idReportSchema));  
            }
        }
    }
    
    
    public long getSelectedReportExcel()
    {
        return localReports.get_ReportExcel(struct_params.idReportSchema);
    }
    
    public boolean getSelectedReport_UsePlugin()
    {
        return localReports.get_UsePlugin(struct_params.idReportSchema);
    }
    
    /**
     * <pre>
     * <p align="left"><font size="2"><font face="Arial, Helvetica, sans-serif">
     * Questo metodo ripristina la selezione della lista al valore di default.
     * il valore di default ï¿½ il primo elemento della Lista "item(0)".
     * </font></font></p></pre>  
     */
    public void resetSelectReport()
    {
        jListIconReport.setSelectedIndex(0); 
        struct_params.idReportSchema = localReports.get_idReport(jListIconReport.get_ID_Value(jListIconReport.getSelectedIndex()));
    } 
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jL_desc;
    private javax.swing.JLabel jL_showAbsol;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScroll_List;
    public javax.swing.JRadioButton jrb_AbsoluteValue;
    public javax.swing.JRadioButton jrb_PercentValue;
    // End of variables declaration//GEN-END:variables

    private IconPool ip = null;
    /**
     * Oggetto di tipo JListIcon, utilizzato per la selezione della tipologia di Reports. 
     */
    public JListIcon jListIconReport = null;
    
    //private Cursor Cur_default  = new Cursor(Cursor.DEFAULT_CURSOR);
    //private Cursor Cur_wait     = new Cursor(Cursor.WAIT_CURSOR);
    private Cursor Cur_hand     = new Cursor(Cursor.HAND_CURSOR);
    
    private STRUCT_PARAMS struct_params     = null;
    private getConfigFiltro configuration   = null;
    private Reports localReports    = null;
    private Analisi localAnalisi    = null;
    private int idReports[]         = null;
    private boolean aggiornamento   = true;
    
}

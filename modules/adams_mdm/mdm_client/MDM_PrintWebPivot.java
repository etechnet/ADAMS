import java.awt.*;
import java.util.*;
import java.io.*;
import java.net.*;
import javax.swing.JTable;
import javax.swing.table.*;

import jxl.Workbook;
import jxl.format.Alignment;
import jxl.format.Colour;
import jxl.write.Label;
import jxl.write.NumberFormat;
import jxl.write.NumberFormats;
import jxl.write.WritableCellFormat;
import jxl.write.WritableFont;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

public class MDM_PrintWebPivot extends javax.swing.JDialog implements Runnable {

    
    
    /** Creates new form JDialog */
    public MDM_PrintWebPivot(String nfile,javax.swing.JApplet jAp, javax.swing.JTable jTable_Pivot,String[] numKeyRel_NAME, int TypeFILE,int decimalPosition)
    {
        this.setModal(true);       
        this.JAppl = jAp;
        this.jTablePivot = jTable_Pivot;
        this.numKeyRelNAME = numKeyRel_NAME;
        String data = new String();
        Calendar dCal = Calendar.getInstance();
        data=(dCal.get(dCal.DAY_OF_MONTH)+"-"+(dCal.get(dCal.MONTH)+1)+"-"+dCal.get(dCal.YEAR)+"_"+
                                      dCal.get(dCal.HOUR_OF_DAY)+
                                      dCal.get(dCal.MINUTE)+
                                      dCal.get(dCal.SECOND));
        nomeFile = (data+"-"+nfile+".html");
        nomeFile_csv = (data+"-"+nfile+".csv");
        nomeFile_pdf = (data+"-"+nfile+".pdf");
        nomeFile_xls = (data+"-"+nfile+".xls");
        
        if(decimalPosition >= 0)
            setValueRound(decimalPosition);
        
        initComponents();        
        setCenteredFrame(300,150);  
        
        /*if (TypeFILE == 1)  // HTML 
            createHTML();
        else // CSV 
        {
            jL_title.setText("CSV Export");
            createCVS();
        }*/        
        
        switch(TypeFILE)
        {
            case 1: // HTML
            {
                createHTML();
            }break;
            case 2: // CSV
            {
                jL_title.setText("CSV Export");
                createCVS();
            }break;
            case 3: // PDF
            {
                jL_title.setText("PDF Export");
                createPDF();
            }break;
            case 4: // EXCEL
            {
                jL_title.setText("EXCEL Export");
                createEXCEL();
            }break;
        }
        
        
        //show();
	this.setVisible(true);
        
    }

    public void setValueRound(int decimalPosition)
    {
        f_double = "0";
        if(decimalPosition > 0)
        {
            f_double += ".";
            
            for(int i=0; i<decimalPosition; i++)
            {
                f_double += "0";
            }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        progressBar = new javax.swing.JProgressBar();
        jL_title = new javax.swing.JLabel();
        jB_stop = new javax.swing.JButton();
        
        getContentPane().setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("N.T.M. Pivoting Export");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        
        progressBar.setForeground(new java.awt.Color(0, 0, 204));
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 0;
        gridBagConstraints1.gridy = 1;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints1.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints1.weightx = 1.0;
        getContentPane().add(progressBar, gridBagConstraints1);
        
        jL_title.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/web.png")));
        jL_title.setText("Web Export");
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints1.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints1.weightx = 1.0;
        getContentPane().add(jL_title, gridBagConstraints1);
        
        jB_stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stop_request.jpg")));
        jB_stop.setBorderPainted(false);
        jB_stop.setContentAreaFilled(false);
        jB_stop.setFocusPainted(false);
        jB_stop.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stop_request_press.jpg")));
        jB_stop.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stop_request_over.jpg")));
        jB_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_stopActionPerformed(evt);
            }
        });
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 0;
        gridBagConstraints1.gridy = 2;
        gridBagConstraints1.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jB_stop, gridBagConstraints1);
        
        pack();
    }//GEN-END:initComponents

    private void jB_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_stopActionPerformed
        TH_EXIT = true;
    }//GEN-LAST:event_jB_stopActionPerformed

    
    private void createHTML()
    {
        OperationTH = 1;
        TH_EXIT = false;
        th = null;
        th = new Thread(this,"createHTML()");
        th.start();
    }
    
    private void createCVS()
    {
        OperationTH = 2;
        TH_EXIT = false;
        th = null;
        th = new Thread(this,"createCVS()");
        th.start();
    }
    
    private void createPDF()
    {
        OperationTH = 3;
        TH_EXIT = false;
        th = null;
        th = new Thread(this,"createPDF()");
        th.start();
    }
    
    private void createEXCEL()
    {
        OperationTH = 4;
        TH_EXIT = false;
        th = null;
        th = new Thread(this,"createEXCEL()");
        th.start();
    }
    
    
    
    public void run() 
    {                  
        this.setCursor(Cur_wait);
        
        switch(OperationTH)
        {
            case 1: // HTML
            {
                run_createHTML();
            }break;
            case 2: // CSV
            {
                run_createCSV();
            }break;
            case 3: // PDF
            {
                try
                {
                    run_createPDF();
                }catch (Exception e){
                    progressBar.setForeground(java.awt.Color.red);
                    e.printStackTrace();
                }                
            }break;
            case 4: // EXCEL
            {
                 try
                {
                    run_createEXCEL();
                }catch (Exception e){
                    progressBar.setForeground(java.awt.Color.red);
                    e.printStackTrace();
                }                
            }break;
        }
        
        OperationTH = -1;
        this.setCursor(Cur_default);
    }
     
    
    public void run_createHTML()
    {
        
        try
        {
            //System.out.println("RUN create -------------");
            String stampa = new String();

            stampa += "<HTML>\n";
            stampa += "<HEAD>\n";
            stampa += "<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n";
            stampa += "<TITLE> N.T.M. - Network Traffic Matrix Pivoting </TITLE>\n";
            stampa += "</HEAD>\n";
            stampa += "<BODY>\n";

            int countColumn = jTablePivot.getColumnCount();
            java.util.Vector V_IDcolumnValid = new Vector();
            java.util.Vector V_nameColumnValid = new Vector();

            for(int i=0; i<countColumn; i++)
            {
                int column_width = ((TableColumn)jTablePivot.getColumnModel().getColumn(i)).getWidth();
                if(column_width > 0)
                {                
                    V_nameColumnValid.addElement(new String(jTablePivot.getColumnName(i)));
                    V_IDcolumnValid.addElement(new Integer(i));
                }
            }

            int columnValid = V_IDcolumnValid.size();

            int[] ARR_IDcolumnValid = new int[columnValid];
            for(int i=0;i<columnValid;i++)
                ARR_IDcolumnValid[i] = ((Integer)V_IDcolumnValid.elementAt(i)).intValue();

            int[] iskeyBit = new int[columnValid];
            
            stampa += "<p align=\"center\"><b><font size=\"5\">N.T.M.</font><font size=\"5\"> Pivoting</font></b><BR></p>\r\n";
            stampa += "<div align=\"center\">\r\n";
            stampa += "<table BORDER=\"2\" COLS="+(columnValid+1)+" WIDTH=\"98%\" bordercolor=\"#000000\" cellspacing=\"0\" cellpadding=\"0\" style=\"border-collapse: collapse\">\r\n";      
            stampa += "<tr>\r\n";
            stampa += "<td WIDTH=\"3%\" align=\"center\" bordercolorlight=\"#000000\" bordercolordark=\"#000000\"></td>\r\n";

            if(TH_EXIT)
            {
                progressBar.setForeground(java.awt.Color.red);
                jB_stop.setEnabled(false);
                jL_title.setText("Web Export");
                int risp1 = staticLib.confirmPanel("Confirm request?","STOP Web Export",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.INFORMATION_MESSAGE); 
                if(risp1 == 0)
                {                        
                    jL_title.setText("Web Export stopped!");
                    jL_title.setIcon(icon_web_stop);
                    return;
                }

                TH_EXIT = false;
                progressBar.setForeground(java.awt.Color.blue);
                jB_stop.setEnabled(true);
            }

            for(int i=0; i<columnValid; i++)
            {            
                String strNameCOL = (String)V_nameColumnValid.elementAt(i);

                strNameCOL = strNameCOL.replaceAll(InitTagHTMLColumn,"");
                strNameCOL = strNameCOL.replaceAll(TAG2,"ç");
                strNameCOL = strNameCOL.replaceAll(TAG3,"");

                StringTokenizer STK_id_name = new StringTokenizer(strNameCOL);

                iskeyBit[i] = 0;
                if(isColumnKey(strNameCOL))
                {
                    stampa += "<td WIDTH=\"10%\" align=\"center\" bordercolorlight=\"#000000\" bordercolordark=\"#000000\" bgcolor=\"#0080BF\"><p align=center><b>\r\n";
                    iskeyBit[i] = 1;
                }
                else
                    stampa += "<td WIDTH=\"10%\" align=\"center\" bordercolorlight=\"#000000\" bordercolordark=\"#000000\" bgcolor=\"#808080\"><p align=center><b>\r\n";

                stampa += "<font color=#FFFFFF face=\"Arial\" size=\"2\">"+STK_id_name.nextToken("ç")+"</font></p></b><p align=center>\r\n";
                stampa += "<font face=\"Arial\" style=\"font-size:9pt; font-weight:700\">"+STK_id_name.nextToken("ç")+"</font></p></td>\r\n";
            }
            stampa += "</tr>\r\n";

            URL urlput = null;
            try
            {
            	            	
                // ONLY PUT
            	String urlPut_PATH = new String(defaultURL);            	 
                urlPut_PATH = urlPut_PATH.replaceAll("https","http");
                urlPut_PATH = urlPut_PATH.replaceAll("8443","8000");
                // ONLY PUT
            	
                urlput= new URL (urlPut_PATH+nomeFile);
                
               
            }
            catch (MalformedURLException e)
            {
                System.err.println(e);
            } 

            if(TH_EXIT)
            {
                progressBar.setForeground(java.awt.Color.red);
                jB_stop.setEnabled(false);
                jL_title.setText("Web Export");
                int risp1 = staticLib.confirmPanel("Confirm request?","STOP Web Export",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.INFORMATION_MESSAGE); 
                if(risp1 == 0)
                {                        
                    jL_title.setText("Web Export stopped!");
                    jL_title.setIcon(icon_web_stop);
                    return;
                }

                TH_EXIT = false;
                progressBar.setForeground(java.awt.Color.blue);
                jB_stop.setEnabled(true);
            }

            int count_row = jTablePivot.getRowCount();
            
            ////// 
            HttpImpl conn = new HttpImpl(urlput);
            conn.setRequestMethod("PUT");  
            OutputStream out = conn.getOutputStream();

            conn.send(out, "Content-Length: 2147483647"+"\r\n");
            conn.send(out,"\r\n"); // new line necessaria per riconoscere headers "Content-Length: "
            conn.send(out,stampa);
            //////

            progressBar.setForeground(java.awt.Color.blue);
            progressBar.setMinimum(0);
            progressBar.setMaximum(count_row);

            stampa ="";
            int ctrl_send = 0;
            for(int x=0; x<count_row; x++)
            {               
                stampa += "<tr>\n";
                stampa += "<td align=\"right\" bordercolorlight=\"#000000\" bordercolordark=\"#000000\" bgcolor=\"#0080BF\">";
                stampa += "<b><font color=\"#FFFFFF\" size=\"2\">"+(x+1)+"</font></b></td>\r\n";
                
                for(int c=0; c<columnValid; c++)
                {                    
                    String ObjCell = jTablePivot.getValueAt(x,ARR_IDcolumnValid[c]).toString();
                    ObjCell = ObjCell.replace('.',',');
                    
                    if(iskeyBit[c] == 1)                    
                        stampa += "<td WIDTH=\"10%\" align=\"left\" bordercolorlight=\"#000000\" bordercolordark=\"#000000\" bgcolor=\"#FFFFFF\"><font size=\"2\">"+ObjCell+"</font></td>\r\n";
                    else
                        stampa += "<td WIDTH=\"10%\" align=\"right\" bordercolorlight=\"#000000\" bordercolordark=\"#000000\" bgcolor=\"#FFFFFF\"><font size=\"2\">"+ObjCell+"</font></td>\r\n";                 
                }
                stampa += "</tr>\r\n";

                if(ctrl_send == 100)
                {
                    conn.send(out,stampa);
                    ctrl_send = 0;
                    stampa ="";
                }
                ctrl_send++;
                progressBar.setValue(x+1);

                if(TH_EXIT)
                {
                    progressBar.setForeground(java.awt.Color.red);
                    jB_stop.setEnabled(false);
                    jL_title.setText("Web Export");
                    int risp1 = staticLib.confirmPanel("Confirm request?","STOP Web Export",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.INFORMATION_MESSAGE); 
                    if(risp1 == 0)
                    {                        
                        jL_title.setText("Web Export stopped!");
                        jL_title.setIcon(icon_web_stop);
                        conn.disconnect();
                        return;
                    }

                    TH_EXIT = false;
                    progressBar.setForeground(java.awt.Color.blue);
                    jB_stop.setEnabled(true);
                }
            }           

            progressBar.setForeground(java.awt.Color.green.darker());
           
            stampa += "</table>\r\n";  
        
            stampa += "</BODY>\r\n";
            stampa += "</HTML>\r\n";

            conn.send(out,stampa);

            stampa ="";
            for(int i=0; i<100;i++)
            {
                stampa += "\r\n";
                conn.send(out,stampa);
            }
            conn.disconnect();     

            java.net.URL wwwEli = new java.net.URL(defaultURL+nomeFile);
            java.applet.AppletContext myContext = JAppl.getAppletContext();

            setVisible(false);
            dispose();

            myContext.showDocument( wwwEli, "_blank");
        }
        catch (IOException e)
        {
            System.err.println(e);
            progressBar.setForeground(java.awt.Color.red);
        }
    }
    
    
    public void run_createCSV() 
    {               
        try
        {
            //System.out.println("RUN create csv -------------");            
            String stampa_csv = new String();
 
            int countColumn = jTablePivot.getColumnCount();
            java.util.Vector V_IDcolumnValid = new Vector();
            java.util.Vector V_nameColumnValid = new Vector();

            for(int i=0; i<countColumn; i++)
            {
                int column_width = ((TableColumn)jTablePivot.getColumnModel().getColumn(i)).getWidth();
                if(column_width > 0)
                {                
                    V_nameColumnValid.addElement(new String(jTablePivot.getColumnName(i)));
                    V_IDcolumnValid.addElement(new Integer(i));
                }
            }

            int columnValid = V_IDcolumnValid.size();

            int[] ARR_IDcolumnValid = new int[columnValid];
            for(int i=0;i<columnValid;i++)
                ARR_IDcolumnValid[i] = ((Integer)V_IDcolumnValid.elementAt(i)).intValue();

                             
            for(int i=0; i<columnValid; i++)
            {            
                String strNameCOL = (String)V_nameColumnValid.elementAt(i);

                strNameCOL = strNameCOL.replaceAll(InitTagHTMLColumn,"");
                strNameCOL = strNameCOL.replaceAll(TAG2,"ç");
                strNameCOL = strNameCOL.replaceAll(TAG3,"");

                StringTokenizer STK_id_name = new StringTokenizer(strNameCOL);
                STK_id_name.nextToken("ç");                
                stampa_csv += STK_id_name.nextToken("ç")+";";
            }
           
            stampa_csv +="\r\n";
            
            URL urlput_csv = null;
            try
            {
            	
            	// ONLY PUT
            	String urlPut_PATH = new String(defaultURL);            	 
                urlPut_PATH = urlPut_PATH.replaceAll("https","http");
                urlPut_PATH = urlPut_PATH.replaceAll("8443","8000");
                // ONLY PUT
            	
                urlput_csv = new URL (urlPut_PATH+nomeFile_csv);
                
                
            }
            catch (MalformedURLException e)
            {
                System.err.println(e);
            } 
            
            if(TH_EXIT)
            {
                progressBar.setForeground(java.awt.Color.red);
                jB_stop.setEnabled(false);
                
                int risp1 = staticLib.confirmPanel("Confirm request?","STOP CSV Export",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.INFORMATION_MESSAGE); 
                if(risp1 == 0)
                {                        
                    jL_title.setText("CSV Export stopped!");
                    jL_title.setIcon(icon_web_stop);
                    return;
                }
                
                TH_EXIT = false;
                progressBar.setForeground(java.awt.Color.blue);
                jB_stop.setEnabled(true);
            }
            
            ////// 
            HttpImpl conn_csv = new HttpImpl(urlput_csv);
            conn_csv.setRequestMethod("PUT");  
            OutputStream out_csv = conn_csv.getOutputStream();
            
            conn_csv.send(out_csv, "Content-Length: 2147483647"+"\r\n");
            conn_csv.send(out_csv,"\r\n"); // new line necessaria per riconoscere headers "Content-Length: "
            conn_csv.send(out_csv,stampa_csv);
     
            int count_row = jTablePivot.getRowCount();
            
            progressBar.setForeground(java.awt.Color.blue);
            progressBar.setMinimum(0);
            progressBar.setMaximum(count_row);
            
            stampa_csv ="";
            int ctrl_send = 0;
            for(int x=0; x<count_row; x++)
            {                     
               
                for(int c=0; c<columnValid; c++)
                {             
                    String Str_Value = jTablePivot.getValueAt(x,ARR_IDcolumnValid[c]).toString();
                    Str_Value = Str_Value.replace('.',',');
                    stampa_csv += Str_Value+";";                    
                }
                stampa_csv +="\r\n";
                
                if(ctrl_send == 100)
                {
                    conn_csv.send(out_csv,stampa_csv);
                    ctrl_send = 0;
                    stampa_csv ="";
                }
                ctrl_send++;
                progressBar.setValue(x+1);
                
                if(TH_EXIT)
                {
                    progressBar.setForeground(java.awt.Color.red);
                    jB_stop.setEnabled(false);
                    
                    int risp1 = staticLib.confirmPanel("Confirm request?","STOP CSV Export",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.INFORMATION_MESSAGE); 
                    if(risp1 == 0)
                    {                        
                        jL_title.setText("CSV Export stopped!");
                        jL_title.setIcon(icon_web_stop);
                        conn_csv.disconnect();
                        return;
                    }
                    
                    TH_EXIT = false;
                    progressBar.setForeground(java.awt.Color.blue);
                    jB_stop.setEnabled(true);
                }
            }           
            
            progressBar.setForeground(java.awt.Color.green.darker());
            conn_csv.send(out_csv,stampa_csv);
            
            stampa_csv ="";
            for(int i=0; i<100;i++)
            {
                stampa_csv += "\r\n";
                conn_csv.send(out_csv,stampa_csv);
            }
            conn_csv.disconnect();  
            
            java.net.URL wwwEli = new java.net.URL(defaultURL+nomeFile_csv);
            java.applet.AppletContext myContext = JAppl.getAppletContext();
                        
            setVisible(false);
            dispose();
            
            myContext.showDocument(wwwEli,"_blank");
        }
        catch (IOException e)
        {
            System.err.println(e);
            progressBar.setForeground(java.awt.Color.red);
        }   
    }
    
    
    private File openFileChooser(String nameFile)
    {
        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
        fileChooser.setDialogTitle("Save as");
        fileChooser.setSelectedFile(new File(nameFile));
        int resp = fileChooser.showSaveDialog(this);
                
        if(resp == javax.swing.JFileChooser.APPROVE_OPTION)            
        {
            //System.out.println("APPROVE_OPTION");
            //System.out.println("getCurrentDirectory "+ fileChooser.getCurrentDirectory());
            // System.out.println("getSelectedFile "+ fileChooser.getSelectedFile()); 
            //System.out.println("getSelectedFile toString "+fileChooser.getSelectedFile().toString());
            return (fileChooser.getSelectedFile());
        }        
        else 
        {
            //System.out.println("CANCEL_OPTION or ERROR_OPTION");
            return null;
        }   
    }
    
    private void run_createPDF() throws Exception
    {
        //System.out.println("RUN ---- CREA PDF");
    	
        jL_title.setText("PDF Export, please wait... ");
        
    	int countColumn = jTablePivot.getColumnCount();
    	int count_row = jTablePivot.getRowCount();
        
        java.util.Vector V_IDcolumnValid = new Vector();
        java.util.Vector V_nameColumnValid = new Vector();
        
        for(int i=0; i<countColumn; i++)
        {
            int column_width = ((TableColumn)jTablePivot.getColumnModel().getColumn(i)).getWidth();
            if(column_width > 0)
            {                
                V_nameColumnValid.addElement(new String(jTablePivot.getColumnName(i)));
                V_IDcolumnValid.addElement(new Integer(i));
            }
        }
        
        int columnValid = V_IDcolumnValid.size();
        int[] ARR_IDcolumnValid = new int[columnValid];
        for(int i=0;i<columnValid;i++)
            ARR_IDcolumnValid[i] = ((Integer)V_IDcolumnValid.elementAt(i)).intValue();
    	
        //************
        progressBar.setForeground(java.awt.Color.yellow);
        progressBar.setMinimum(0);
        
        int gap_progressBar = (int)(count_row*0.10);
        //System.out.println("gap_progressBar "+gap_progressBar);
        
        progressBar.setMaximum(count_row+gap_progressBar);
        //************
        
        
    	//Document document=new Document();
    	Document document = new Document(PageSize.A4.rotate());    	
        
        File selectedFile = openFileChooser(nomeFile_pdf);
        
        if(selectedFile == null )            
        {
            //System.out.println("CANCEL_OPTION or ERROR_OPTION");
            TH_EXIT = true;
        }        
             
        if(TH_EXIT)
        {
            progressBar.setForeground(java.awt.Color.red);
            jB_stop.setEnabled(false);
                          
            jL_title.setText("PDF Export stopped!");
            jL_title.setIcon(icon_web_stop);
            return;
        }
        
        PdfWriter.getInstance(document,new FileOutputStream(selectedFile.toString()));
        document.open();
                      
        /*document.add(new Paragraph("N.T.M. - Network Traffic Matrix Pivoting"));
		Image img1 = Image.getInstance("/images/logo_sparkle_ok.png");
		System.out.println(img1.getClass().getName());
		document.add(img1);*/
        
        //------ Titolo
        PdfPTable table_title = new PdfPTable(1);
        table_title.setWidthPercentage(100);
        table_title.getDefaultCell().setBorder(PdfPCell.NO_BORDER);

        Font font_title = FontFactory.getFont(FontFactory.TIMES_BOLD,16); 
        
        Paragraph p_title = new Paragraph("N.T.M. - Network Traffic Matrix Pivoting",font_title);
        p_title.setAlignment("center");
        p_title.add("\n");
        
        PdfPCell cell = new PdfPCell(p_title);               
        //cell.setRotation(90);
        //cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
        cell.setVerticalAlignment(Element.ALIGN_CENTER);
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        cell.setBorder(Rectangle.NO_BORDER);
        
        BaseColor col = new BaseColor(new Color(230,230,230));
        cell.setBackgroundColor(col);
        //cell.setColspan(2);
        
        /*cell.setBorderWidthLeft(16f)
        cell.setBorderWidthBottom(12f);
        cell.setBorderWidthRight(8f);
        cell.setBorderWidthTop(4f);
        cell.setBorderColorLeft(BaseColor.RED);
        cell.setBorderColorBottom(BaseColor.ORANGE);
        cell.setBorderColorRight(BaseColor.YELLOW);
        cell.setBorderColorTop(BaseColor.GREEN);*/
        //cell.setBorderWidth(0f);
        //cell.setBorderColor(BaseColor.WHITE);
        table_title.addCell(cell);                              
                
        
        //IMMAGINE sul TITOLO
        /*Image img2 = Image.getInstance("logo_sparkle_ok.png");
        img2.setAlignment(Image.MIDDLE);
        PdfPCell cell2 = new PdfPCell(img2,false);
        cell2.setVerticalAlignment(Element.ALIGN_CENTER);
        cell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell2.setBorder(Rectangle.NO_BORDER);
        cell2.setBackgroundColor(col);
        //cell2.setColspan(5);
        table_title.addCell(cell2);*/
        
        table_title.setSpacingBefore(10f);
        table_title.setSpacingAfter(10f);

         //------ END Titolo

        document.add(table_title);
        
        // TABLE

                //-- --  HEADER ---
        PdfPTable table_header = new PdfPTable(columnValid);
        table_header.setWidthPercentage(100);		
        BaseColor col_header_key = new BaseColor(new Color(0,128,192));
        BaseColor col_header_data = new BaseColor(Color.gray);
				
        PdfPCell cell_header;
        for(int i=0; i<columnValid; i++)
        {        	
        	//String name_Column = jTablePivot.getColumnName(i);
                String name_Column = (String)(V_nameColumnValid.elementAt(i));
                
                name_Column = name_Column.replaceAll(InitTagHTMLColumn,"");
                name_Column = name_Column.replaceAll(TAG2,"ç");
                name_Column = name_Column.replaceAll(TAG3,"");
                
                StringTokenizer STK_N_Column = new StringTokenizer(name_Column);
                STK_N_Column.nextToken("ç");                   
                String nameColumnClean = STK_N_Column.nextToken("ç");
                                
                Font font_header = (FontFactory.getFont(FontFactory.TIMES_BOLD,10));       
                
        	cell_header = new PdfPCell(new Phrase(nameColumnClean,font_header));
        	cell_header.setHorizontalAlignment(Element.ALIGN_CENTER);
        	cell_header.setVerticalAlignment(Element.ALIGN_CENTER);
                
                if (isColumnKey(name_Column))
                    cell_header.setBackgroundColor(col_header_key);
                else
                    cell_header.setBackgroundColor(col_header_data);
                    
                cell_header.setBorderWidth(1f);
        	cell_header.setBorderColor(BaseColor.BLACK);
        	table_header.addCell(cell_header);
        }
	
        document.add(table_header);
        // -- END HEADER 
        
        // CALCOLO Numero scritture su File
        int CUSTOM_ROW_WRITE = 10000;
        int gap_CUSTOM_ROW_WRITE = CUSTOM_ROW_WRITE;
        int numWrite;
        boolean f_WriteExtra = false;
        
        if(CUSTOM_ROW_WRITE >= count_row)
        {
        	CUSTOM_ROW_WRITE = count_row;
        	numWrite = 1;
        	f_WriteExtra = true;
        }
        else
        {
        	numWrite = (int)(count_row/CUSTOM_ROW_WRITE);
        	if( count_row % CUSTOM_ROW_WRITE != 0 )
        		f_WriteExtra = true;
        }
        
        
        //System.out.println("Numero Righe REPORT: "+count_row);
        //System.out.println("Cicli di Scrittura: "+numWrite);
        //System.out.println("Scrittura EXTRA finale: "+f_WriteExtra);
        
        PdfPTable table = new PdfPTable(columnValid);
        table.setWidthPercentage(100);
        Font font_data = (FontFactory.getFont(FontFactory.TIMES,10)); 
        
        for(int x=0; x<count_row; x++)
        {
        	for(int c=0; c<columnValid; c++)
	        {    
                    String nomeclasse;
                    try
                    {
                        nomeclasse = (jTablePivot.getValueAt(x,ARR_IDcolumnValid[c]).getClass().getName());
                    }
                    catch (NullPointerException e)
                    {
                        nomeclasse = "java.lang.String";
                    }
                    
                    String str_Cell;
                    try
                    {
                         str_Cell = jTablePivot.getValueAt(x,ARR_IDcolumnValid[c]).toString();
                    }
                    catch (NullPointerException e)
                    {
                        nomeclasse = "java.lang.String";
                        str_Cell = "";
                    }
	            	            
	            PdfPCell cell_data = new PdfPCell(new Phrase(str_Cell,font_data));
	            
	            if( nomeclasse.equals("java.lang.String") )
	            	cell_data.setHorizontalAlignment(Element.ALIGN_LEFT);
	            else if( nomeclasse.equals("java.lang.Boolean")) 
	            	cell_data.setHorizontalAlignment(Element.ALIGN_CENTER);
	            else //if( (nomeclasse.equals("java.lang.Double")) || ((nomeclasse.equals("java.lang.Long"))) )
                	cell_data.setHorizontalAlignment(Element.ALIGN_RIGHT);
                
	            table.addCell(cell_data);	        
	        }
                progressBar.setValue(x+1);
                
                                
                if(TH_EXIT)
                {
                    progressBar.setForeground(java.awt.Color.red);
                    jB_stop.setEnabled(false);
                    jL_title.setText("PDF Export");
                    int risp1 = staticLib.confirmPanel("Confirm request?","STOP PDF Export",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.INFORMATION_MESSAGE); 
                    if(risp1 == 0)
                    {                        
                        jL_title.setText("PDF Export stopped!");
                        jL_title.setIcon(icon_web_stop);
                        return;
                    }

                    TH_EXIT = false;
                    progressBar.setForeground(java.awt.Color.blue);
                    jB_stop.setEnabled(true);
                }
                
                if(x == CUSTOM_ROW_WRITE)
                {
                    //System.out.println("Ciclo di scrittura -->"+numWrite+" scrivo numero righe -->"+CUSTOM_ROW_WRITE);
                    document.add(table);
                    table = new PdfPTable(columnValid);
                    table.setWidthPercentage(100);

                    if(numWrite > 0)
                    {
                            CUSTOM_ROW_WRITE = CUSTOM_ROW_WRITE+gap_CUSTOM_ROW_WRITE;
                            numWrite--;
                    }
                }
                
                
        }
        
        
        //END TABLE
        
        progressBar.setForeground(java.awt.Color.blue);
        jL_title.setText("PDF Export, please wait... ");
        
        
        if(f_WriteExtra)
        {
            document.add(table);
            //System.out.println("Scrivo - EXTRA - finale");
        }
        
        document.close();
        
        progressBar.setValue(progressBar.getMaximum());
        progressBar.setForeground(java.awt.Color.green.darker());
        jL_title.setText("PDF Export done.");
        
        staticLib.optionPanel("Export PDF Done.", "Export PDF",javax.swing.JOptionPane.INFORMATION_MESSAGE);             
        
        setVisible(false);
        dispose();
    }
    
    private void run_createEXCEL() throws Exception
    {
    	//System.out.println("RUN ---- CREA EXCEL");
    	
        jL_title.setText("EXCEL Export, please wait... ");
        
        int countColumn = jTablePivot.getColumnCount();
    	int count_row = jTablePivot.getRowCount();
        
        //************
        progressBar.setForeground(java.awt.Color.yellow);
        progressBar.setMinimum(0);
        
        int gap_progressBar = (int)(count_row*0.10);
        //System.out.println("gap_progressBar "+gap_progressBar);
        
        progressBar.setMaximum(count_row+gap_progressBar);
        //************
        
        
        File selectedFile = openFileChooser(nomeFile_xls);
        
        if(selectedFile == null )            
        {
            //System.out.println("CANCEL_OPTION or ERROR_OPTION");
            TH_EXIT = true;
        }        
             
        if(TH_EXIT)
        {
            progressBar.setForeground(java.awt.Color.red);
            jB_stop.setEnabled(false);
                          
            jL_title.setText("EXCEL Export stopped!");
            jL_title.setIcon(icon_web_stop);
            return;
        }
        
        
        WritableWorkbook workbook = Workbook.createWorkbook(selectedFile); 
	
        //Nome foglio di Lavoro
    	WritableSheet sheet = workbook.createSheet("N.T.M. Export Pivot", 0); 
		 
        java.util.Vector V_IDcolumnValid = new Vector();
        java.util.Vector V_nameColumnValid = new Vector();
        
        for(int i=0; i<countColumn; i++)
        {
            int column_width = ((TableColumn)jTablePivot.getColumnModel().getColumn(i)).getWidth();
            if(column_width > 0)
            {                
                V_nameColumnValid.addElement(new String(jTablePivot.getColumnName(i)));
                V_IDcolumnValid.addElement(new Integer(i));
            }
        }
        
        int columnValid = V_IDcolumnValid.size();
        int[] ARR_IDcolumnValid = new int[columnValid];
        for(int i=0;i<columnValid;i++)
            ARR_IDcolumnValid[i] = ((Integer)V_IDcolumnValid.elementAt(i)).intValue();
            
        
    	
    	// TABLE
    	// -- HEADER
    	WritableFont x_header_Font = new WritableFont(WritableFont.ARIAL, 10, WritableFont.BOLD); 	
    	
        WritableCellFormat x_header_Key = new WritableCellFormat(x_header_Font);
    	x_header_Key.setBackground(Colour.LIGHT_BLUE);
    	x_header_Key.setAlignment(Alignment.CENTRE);
    	x_header_Key.setShrinkToFit(true);
        
        WritableCellFormat x_header_data = new WritableCellFormat(x_header_Font);
    	x_header_data.setBackground(Colour.GRAY_25);
    	x_header_data.setAlignment(Alignment.CENTRE);
    	x_header_data.setShrinkToFit(true);

    	for(int c=0; c<columnValid; c++)
    	{
    		//String name_Column = jTablePivot.getColumnName(c);
                String name_Column = (String)(V_nameColumnValid.elementAt(c)); 
                
                name_Column = name_Column.replaceAll(InitTagHTMLColumn,"");
                name_Column = name_Column.replaceAll(TAG2,"ç");
                name_Column = name_Column.replaceAll(TAG3,"");
                
                StringTokenizer STK_N_Column = new StringTokenizer(name_Column);
                STK_N_Column.nextToken("ç");                   
                String nameColumnClean = STK_N_Column.nextToken("ç");                
                
                Label header_label;
                if(isColumnKey(name_Column))
                    header_label = new Label(ARR_IDcolumnValid[c], 0, nameColumnClean,x_header_Key);
                else
                    header_label = new Label(ARR_IDcolumnValid[c], 0, nameColumnClean,x_header_data);
                
    		sheet.addCell(header_label);
    	}
    	// -- END HEADER
    	
    	int gap_afterHeader = 1;
    	
                
        WritableCellFormat cell_format_integer  = new WritableCellFormat(new NumberFormat(f_integer));
        WritableCellFormat cell_format_double   = new WritableCellFormat(new NumberFormat(f_double));
        
    	for(int r=0; r<count_row; r++)
    	{
    		for(int c=0; c<columnValid; c++)
	        {  
                    String nomeclasse = (jTablePivot.getValueAt(r,ARR_IDcolumnValid[c]).getClass().getName());
                    String str_Cell = jTablePivot.getValueAt(r,ARR_IDcolumnValid[c]).toString();
           
                    //System.out.println("-----> "+nomeclasse.toString());
                    	                                
                    if( (nomeclasse.equals("java.lang.Double")) || ((nomeclasse.equals("java.lang.Long"))) )
	            {	            	            	
	            	Double val_Cell = new Double(str_Cell);
	            	double double_cell = val_Cell.doubleValue();	            	
	            	
	            	// Formattazione Forzata
	            	jxl.write.Number number;
	            	if(nomeclasse.equals("java.lang.Long"))
                            number = new jxl.write.Number(ARR_IDcolumnValid[c], (r+gap_afterHeader), double_cell,cell_format_integer);
	            	else
                            number = new jxl.write.Number(ARR_IDcolumnValid[c], (r+gap_afterHeader), double_cell,cell_format_double);
	            		            	
	            	 //cell_format.setShrinkToFit(true);
	            	
	            	// END Formattazione Forzata
	            	
	            	//----- Senza Formattazione scrive tutto quello passato
	            	/*WritableCellFormat cell_format = new WritableCellFormat();	   
	            	//cell_format.setShrinkToFit(true);
	            	//cell_format.setWrap(true);
	            	jxl.write.Number number = new jxl.write.Number(ARR_IDcolumnValid[c], (r+gap_afterHeader), double_cell,cell_format);*/
	            	
	            	
	            	//END ----- Senza Formattazione scrive tutto quello passato
	            	
	            	sheet.addCell(number); 
	            }
	            else
	            {
	            	Label label = new Label(ARR_IDcolumnValid[c], (r+gap_afterHeader), str_Cell);
    			sheet.addCell(label);
	            } 
                    
                    progressBar.setValue(r+1);     
                    if(TH_EXIT)
                    {
                        progressBar.setForeground(java.awt.Color.red);
                        jB_stop.setEnabled(false);
                        jL_title.setText("EXCEL Export");
                        int risp1 = staticLib.confirmPanel("Confirm request?","STOP EXCEL Export",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.INFORMATION_MESSAGE); 
                        if(risp1 == 0)
                        {                        
                            jL_title.setText("EXCEL Export stopped!");
                            jL_title.setIcon(icon_web_stop);
                            return;
                        }

                        TH_EXIT = false;
                        progressBar.setForeground(java.awt.Color.blue);
                        jB_stop.setEnabled(true);
                    }
	        }                
    	}
    	
        progressBar.setForeground(java.awt.Color.blue);
        jL_title.setText("EXCEL Export, please wait... ");
        
        workbook.write();
        workbook.close(); 
        
        progressBar.setValue(progressBar.getMaximum());
        progressBar.setForeground(java.awt.Color.green.darker());
        jL_title.setText("EXCEL Export done.");
        
        staticLib.optionPanel("Export EXCEL Done.", "Export EXCEL",javax.swing.JOptionPane.INFORMATION_MESSAGE);             
        
        setVisible(false);
        dispose();
		
    }
    
    
    
    private boolean isColumnKey(String NameColumn_HTML)
    {
        for(int i=0; i<numKeyRelNAME.length; i++)
        {
            if(NameColumn_HTML.indexOf(numKeyRelNAME[i]) != -1)
                return true;
        }
        return false;
    }
        

    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        
        if(TH_EXIT == false)
        {
            TH_EXIT = true;
        }
        else
        {
            setVisible(false);
            dispose();
        }
    }//GEN-LAST:event_closeDialog

    
    private void setCenteredFrame(int width,int height)
    {
        java.awt.Toolkit kit = java.awt.Toolkit.getDefaultToolkit();
        java.awt.Dimension screenSize = kit.getScreenSize();        
        int screenWCenter = screenSize.width/2;
        int screenHCenter = screenSize.height/2;        
        this.setSize(width,height);
        this.setLocation(screenWCenter-(width/2),screenHCenter-(height/2));  
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel jL_title;
    private javax.swing.JButton jB_stop;
    // End of variables declaration//GEN-END:variables

    private final String defaultURL = staticLib.path_report;

    private String nomeFile = new String();
    private String nomeFile_csv = new String();
    private String nomeFile_pdf = new String();
    private String nomeFile_xls = new String();
    
    private javax.swing.JApplet JAppl;
    private javax.swing.JTable jTablePivot;
    private String[] numKeyRelNAME;
    
    private String InitTagHTMLColumn = "<html><p align=center><b><font color=#FFFFFF>";
    private String TAG2 = "</font></p></b><p align=center><font face=\"Arial\" style=\"font-size:11pt\">";
    private String TAG3 = "</font></p></html>"; 
    
    private Thread th        = null;
    private boolean TH_EXIT = false;
    private int OperationTH   = -1;
    
    private Cursor Cur_default  = new Cursor(Cursor.DEFAULT_CURSOR);
    private Cursor Cur_wait     = new Cursor(Cursor.WAIT_CURSOR);
    private Cursor Cur_hand     = new Cursor(Cursor.HAND_CURSOR);
    
    javax.swing.ImageIcon icon_web_stop = new javax.swing.ImageIcon(getClass().getResource("/images/web_stop.png"));
    
    private int VALUE_DECIMAL = 0;
    private String f_integer = "0";
    //String f_percet_integer = "0%";
    private String f_double = "0";
    //String f_percet_double = "0.00%";

}
